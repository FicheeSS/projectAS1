; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Debug\Animator.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__47F37C5A_xtr1common DB 01H
__81812A28_cstddef DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__244AF085_cstdlib DB 01H
__7FE5F402_limits DB 01H
__589FA321_type_traits DB 01H
__97D3638F_vcruntime_new@h DB 01H
__DD5FCA34_compare DB 01H
__A751F051_corecrt_memory@h DB 01H
__32E5F013_string@h DB 01H
__12269DE6_xutility DB 01H
__C69F69CF_tuple DB 01H
__20BB4341_malloc@h DB 01H
__B0A13A33_vcruntime_exception@h DB 01H
__FF458F76_exception DB 01H
__79D216CD_xmemory DB 01H
__69958C8C_xtree DB 01H
__374A57BA_xpolymorphic_allocator@h DB 01H
__65ADBEC9_vcruntime_typeinfo@h DB 01H
__62F96EFF_typeinfo DB 01H
__A0B61CF9_time@h DB 01H
__DDB379A0_xthreads@h DB 01H
__14D0A8C0_atomic DB 01H
__C34BF88C_memory DB 01H
__60BC708E_cmath DB 01H
__68B92D9D_xbit_ops@h DB 01H
__0D019051_xstring DB 01H
__0F13B0E8_xhash DB 01H
__BFE0F84B_functional DB 01H
__1589CDA2_algorithm DB 01H
__324884E2_vector DB 01H
__B2B5E639_FrameAnimation@hpp DB 01H
__760BB52B_stdexcept DB 01H
__A4685E82_xcall_once@h DB 01H
__1B354CA2_system_error DB 01H
__EF0EAF83_xfacet DB 01H
__B2D2BA86_ctype@h DB 01H
__7D708D37_xlocinfo DB 01H
__D23FE460_xlocale DB 01H
__4495FA24_xiosbase DB 01H
__4CB88277_xlocnum DB 01H
__845859A3_ios DB 01H
__98EE5594_InputStream@hpp DB 01H
__489ACE24_NonCopyable@hpp DB 01H
__B7987E10_string DB 01H
__FE33131C_xlocmes DB 01H
__67DA974F_xlocmon DB 01H
__D96D2425_xloctime DB 01H
__54960FDB_Thread@inl DB 01H
__7A0EAAD2_ContextSettings@hpp DB 01H
__A5094FF8_Drawable@hpp DB 01H
__617EE64B_Glyph@hpp DB 01H
__4B7B7884_Font@hpp DB 01H
__6E70D40E_Animator@h DB 01H
__6C52B218_Animator@cpp DB 01H
__68A60A21_locale DB 01H
__C12F3EA4_ostream DB 01H
__74AB0D97_streambuf DB 01H
__038A2AA6_iterator DB 01H
__B30C2184_iosfwd DB 01H
__1347750E_utility DB 01H
__E458E21C_xstddef DB 01H
__E273110D_Vector2@inl DB 01H
__23F118AA_Vector2@hpp DB 01H
__6AE60262_Rect@inl DB 01H
__AB640BC5_Rect@hpp DB 01H
__D138E2DC_Animator@inl DB 01H
__7BF085A0_Animator@hpp DB 01H
__F54903A0_xatomic@h DB 01H
__84DB8D4B_map DB 01H
msvcjmc	ENDS
CONST	SEGMENT
$SG98451 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'o'
	DB	00H, 'b', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'G'
	DB	00H, 'i', 00H, 't', 00H, 'H', 00H, 'u', 00H, 'b', 00H, '\', 00H
	DB	'a', 00H, 's', 00H, '-', 00H, 'p', 00H, 't', 00H, 's', 00H, '1'
	DB	00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'v', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'j'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'u', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, '1', 00H, '\', 00H, 'v', 00H, 'c', 00H, 'p'
	DB	00H, 'k', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'x', 00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'x'
	DB	00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'i', 00H, 'n'
	DB	00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H
	DB	'T', 00H, 'h', 00H, 'o', 00H, 'r', 00H, '\', 00H, 'A', 00H, 'n'
	DB	00H, 'i', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, '\', 00H, 'D', 00H, 'e', 00H, 't', 00H, 'a'
	DB	00H, 'i', 00H, 'l', 00H, '\', 00H, 'A', 00H, 'n', 00H, 'i', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H
$SG98452 DB	'i', 00H, 's', 00H, 'P', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'A', 00H, 'n', 00H, 'i', 00H, 'm'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '(', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG99810 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'o'
	DB	00H, 'b', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'G'
	DB	00H, 'i', 00H, 't', 00H, 'H', 00H, 'u', 00H, 'b', 00H, '\', 00H
	DB	'a', 00H, 's', 00H, '-', 00H, 'p', 00H, 't', 00H, 's', 00H, '1'
	DB	00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'v', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'j'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'u', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, '1', 00H, '\', 00H, 'v', 00H, 'c', 00H, 'p'
	DB	00H, 'k', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'x', 00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'x'
	DB	00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'i', 00H, 'n'
	DB	00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H
	DB	'T', 00H, 'h', 00H, 'o', 00H, 'r', 00H, '\', 00H, 'A', 00H, 'n'
	DB	00H, 'i', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, '\', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 'A', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'h', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG99811 DB	'!', 00H, 'm', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 's', 00H, '.', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 't'
	DB	00H, 'y', 00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG99812 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'o'
	DB	00H, 'b', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'G'
	DB	00H, 'i', 00H, 't', 00H, 'H', 00H, 'u', 00H, 'b', 00H, '\', 00H
	DB	'a', 00H, 's', 00H, '-', 00H, 'p', 00H, 't', 00H, 's', 00H, '1'
	DB	00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'v', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'j'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'u', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, '1', 00H, '\', 00H, 'v', 00H, 'c', 00H, 'p'
	DB	00H, 'k', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'x', 00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'x'
	DB	00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'i', 00H, 'n'
	DB	00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H
	DB	'T', 00H, 'h', 00H, 'o', 00H, 'r', 00H, '\', 00H, 'A', 00H, 'n'
	DB	00H, 'i', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, '\', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 'A', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'h', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG98082 DB	'invalid argument', 00H
	ORG $+3
$SG99813 DB	'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, '.', 00H, 'f', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '1', 00H
	DB	'.', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG92109 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'o'
	DB	00H, 'b', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'G'
	DB	00H, 'i', 00H, 't', 00H, 'H', 00H, 'u', 00H, 'b', 00H, '\', 00H
	DB	'a', 00H, 's', 00H, '-', 00H, 'p', 00H, 't', 00H, 's', 00H, '1'
	DB	00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'v', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'j'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'u', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, '1', 00H, '\', 00H, 'v', 00H, 'c', 00H, 'p'
	DB	00H, 'k', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'x', 00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'x'
	DB	00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'i', 00H, 'n'
	DB	00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H
	DB	'T', 00H, 'h', 00H, 'o', 00H, 'r', 00H, '\', 00H, 'A', 00H, 'n'
	DB	00H, 'i', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, '\', 00H, 'D', 00H, 'e', 00H, 't', 00H, 'a'
	DB	00H, 'i', 00H, 'l', 00H, '\', 00H, 'A', 00H, 'n', 00H, 'i', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H
$SG98083 DB	'%s', 00H
	ORG $+1
$SG92110 DB	'm', 00H, 'A', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'M', 00H, 'a', 00H, 'p'
	DB	00H, '.', 00H, 'f', 00H, 'i', 00H, 'n', 00H, 'd', 00H, '(', 00H
	DB	'i', 00H, 'd', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'm', 00H, 'A', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'M', 00H, 'a', 00H, 'p'
	DB	00H, '.', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '(', 00H, ')', 00H
	DB	00H, 00H
$SG81867 DB	'walkLeft', 00H
	ORG $+3
$SG92124 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'o'
	DB	00H, 'b', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'G'
	DB	00H, 'i', 00H, 't', 00H, 'H', 00H, 'u', 00H, 'b', 00H, '\', 00H
	DB	'a', 00H, 's', 00H, '-', 00H, 'p', 00H, 't', 00H, 's', 00H, '1'
	DB	00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'v', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'j'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'u', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, '1', 00H, '\', 00H, 'v', 00H, 'c', 00H, 'p'
	DB	00H, 'k', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'x', 00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'x'
	DB	00H, '8', 00H, '6', 00H, '-', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '\', 00H, 'i', 00H, 'n'
	DB	00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H
	DB	'T', 00H, 'h', 00H, 'o', 00H, 'r', 00H, '\', 00H, 'A', 00H, 'n'
	DB	00H, 'i', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, '\', 00H, 'D', 00H, 'e', 00H, 't', 00H, 'a'
	DB	00H, 'i', 00H, 'l', 00H, '\', 00H, 'A', 00H, 'n', 00H, 'i', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '.', 00H, 'i'
	DB	00H, 'n', 00H, 'l', 00H, 00H, 00H
$SG92125 DB	'i', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'm', 00H, 'A', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'M', 00H, 'a', 00H
	DB	'p', 00H, '.', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '(', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG81868 DB	'walkRight', 00H
	ORG $+2
$SG94399 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.29.30133\include\xlocale', 00H
$SG98084 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.29.30133\include\xmemory', 00H
$SG98085 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H
	DB	'1', 00H, '3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG98086 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG98087 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81869 DB	'idle', 00H
	ORG $+3
$SG81870 DB	'jump', 00H
	ORG $+3
$SG81871 DB	'crouch', 00H
	ORG $+1
$SG81873 DB	'idle', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	_wmemcpy
PUBLIC	?is_constant_evaluated@std@@YA_NXZ		; std::is_constant_evaluated
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??Mstd@@YA_NUstrong_ordering@0@$$T@Z		; std::operator<
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@I@std@@YAII@Z			; std::_Convert_size<unsigned int>
PUBLIC	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_unlocked
PUBLIC	?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_locked
PUBLIC	?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked
PUBLIC	?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
PUBLIC	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
PUBLIC	?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IAE@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z	; std::_Char_traits<char,int>::move
PUBLIC	?assign@?$_Char_traits@DH@std@@SAPADQADID@Z	; std::_Char_traits<char,int>::assign
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQBD0I@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z	; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAPADQADID@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXQADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$Rect@H@sf@@QAE@HHHH@Z			; sf::Rect<int>::Rect<int>
PUBLIC	?begin@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::begin
PUBLIC	?end@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::end
PUBLIC	?empty@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE_NXZ ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::empty
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@PAUFrame@detail@thor@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEABUFrame@detail@thor@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator==
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >
PUBLIC	?__autoclassinit2@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEXI@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::__autoclassinit2
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
PUBLIC	?generatePlayerAnimation@Animator@@QAEXXZ	; Animator::generatePlayerAnimation
PUBLIC	??1Animator@@QAE@XZ				; Animator::~Animator
PUBLIC	?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z	; addFrames
PUBLIC	??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation
PUBLIC	?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation
PUBLIC	?isPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE_NXZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::isPlayingAnimation
PUBLIC	?getPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::getPlayingAnimation
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::max_size
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >
PUBLIC	?_Copy_assign@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_assign
PUBLIC	??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::operator=
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::max_size
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::clear
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::find
PUBLIC	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Check_grow_by_1
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Min
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Rrotate
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Insert_node
PUBLIC	?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Orphan_ptr
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
PUBLIC	??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::operator=
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
PUBLIC	?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
PUBLIC	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::operator=
PUBLIC	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::operator=
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator==
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
PUBLIC	??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator->
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
PUBLIC	??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
PUBLIC	?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEXI@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::__autoclassinit2
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	?__autoclassinit2@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXI@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::__autoclassinit2
PUBLIC	??_G?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEPAXI@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	??0?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ	; std::_Func_class<void,sf::Sprite &,float>::_Func_class<void,sf::Sprite &,float>
PUBLIC	??1?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ	; std::_Func_class<void,sf::Sprite &,float>::~_Func_class<void,sf::Sprite &,float>
PUBLIC	?_Empty@?$_Func_class@XAAVSprite@sf@@M@std@@IBE_NXZ ; std::_Func_class<void,sf::Sprite &,float>::_Empty
PUBLIC	?_Reset_copy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXABV12@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Reset_copy
PUBLIC	?_Reset_move@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAV12@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Reset_move
PUBLIC	?_Tidy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXXZ ; std::_Func_class<void,sf::Sprite &,float>::_Tidy
PUBLIC	?_Local@?$_Func_class@XAAVSprite@sf@@M@std@@ABE_NXZ ; std::_Func_class<void,sf::Sprite &,float>::_Local
PUBLIC	?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
PUBLIC	?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set
PUBLIC	??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>
PUBLIC	??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@$$QAV01@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>
PUBLIC	??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ ; std::function<void __cdecl(sf::Sprite &,float)>::~function<void __cdecl(sf::Sprite &,float)>
PUBLIC	??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z ; thor::FrameAnimation::operator()<sf::Sprite>
PUBLIC	??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXQAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??0?$_Func_base@XAAVSprite@sf@@M@std@@QAE@XZ	; std::_Func_base<void,sf::Sprite &,float>::_Func_base<void,sf::Sprite &,float>
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Construct_in_place@PADAAPAD@std@@YAXAAPAD0@Z ; std::_Construct_in_place<char *,char * &>
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Get_size_of_n@$00@std@@YAII@Z		; std::_Get_size_of_n<1>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$construct_at@DABDX@std@@YAPADQADABD@Z	; std::construct_at<char,char const &,void>
PUBLIC	??$_Voidify_iter@PAD@std@@YAPAXPAD@Z		; std::_Voidify_iter<char *>
PUBLIC	??$forward@ABD@std@@YAABDABD@Z			; std::forward<char const &>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$construct_at@U_Container_proxy@std@@PAU_Container_base12@2@X@std@@YAPAU_Container_proxy@0@QAU10@$$QAPAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>
PUBLIC	??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::adopt<thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
PUBLIC	??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABU01@@Z ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
PUBLIC	??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@$$QAU01@@Z ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
PUBLIC	??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::~pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAEPAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::`scalar deleting destructor'
PUBLIC	??$?0ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@AAVTime@sf@@$0A@@?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@1@AAVTime@sf@@@Z ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time><std::function<void __cdecl(sf::Sprite &,float)> const &,sf::Time &,0>
PUBLIC	??$make_pair@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>
PUBLIC	??$insert@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@$0A@@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,0>
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>
PUBLIC	??$move@AAVFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ; std::move<thor::FrameAnimation &>
PUBLIC	??$_Reset@VFrameAnimation@thor@@@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAVFrameAnimation@thor@@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Reset<thor::FrameAnimation>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$forward@ABQAD@std@@YAABQADABQAD@Z		; std::forward<char * const &>
PUBLIC	??$construct_at@PADABQADX@std@@YAPAPADQAPADABQAD@Z ; std::construct_at<char *,char * const &,void>
PUBLIC	??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z	; std::_Voidify_iter<char * *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct_at@PADAAPADX@std@@YAPAPADQAPADAAPAD@Z ; std::construct_at<char *,char * &,void>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
PUBLIC	??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1><>
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$move@ABV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@@std@@YA$$QBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@0@ABV10@@Z ; std::move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const &>
PUBLIC	??$forward@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YAABV?$function@$$A6AXAAVSprite@sf@@M@Z@0@ABV10@@Z ; std::forward<std::function<void __cdecl(sf::Sprite &,float)> const &>
PUBLIC	??$forward@AAVTime@sf@@@std@@YAAAVTime@sf@@AAV12@@Z ; std::forward<sf::Time &>
PUBLIC	??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$forward@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@@std@@YA$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@AAU10@@Z ; std::forward<std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
PUBLIC	??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>
PUBLIC	??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	??$emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	??$_Test_callable@VFrameAnimation@thor@@@std@@YA_NABVFrameAnimation@thor@@@Z ; std::_Test_callable<thor::FrameAnimation>
PUBLIC	?_Copy@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Copy
PUBLIC	?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Move
PUBLIC	?_Do_call@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEXAAVSprite@sf@@$$QAM@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Do_call
PUBLIC	?_Target_type@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEABVtype_info@@XZ ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Target_type
PUBLIC	?_Get@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPBXXZ ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Get
PUBLIC	?_Delete_this@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEX_N@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Delete_this
PUBLIC	??1?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::~_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>
PUBLIC	??_G?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAEPAXI@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`scalar deleting destructor'
PUBLIC	??$forward@VFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ; std::forward<thor::FrameAnimation>
PUBLIC	??$?0VFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@$$QAVFrameAnimation@thor@@@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation,0>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$forward@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABU10@@Z ; std::forward<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
PUBLIC	??$_Deallocate@$03$0A@@std@@YAXPAXI@Z		; std::_Deallocate<4,0>
PUBLIC	??$addressof@$$CBVFrameAnimation@thor@@@std@@YAPBVFrameAnimation@thor@@ABV12@@Z ; std::addressof<thor::FrameAnimation const >
PUBLIC	??$forward@AAVSprite@sf@@@std@@YAAAVSprite@sf@@AAV12@@Z ; std::forward<sf::Sprite &>
PUBLIC	??$forward@M@std@@YA$$QAMAAM@Z			; std::forward<float>
PUBLIC	??$_Call@AAVFrameAnimation@thor@@AAVSprite@sf@@M@?$_Invoker_ret@X$00@std@@SAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z ; std::_Invoker_ret<void,1>::_Call<thor::FrameAnimation &,sf::Sprite &,float>
PUBLIC	??$?0ABVFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@ABVFrameAnimation@thor@@@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation const &,0>
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const >
PUBLIC	??$_Get_size_of_n@$0GA@@std@@YAII@Z		; std::_Get_size_of_n<96>
PUBLIC	??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@std@@YAPBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> > const >
PUBLIC	??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@0@ABV10@@Z ; std::_Pocca<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$_Copy@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXABV01@U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>
PUBLIC	??$_Emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@1@AB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool const &,0>
PUBLIC	??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
PUBLIC	??$_Debug_lt_pred@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@$0A@@std@@YA_NABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
PUBLIC	??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
PUBLIC	??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@ABQAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &,void>
PUBLIC	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * *>
PUBLIC	??$invoke@AAVFrameAnimation@thor@@AAVSprite@sf@@M@std@@YAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z ; std::invoke<thor::FrameAnimation &,sf::Sprite &,float>
PUBLIC	??$forward@ABVFrameAnimation@thor@@@std@@YAABVFrameAnimation@thor@@ABV12@@Z ; std::forward<thor::FrameAnimation const &>
PUBLIC	??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>
PUBLIC	??$move@AAV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YA$$QAV?$function@$$A6AXAAVSprite@sf@@M@Z@0@AAV10@@Z ; std::move<std::function<void __cdecl(sf::Sprite &,float)> &>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@AAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>::pointer_to
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@Z ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >::_Extract
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Release
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,bool,0>
PUBLIC	??$?0PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool,0>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > > >
PUBLIC	??$forward@AB_N@std@@YAAB_NAB_N@Z		; std::forward<bool const &>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	??$_Copy_or_move@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_or_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::integral_constant<bool,0> >
PUBLIC	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::nullptr_t>
PUBLIC	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAXQAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
PUBLIC	??$_Buynode@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
PUBLIC	??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@0@ABV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > const >
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void>
PUBLIC	??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::_Voidify_iter<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>
PUBLIC	??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@AAPAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,void>
PUBLIC	??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
PUBLIC	??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@AAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@AAU10@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &,void>
PUBLIC	__JustMyCode_Default
PUBLIC	?less@strong_ordering@std@@2U12@B		; std::strong_ordering::less
PUBLIC	?equal@strong_ordering@std@@2U12@B		; std::strong_ordering::equal
PUBLIC	?greater@strong_ordering@std@@2U12@B		; std::strong_ordering::greater
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1FM@FOFDAEGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0GI@GFIAKDGM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0GI@OGMNKBMN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_0GG@BJFDHGEO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MM@JHPNFGGF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CGA@LHBKKDGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@ ; `string'
PUBLIC	??_C@_0GJ@MPIAFDPJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@IFKPGDLA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_7?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@ ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`vftable'
PUBLIC	??_R0?AVFrameAnimation@thor@@@8			; thor::FrameAnimation `RTTI Type Descriptor'
PUBLIC	??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@ ; `string'
PUBLIC	??_C@_1CFO@DPFJDIHM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@ ; `string'
PUBLIC	??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@ ; `string'
PUBLIC	??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1PE@OKLODLBI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@ ; `string'
PUBLIC	??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ ; `string'
PUBLIC	??_C@_1PC@NJLMOKFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ ; `string'
PUBLIC	??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_1OM@HCLAOKIM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_base@XAAVSprite@sf@@M@std@@@8	; std::_Func_base<void,sf::Sprite &,float> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_base@XAAVSprite@sf@@M@std@@8	; std::_Func_base<void,sf::Sprite &,float>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_base@XAAVSprite@sf@@M@std@@8	; std::_Func_base<void,sf::Sprite &,float>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@XAAVSprite@sf@@M@std@@8 ; std::_Func_base<void,sf::Sprite &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@ ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@@8 ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8 ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8 ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8 ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp_?seconds@sf@@YA?AVTime@1@M@Z:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	_strlen:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	__imp___wassert:PROC
EXTRN	__imp_??0FrameAnimation@thor@@QAE@XZ:PROC
EXTRN	__imp_?addFrame@FrameAnimation@thor@@QAEXMABV?$Rect@H@sf@@@Z:PROC
EXTRN	__imp_?ensureNormalized@FrameAnimation@thor@@ABEXXZ:PROC
EXTRN	__imp_??1FrameAnimation@thor@@QAE@XZ:PROC
EXTRN	__imp_??0FrameAnimation@thor@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0FrameAnimation@thor@@QAE@$$QAV01@@Z:PROC
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?setOrigin@Transformable@sf@@QAEXABV?$Vector2@M@2@@Z:PROC
EXTRN	__imp_?setTextureRect@Sprite@sf@@QAEXABV?$Rect@H@2@@Z:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcmp:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8 DD FLAT:??_R0?AV?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@@8 ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8 ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@XAAVSprite@sf@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8 DD 00H ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSpri'
	DB	'te@sf@@M@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@ DD 00H ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@@8
	DD	FLAT:??_R3?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@XAAVSprite@sf@@M@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@XAAVSprite@sf@@M@std@@8 DD FLAT:??_R0?AV?$_Func_base@XAAVSprite@sf@@M@std@@@8 ; std::_Func_base<void,sf::Sprite &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_base@XAAVSprite@sf@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_base@XAAVSprite@sf@@M@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@XAAVSprite@sf@@M@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_base@XAAVSprite@sf@@M@std@@8 ; std::_Func_base<void,sf::Sprite &,float>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@XAAVSprite@sf@@M@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@XAAVSprite@sf@@M@std@@8 DD 00H	; std::_Func_base<void,sf::Sprite &,float>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Func_base@XAAVSprite@sf@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@XAAVSprite@sf@@M@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Func_base@XAAVSprite@sf@@M@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_base<void,sf::Sprite &,float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_base@XAAVSprite@sf@@M@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OM@HCLAOKIM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1OM@HCLAOKIM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H
	DB	'h', 00H, 'o', 00H, 'r', 00H, ':', 00H, ':', 00H, 'd', 00H, 'e'
	DB	00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ DB 'vector iterators '
	DB	'incompatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
CONST	SEGMENT
??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ DB 'can''t dere'
	DB	'ference out of range vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@NJLMOKFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1PC@NJLMOKFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H
	DB	'h', 00H, 'o', 00H, 'r', 00H, ':', 00H, ':', 00H, 'd', 00H, 'e'
	DB	00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
CONST	SEGMENT
??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ DB 'can''t derefe'
	DB	'rence value-initialized vector iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
CONST	SEGMENT
??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'n'
	DB	00H, 'd', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@
CONST	SEGMENT
??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@ DB 'can''t increm'
	DB	'ent vector iterator past end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
CONST	SEGMENT
??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PE@OKLODLBI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1PE@OKLODLBI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H
	DB	'h', 00H, 'o', 00H, 'r', 00H, ':', 00H, ':', 00H, 'd', 00H, 'e'
	DB	00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, ':', 00H, ':', 00H
	DB	'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '1', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@
CONST	SEGMENT
??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@ DB 'can''t increm'
	DB	'ent value-initialized vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
CONST	SEGMENT
??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'b', 00H, 'u', 00H, 'g', 00H, '_', 00H, 'l', 00H, 't'
	DB	00H, '_', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'p'
	DB	00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@
CONST	SEGMENT
??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@ DB 'cannot deref'
	DB	'erence end map/set iterator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'a'
	DB	00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CFO@DPFJDIHM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1CFO@DPFJDIHM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '<', 00H, 'v', 00H
	DB	'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '_', 00H, '_', 00H, 'c'
	DB	00H, 'd', 00H, 'e', 00H, 'c', 00H, 'l', 00H, '(', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 'f'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'p', 00H, 'r', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '&', 00H, ',', 00H, 'f', 00H, 'l'
	DB	00H, 'o', 00H, 'a', 00H, 't', 00H, ')', 00H, '>', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 'f', 00H, ':', 00H, ':', 00H, 'T', 00H, 'i', 00H, 'm', 00H
	DB	'e', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@
CONST	SEGMENT
??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@ DB 'cannot derefer'
	DB	'ence value-initialized map/set iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0?AVFrameAnimation@thor@@@8
data$r	SEGMENT
??_R0?AVFrameAnimation@thor@@@8 DD FLAT:??_7type_info@@6B@ ; thor::FrameAnimation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFrameAnimation@thor@@', 00H
data$r	ENDS
;	COMDAT ??_7?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@ DD FLAT:??_R4?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@ ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEXAAVSprite@sf@@$$QAM@Z
	DD	FLAT:?_Target_type@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEX_N@Z
	DD	FLAT:?_Get@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_C@_1NC@IFKPGDLA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@IFKPGDLA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '1', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@MPIAFDPJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@MPIAFDPJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@
CONST	SEGMENT
??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@ DB '"'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H
	DB	't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CGA@LHBKKDGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1CGA@LHBKKDGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'f', 00H, 'u', 00H, 'n', 00H, 'c'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '<', 00H, 'v', 00H
	DB	'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '_', 00H, '_', 00H, 'c'
	DB	00H, 'd', 00H, 'e', 00H, 'c', 00H, 'l', 00H, '(', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 'f'
	DB	00H, ':', 00H, ':', 00H, 'S', 00H, 'p', 00H, 'r', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '&', 00H, ',', 00H, 'f', 00H, 'l'
	DB	00H, 'o', 00H, 'a', 00H, 't', 00H, ')', 00H, '>', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 'f', 00H, ':', 00H, ':', 00H, 'T', 00H, 'i', 00H, 'm', 00H
	DB	'e', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MM@JHPNFGGF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MM@JHPNFGGF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '1', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 't', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@BJFDHGEO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GG@BJFDHGEO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\xtree', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@ DB 'map/set iterato'
	DB	'rs incompatible', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@OGMNKBMN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@OGMNKBMN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@GFIAKDGM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@GFIAKDGM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@FOFDAEGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1FM@FOFDAEGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	'_', 00H, 'u', 00H, 'n', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k'
	DB	00H, 'e', 00H, 'd', 00H, '_', 00H, 'v', 00H, '3', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '9', 00H, '.', 00H, '3', 00H, '0', 00H, '1', 00H
	DB	'3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.29.30133\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ?greater@strong_ordering@std@@2U12@B
CONST	SEGMENT
?greater@strong_ordering@std@@2U12@B DB 01H		; std::strong_ordering::greater
CONST	ENDS
;	COMDAT ?equal@strong_ordering@std@@2U12@B
CONST	SEGMENT
?equal@strong_ordering@std@@2U12@B DB 00H		; std::strong_ordering::equal
CONST	ENDS
;	COMDAT ?less@strong_ordering@std@@2U12@B
CONST	SEGMENT
?less@strong_ordering@std@@2U12@B DB 0ffH		; std::strong_ordering::less
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
	DB	020H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	038H
	DW	011cH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z$0
__ehfuncinfo$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z$0
__ehfuncinfo$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$0
__unwindtable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$2
__ehfuncinfo$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	01fH
	DW	0132H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$03$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01fH
	DB	0f7H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01fH
	DB	09dH
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01eH
	DB	090H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	027H
	DB	07fH
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
	DB	023H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	033H
	DW	01f5H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z$2
__ehfuncinfo$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	0139H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	028H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z$1
__ehfuncinfo$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
	DB	020H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02eH
	DW	024cH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z$0
__ehfuncinfo$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	028H
	DB	0ceH
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
	DB	020H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	02dH
	DB	0cbH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	027H
	DB	08dH
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
	DB	020H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02eH
	DW	0124H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$0
__ehfuncinfo$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	021H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z$3
__ehfuncinfo$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	021H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$0
	DD	010bH
	DD	0118H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?generatePlayerAnimation@Animator@@QAEXXZ
	DD	048H
	DD	07adH
voltbl	ENDS
xdata$x	SEGMENT
__ehfuncinfo$?generatePlayerAnimation@Animator@@QAEXXZ DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?generatePlayerAnimation@Animator@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?generatePlayerAnimation@Animator@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$7
	DD	06H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$8
	DD	05H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$10
	DD	08H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$11
	DD	05H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$13
	DD	0aH
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$14
	DD	05H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$16
	DD	0cH
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$17
	DD	05H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$19
	DD	0eH
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$20
	DD	05H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$21
	DD	05H
	DD	FLAT:__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$22
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	01eH
	DW	0160H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	021H
	DB	086H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	02dH
	DB	0a1H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	027H
	DB	090H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	01fH
	DW	016dH
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01eH
	DB	028H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	02dH
	DB	0dbH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01eH
	DB	028H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	02dH
	DB	0f5H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	022H
	DB	072H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	022H
	DB	076H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	022H
	DB	076H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	022H
	DB	076H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	022H
	DB	072H
voltbl	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@AAU10@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@AAU10@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::_Voidify_iter<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	6a 50		 push	 80			; 00000050H
  0002d	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00032	83 c4 08	 add	 esp, 8
  00035	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
  00041	83 c4 04	 add	 esp, 4
  00044	89 45 f8	 mov	 DWORD PTR tv78[ebp], eax
  00047	8b 55 f8	 mov	 edx, DWORD PTR tv78[ebp]
  0004a	52		 push	 edx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  0004e	e8 00 00 00 00	 call	 ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >

; 145  : }

  00053	83 c4 08	 add	 esp, 8
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@AAU10@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@AAU31@@Z
_TEXT	SEGMENT
tv85 = -8						; size = 4
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@AAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {

  0001e	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00023	0f b6 c0	 movzx	 eax, al
  00026	85 c0		 test	 eax, eax
  00028	74 1b		 je	 SHORT $LN2@construct

; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  0002a	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
  00033	83 c4 04	 add	 esp, 4
  00036	50		 push	 eax
  00037	8b 55 0c	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0003a	52		 push	 edx
  0003b	e8 00 00 00 00	 call	 ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@AAU10@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &,void>
  00040	83 c4 08	 add	 esp, 8

; 711  :         } else

  00043	eb 35		 jmp	 SHORT $LN1@construct
$LN2@construct:

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00045	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::_Voidify_iter<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>
  0004e	83 c4 04	 add	 esp, 4
  00051	50		 push	 eax
  00052	6a 50		 push	 80			; 00000050H
  00054	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00059	83 c4 08	 add	 esp, 8
  0005c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
  00068	83 c4 04	 add	 esp, 4
  0006b	89 45 f8	 mov	 DWORD PTR tv85[ebp], eax
  0006e	8b 55 f8	 mov	 edx, DWORD PTR tv85[ebp]
  00071	52		 push	 edx
  00072	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00075	e8 00 00 00 00	 call	 ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
$LN1@construct:

; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);
; 715  :         }
; 716  :     }

  0007a	83 c4 08	 add	 esp, 8
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@AAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
tv78 = -44						; size = 4
tv80 = -40						; size = 4
$T2 = -36						; size = 4
__Newnode$ = -28					; size = 8
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Myhead$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>, COMDAT

; 359  :     static _Nodeptr _Buynode(_Alloc& _Al, _Nodeptr _Myhead, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001c	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001f	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00022	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00025	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00028	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00036	33 c5		 xor	 eax, ebp
  00038	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0003b	50		 push	 eax
  0003c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0004a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 360  :         // allocate a node with defaults and set links and value
; 361  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buynode call");
; 362  :         _Alloc_construct_ptr<_Alloc> _Newnode(_Al);

  0004f	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00052	50		 push	 eax
  00053	8d 4d e4	 lea	 ecx, DWORD PTR __Newnode$[ebp]
  00056	e8 00 00 00 00	 call	 ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 363  :         _Newnode._Allocate();

  00062	8d 4d e4	 lea	 ecx, DWORD PTR __Newnode$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Allocate

; 364  :         allocator_traits<_Alloc>::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), _STD forward<_Valty>(_Val)...);

  0006a	8b 4d 10	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
  00073	83 c4 04	 add	 esp, 4
  00076	89 45 d8	 mov	 DWORD PTR tv80[ebp], eax
  00079	8b 55 e8	 mov	 edx, DWORD PTR __Newnode$[ebp+4]
  0007c	83 c2 10	 add	 edx, 16			; 00000010H
  0007f	52		 push	 edx
  00080	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00085	83 c4 04	 add	 esp, 4
  00088	89 45 d4	 mov	 DWORD PTR tv78[ebp], eax
  0008b	8b 45 d8	 mov	 eax, DWORD PTR tv80[ebp]
  0008e	50		 push	 eax
  0008f	8b 4d d4	 mov	 ecx, DWORD PTR tv78[ebp]
  00092	51		 push	 ecx
  00093	8b 55 08	 mov	 edx, DWORD PTR __Al$[ebp]
  00096	52		 push	 edx
  00097	e8 00 00 00 00	 call	 ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@AAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@AAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 365  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

  0009f	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d e8	 mov	 ecx, DWORD PTR __Newnode$[ebp+4]
  000a6	51		 push	 ecx
  000a7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  000ac	83 c4 08	 add	 esp, 8

; 366  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

  000af	8d 55 0c	 lea	 edx, DWORD PTR __Myhead$[ebp]
  000b2	52		 push	 edx
  000b3	8b 45 e8	 mov	 eax, DWORD PTR __Newnode$[ebp+4]
  000b6	83 c0 04	 add	 eax, 4
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  000bf	83 c4 08	 add	 esp, 8

; 367  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

  000c2	8d 4d 0c	 lea	 ecx, DWORD PTR __Myhead$[ebp]
  000c5	51		 push	 ecx
  000c6	8b 55 e8	 mov	 edx, DWORD PTR __Newnode$[ebp+4]
  000c9	83 c2 08	 add	 edx, 8
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  000d2	83 c4 08	 add	 esp, 8

; 368  :         _Newnode._Ptr->_Color = _Red;

  000d5	8b 45 e8	 mov	 eax, DWORD PTR __Newnode$[ebp+4]
  000d8	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 369  :         _Newnode._Ptr->_Isnil = false;

  000dc	8b 4d e8	 mov	 ecx, DWORD PTR __Newnode$[ebp+4]
  000df	c6 41 0d 00	 mov	 BYTE PTR [ecx+13], 0

; 370  :         return _Newnode._Release();

  000e3	8d 4d e4	 lea	 ecx, DWORD PTR __Newnode$[ebp]
  000e6	e8 00 00 00 00	 call	 ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Release
  000eb	89 45 dc	 mov	 DWORD PTR $T2[ebp], eax
  000ee	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f5	8d 4d e4	 lea	 ecx, DWORD PTR __Newnode$[ebp]
  000f8	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  000fd	8b 45 dc	 mov	 eax, DWORD PTR $T2[ebp]

; 371  :     }

  00100	52		 push	 edx
  00101	8b cd		 mov	 ecx, ebp
  00103	50		 push	 eax
  00104	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@Buynode
  0010a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010f	58		 pop	 eax
  00110	5a		 pop	 edx
  00111	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00114	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011b	59		 pop	 ecx
  0011c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011f	33 cd		 xor	 ecx, ebp
  00121	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00126	83 c4 2c	 add	 esp, 44			; 0000002cH
  00129	3b ec		 cmp	 ebp, esp
  0012b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
$LN7@Buynode:
  00134	01 00 00 00	 DD	 1
  00138	00 00 00 00	 DD	 $LN6@Buynode
$LN6@Buynode:
  0013c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00140	08 00 00 00	 DD	 8
  00144	00 00 00 00	 DD	 $LN4@Buynode
$LN4@Buynode:
  00148	5f		 DB	 95			; 0000005fH
  00149	4e		 DB	 78			; 0000004eH
  0014a	65		 DB	 101			; 00000065H
  0014b	77		 DB	 119			; 00000077H
  0014c	6e		 DB	 110			; 0000006eH
  0014d	6f		 DB	 111			; 0000006fH
  0014e	64		 DB	 100			; 00000064H
  0014f	65		 DB	 101			; 00000065H
  00150	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR __Newnode$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z PROC ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@AAPAU10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@AAPAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00015	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * *>
  0001e	83 c4 04	 add	 esp, 4
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 55 fc	 mov	 edx, DWORD PTR $T1[ebp]
  0003e	8b 00		 mov	 eax, DWORD PTR [eax]
  00040	89 02		 mov	 DWORD PTR [edx], eax
  00042	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 145  : }

  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@AAPAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z PROC ; std::_Voidify_iter<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

  0000d	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ENDP ; std::_Voidify_iter<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::_Voidify_iter<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	6a 50		 push	 80			; 00000050H
  0002d	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00032	83 c4 08	 add	 esp, 8
  00035	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00041	83 c4 04	 add	 esp, 4
  00044	89 45 f8	 mov	 DWORD PTR tv78[ebp], eax
  00047	8b 55 f8	 mov	 edx, DWORD PTR tv78[ebp]
  0004a	52		 push	 edx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  0004e	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>

; 145  : }

  00053	83 c4 08	 add	 esp, 8
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Buynode@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
tv76 = -16						; size = 4
tv78 = -12						; size = 4
tv80 = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Buynode@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>, COMDAT
; _this$ = ecx

; 1930 :     _Nodeptr _Buynode(_Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1931 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

  00024	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f8	 mov	 DWORD PTR tv80[ebp], eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  0003b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003e	89 4d f4	 mov	 DWORD PTR tv78[ebp], ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  00049	89 45 f0	 mov	 DWORD PTR tv76[ebp], eax
  0004c	8b 55 f8	 mov	 edx, DWORD PTR tv80[ebp]
  0004f	52		 push	 edx
  00050	8b 45 f4	 mov	 eax, DWORD PTR tv78[ebp]
  00053	50		 push	 eax
  00054	8b 4d f0	 mov	 ecx, DWORD PTR tv76[ebp]
  00057	51		 push	 ecx
  00058	e8 00 00 00 00	 call	 ??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1932 :     }

  00060	83 c4 10	 add	 esp, 16			; 00000010H
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
??$_Buynode@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAXQAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z
_TEXT	SEGMENT
__Location$ = 8						; size = 4
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAXQAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT

; 318  : _CONSTEXPR20_DYNALLOC void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 319  : #if _HAS_CXX20
; 320  :     if constexpr (is_array_v<_Ty>) {
; 321  :         _Destroy_range(_STD begin(*_Location), _STD end(*_Location));
; 322  :     } else
; 323  : #endif // _HAS_CXX20
; 324  :     {
; 325  :         _Location->~_Ty();

  0000d	6a 00		 push	 0
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Location$[ebp]
  00012	e8 00 00 00 00	 call	 ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAEPAXI@Z

; 326  :     }
; 327  : }

  00017	3b ec		 cmp	 ebp, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAXQAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv77 = -8						; size = 4
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 30		 je	 SHORT $LN2@Construct_

; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 f8	 mov	 DWORD PTR tv77[ebp], eax
  00040	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  00049	83 c4 04	 add	 esp, 4
  0004c	89 45 f4	 mov	 DWORD PTR tv75[ebp], eax
  0004f	8b 45 f8	 mov	 eax, DWORD PTR tv77[ebp]
  00052	50		 push	 eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR tv75[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@AAPAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,void>
  0005c	83 c4 08	 add	 esp, 8

; 155  :     } else

  0005f	eb 36		 jmp	 SHORT $LN4@Construct_
$LN2@Construct_:

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00061	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  0006a	83 c4 04	 add	 esp, 4
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * *>
  00073	83 c4 04	 add	 esp, 4
  00076	50		 push	 eax
  00077	6a 04		 push	 4
  00079	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0007e	83 c4 08	 add	 esp, 8
  00081	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00084	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  0008d	83 c4 04	 add	 esp, 4
  00090	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00093	8b 10		 mov	 edx, DWORD PTR [eax]
  00095	89 11		 mov	 DWORD PTR [ecx], edx
$LN4@Construct_:

; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
tv85 = -8						; size = 4
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {

  0001e	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00023	0f b6 c0	 movzx	 eax, al
  00026	85 c0		 test	 eax, eax
  00028	74 1b		 je	 SHORT $LN2@construct

; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  0002a	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00033	83 c4 04	 add	 esp, 4
  00036	50		 push	 eax
  00037	8b 55 0c	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0003a	52		 push	 edx
  0003b	e8 00 00 00 00	 call	 ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@X@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@QAU10@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void>
  00040	83 c4 08	 add	 esp, 8

; 711  :         } else

  00043	eb 35		 jmp	 SHORT $LN1@construct
$LN2@construct:

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00045	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::_Voidify_iter<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>
  0004e	83 c4 04	 add	 esp, 4
  00051	50		 push	 eax
  00052	6a 50		 push	 80			; 00000050H
  00054	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00059	83 c4 08	 add	 esp, 8
  0005c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00068	83 c4 04	 add	 esp, 4
  0006b	89 45 f8	 mov	 DWORD PTR tv85[ebp], eax
  0006e	8b 55 f8	 mov	 edx, DWORD PTR tv85[ebp]
  00071	52		 push	 edx
  00072	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00075	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>
$LN1@construct:

; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);
; 715  :         }
; 716  :     }

  0007a	83 c4 08	 add	 esp, 8
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
tv69 = -32						; size = 4
tv71 = -28						; size = 4
$T1 = -22						; size = 1
$T2 = -21						; size = 1
$T3 = -20						; size = 4
$T4 = -14						; size = 1
$T5 = -13						; size = 1
$T6 = -12						; size = 4
$T7 = -8						; size = 4
$T8 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4809 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000e	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00011	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00014	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00017	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001a	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001d	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00020	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4810 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

  0002d	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00034	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  00039	89 45 f8	 mov	 DWORD PTR $T7[ebp], eax
  0003c	83 7d f8 00	 cmp	 DWORD PTR $T7[ebp], 0
  00040	75 11		 jne	 SHORT $LN5@operator
  00042	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?equal@strong_ordering@std@@2U12@B ; std::strong_ordering::equal
  00048	88 4d f3	 mov	 BYTE PTR $T5[ebp], cl
  0004b	8d 55 f3	 lea	 edx, DWORD PTR $T5[ebp]
  0004e	89 55 e4	 mov	 DWORD PTR tv71[ebp], edx
  00051	eb 39		 jmp	 SHORT $LN6@operator
$LN5@operator:
  00053	83 7d f8 00	 cmp	 DWORD PTR $T7[ebp], 0
  00057	7d 10		 jge	 SHORT $LN3@operator
  00059	a0 00 00 00 00	 mov	 al, BYTE PTR ?less@strong_ordering@std@@2U12@B ; std::strong_ordering::less
  0005e	88 45 eb	 mov	 BYTE PTR $T2[ebp], al
  00061	8d 4d eb	 lea	 ecx, DWORD PTR $T2[ebp]
  00064	89 4d e0	 mov	 DWORD PTR tv69[ebp], ecx
  00067	eb 0f		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00069	8a 15 00 00 00
	00		 mov	 dl, BYTE PTR ?greater@strong_ordering@std@@2U12@B ; std::strong_ordering::greater
  0006f	88 55 ea	 mov	 BYTE PTR $T1[ebp], dl
  00072	8d 45 ea	 lea	 eax, DWORD PTR $T1[ebp]
  00075	89 45 e0	 mov	 DWORD PTR tv69[ebp], eax
$LN4@operator:
  00078	8b 4d e0	 mov	 ecx, DWORD PTR tv69[ebp]
  0007b	89 4d ec	 mov	 DWORD PTR $T3[ebp], ecx
  0007e	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp]
  00081	8a 02		 mov	 al, BYTE PTR [edx]
  00083	88 45 f2	 mov	 BYTE PTR $T4[ebp], al
  00086	8d 4d f2	 lea	 ecx, DWORD PTR $T4[ebp]
  00089	89 4d e4	 mov	 DWORD PTR tv71[ebp], ecx
$LN6@operator:
  0008c	8b 55 e4	 mov	 edx, DWORD PTR tv71[ebp]
  0008f	89 55 f4	 mov	 DWORD PTR $T6[ebp], edx
  00092	8b 45 f4	 mov	 eax, DWORD PTR $T6[ebp]
  00095	8a 08		 mov	 cl, BYTE PTR [eax]
  00097	88 4d ff	 mov	 BYTE PTR $T8[ebp], cl
  0009a	8a 45 ff	 mov	 al, BYTE PTR $T8[ebp]

; 4811 : }

  0009d	83 c4 20	 add	 esp, 32			; 00000020H
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::nullptr_t>, COMDAT

; 614  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 615  :     // assign _New_val to _Val, return previous _Val
; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00015	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d fc	 mov	 DWORD PTR __Old_val$[ebp], ecx

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00020	8b 45 0c	 mov	 eax, DWORD PTR __New_val$[ebp]
  00023	8b 08		 mov	 ecx, DWORD PTR [eax]
  00025	89 0a		 mov	 DWORD PTR [edx], ecx

; 618  :     return _Old_val;

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Old_val$[ebp]

; 619  : }

  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z
_TEXT	SEGMENT
__To_delete$1 = -8					; size = 4
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx

; 738  :     void _Erase_tree_and_orphan(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
$LN2@Erase_tree:

; 739  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00021	8b 45 0c	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  00024	0f be 48 0d	 movsx	 ecx, BYTE PTR [eax+13]
  00028	85 c9		 test	 ecx, ecx
  0002a	75 44		 jne	 SHORT $LN4@Erase_tree

; 740  :             _Erase_tree_and_orphan(_Al, _Rootnode->_Right);

  0002c	8b 55 0c	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  0002f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00032	50		 push	 eax
  00033	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00036	51		 push	 ecx
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >

; 741  :             auto _To_delete = _STD exchange(_Rootnode, _Rootnode->_Left);

  0003f	8b 55 0c	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  00042	52		 push	 edx
  00043	8d 45 0c	 lea	 eax, DWORD PTR __Rootnode$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  0004c	83 c4 08	 add	 esp, 8
  0004f	89 45 f8	 mov	 DWORD PTR __To_delete$1[ebp], eax

; 742  :             _Orphan_ptr(_To_delete);

  00052	8b 4d f8	 mov	 ecx, DWORD PTR __To_delete$1[ebp]
  00055	51		 push	 ecx
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Orphan_ptr

; 743  :             _Alnode::value_type::_Freenode(_Al, _To_delete);

  0005e	8b 55 f8	 mov	 edx, DWORD PTR __To_delete$1[ebp]
  00061	52		 push	 edx
  00062	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  0006b	83 c4 08	 add	 esp, 8

; 744  :         }

  0006e	eb b1		 jmp	 SHORT $LN2@Erase_tree
$LN4@Erase_tree:

; 745  :     }

  00070	83 c4 08	 add	 esp, 8
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Copy_or_move@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Copy_or_move@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_or_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::integral_constant<bool,0> >, COMDAT
; _this$ = ecx

; 1644 :     _Nodeptr _Copy_or_move(_Ty& _Val, _Copy_tag, _Is_set) { // copy to new node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1645 :         return _Buynode(_Val);

  00018	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??$_Buynode@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > &>

; 1646 :     }

  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 0c 00	 ret	 12			; 0000000cH
??$_Copy_or_move@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_or_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::integral_constant<bool,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT

; 719  :     static _CONSTEXPR20_DYNALLOC void destroy(_Alloc&, _Uty* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 720  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 721  :         _STD destroy_at(_Ptr);

  0000d	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAXQAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00016	83 c4 04	 add	 esp, 4

; 722  : #else // __cpp_lib_constexpr_dynamic_alloc
; 723  :         _Ptr->~_Uty();
; 724  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 725  :     }

  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AB_N@std@@YAAB_NAB_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AB_N@std@@YAAB_NAB_N@Z PROC			; std::forward<bool const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@AB_N@std@@YAAB_NAB_N@Z ENDP			; std::forward<bool const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > > >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$?0PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool,0>, COMDAT
; _this$ = ecx

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  00021	83 c4 04	 add	 esp, 4
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 10		 mov	 edx, DWORD PTR [eax]
  00029	89 11		 mov	 DWORD PTR [ecx], edx
  0002b	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00034	83 c4 04	 add	 esp, 4
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8a 10		 mov	 dl, BYTE PTR [eax]
  0003c	88 51 04	 mov	 BYTE PTR [ecx+4], dl
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
??$?0PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,bool,0>, COMDAT
; _this$ = ecx

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  00021	83 c4 04	 add	 esp, 4
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 10		 mov	 edx, DWORD PTR [eax]
  00029	89 11		 mov	 DWORD PTR [ecx], edx
  0002b	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QA_NAA_N@Z ; std::forward<bool>
  00034	83 c4 04	 add	 esp, 4
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	8a 10		 mov	 dl, BYTE PTR [eax]
  0003c	88 51 04	 mov	 BYTE PTR [ecx+4], dl
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
tv95 = -28						; size = 4
tv129 = -24						; size = 4
tv131 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
__Myhead$ = 12						; size = 4
_<_Vals_0>$ = 16					; size = 4
??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT
; _this$ = ecx

; 811  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00039	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0003e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00043	8b 45 08	 mov	 eax, DWORD PTR __Al_$[ebp]
  00046	50		 push	 eax
  00047	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 812  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00056	8b 4d 10	 mov	 ecx, DWORD PTR _<_Vals_0>$[ebp]
  00059	51		 push	 ecx
  0005a	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  0005f	83 c4 04	 add	 esp, 4
  00062	89 45 ec	 mov	 DWORD PTR tv131[ebp], eax
  00065	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00068	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006b	83 c0 10	 add	 eax, 16			; 00000010H
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00074	83 c4 04	 add	 esp, 4
  00077	89 45 e8	 mov	 DWORD PTR tv129[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	89 55 e4	 mov	 DWORD PTR tv95[ebp], edx
  00082	8b 45 ec	 mov	 eax, DWORD PTR tv131[ebp]
  00085	50		 push	 eax
  00086	8b 4d e8	 mov	 ecx, DWORD PTR tv129[ebp]
  00089	51		 push	 ecx
  0008a	8b 55 e4	 mov	 edx, DWORD PTR tv95[ebp]
  0008d	52		 push	 edx
  0008e	e8 00 00 00 00	 call	 ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 813  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00096	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a0	52		 push	 edx
  000a1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  000a6	83 c4 08	 add	 esp, 8

; 814  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000a9	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000b3	83 c2 04	 add	 edx, 4
  000b6	52		 push	 edx
  000b7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  000bc	83 c4 08	 add	 esp, 8

; 815  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000bf	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c9	83 c2 08	 add	 edx, 8
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  000d2	83 c4 08	 add	 esp, 8

; 816  :         this->_Ptr->_Color = _Red;

  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000db	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 817  :         this->_Ptr->_Isnil = false;

  000df	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e5	c6 40 0d 00	 mov	 BYTE PTR [eax+13], 0

; 818  :     }

  000e9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	83 c4 1c	 add	 esp, 28			; 0000001cH
  00101	3b ec		 cmp	 ebp, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv144 = -24						; size = 4
tv146 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx

; 823  :     ~_Tree_temp_node() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  0001b	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  00022	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00042	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 824  :         if (this->_Ptr) {

  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0004e	74 60		 je	 SHORT $LN1@Tree_temp_

; 825  :             _Destroy_in_place(this->_Ptr->_Left);

  00050	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  0005c	83 c4 04	 add	 esp, 4

; 826  :             _Destroy_in_place(this->_Ptr->_Parent);

  0005f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	83 c1 04	 add	 ecx, 4
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  0006e	83 c4 04	 add	 esp, 4

; 827  :             _Destroy_in_place(this->_Ptr->_Right);

  00071	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00077	83 c0 08	 add	 eax, 8
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  00080	83 c4 04	 add	 esp, 4

; 828  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00089	83 c2 10	 add	 edx, 16			; 00000010H
  0008c	52		 push	 edx
  0008d	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00092	83 c4 04	 add	 esp, 4
  00095	89 45 ec	 mov	 DWORD PTR tv146[ebp], eax
  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	89 4d e8	 mov	 DWORD PTR tv144[ebp], ecx
  000a0	8b 55 ec	 mov	 edx, DWORD PTR tv146[ebp]
  000a3	52		 push	 edx
  000a4	8b 45 e8	 mov	 eax, DWORD PTR tv144[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  000ad	83 c4 08	 add	 esp, 8
$LN1@Tree_temp_:

; 829  :         }
; 830  :     }

  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	83 c4 18	 add	 esp, 24			; 00000018H
  000c6	3b ec		 cmp	 ebp, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
  000d1	cc		 int	 3
  000d2	cc		 int	 3
  000d3	cc		 int	 3
  000d4	cc		 int	 3
  000d5	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx

; 790  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 45 08	 mov	 eax, DWORD PTR __Al_$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 791  :         _Alloc_construct_ptr<_Alnode>::_Allocate();

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Allocate

; 792  :     }

  00052	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	83 c4 10	 add	 esp, 16			; 00000010H
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx

; 1023 :     _CONSTEXPR20_DYNALLOC ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0003b	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1024 :         if (_Ptr) {

  00040	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	74 19		 je	 SHORT $LN3@Alloc_cons

; 1025 :             _Al.deallocate(_Ptr, 1);

  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	89 55 ec	 mov	 DWORD PTR tv72[ebp], edx
  00051	6a 01		 push	 1
  00053	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00059	51		 push	 ecx
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR tv72[ebp]
  0005d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::deallocate
$LN3@Alloc_cons:

; 1026 :         }
; 1027 :     }

  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	83 c4 14	 add	 esp, 20			; 00000014H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
  0007b	cc		 int	 3
  0007c	cc		 int	 3
  0007d	cc		 int	 3
  0007e	cc		 int	 3
  0007f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Allocate, COMDAT
; _this$ = ecx

; 1018 :     _CONSTEXPR20_DYNALLOC void _Allocate() { // disengage *this, then allocate a new memory block

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1019 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1020 :         _Ptr = _Al.allocate(1);

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	89 55 f8	 mov	 DWORD PTR tv73[ebp], edx
  00033	6a 01		 push	 1
  00035	8b 4d f8	 mov	 ecx, DWORD PTR tv73[ebp]
  00038	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocate
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1021 :     }

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Release, COMDAT
; _this$ = ecx

; 1014 :     _NODISCARD _CONSTEXPR20_DYNALLOC pointer _Release() noexcept { // disengage *this and return contained pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1015 :         return _STD exchange(_Ptr, nullptr);

  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  00028	8d 45 f8	 lea	 eax, DWORD PTR $T1[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 04	 add	 ecx, 4
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::nullptr_t>
  00038	83 c4 08	 add	 esp, 8

; 1016 :     }

  0003b	83 c4 08	 add	 esp, 8
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx

; 1012 :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Al_$[ebp]
  0001e	89 08		 mov	 DWORD PTR [eax], ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@Z PROC ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >::_Extract, COMDAT

; 1905 :     static const _Key& _Extract(const pair<_First, _Second>& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1906 :         return _Val.first;

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 1907 :     }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@Z ENDP ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >::_Extract
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>::pointer_to, COMDAT

; 196  :     _NODISCARD static _CONSTEXPR20 pointer pointer_to(_Reftype _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 197  :         return _STD addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00016	83 c4 04	 add	 esp, 4

; 198  :     }

  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AAV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YA$$QAV?$function@$$A6AXAAVSprite@sf@@M@Z@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YA$$QAV?$function@$$A6AXAAVSprite@sf@@M@Z@0@AAV10@@Z PROC ; std::move<std::function<void __cdecl(sf::Sprite &,float)> &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1457 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$move@AAV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YA$$QAV?$function@$$A6AXAAVSprite@sf@@M@Z@0@AAV10@@Z ENDP ; std::move<std::function<void __cdecl(sf::Sprite &,float)> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
_TEXT	SEGMENT
tv138 = -52						; size = 4
tv137 = -48						; size = 4
__Pnode$2 = -44						; size = 4
__Is_set$3 = -33					; size = 1
__Newroot$ = -28					; size = 4
__Scary$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Rootnode$ = 8						; size = 4
__Wherenode$ = 12					; size = 4
__Movefl$ = 16						; size = 1
??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>, COMDAT
; _this$ = ecx

; 1659 :     _Nodeptr _Copy_nodes(_Nodeptr _Rootnode, _Nodeptr _Wherenode, _Moveit _Movefl) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 24	 sub	 esp, 36			; 00000024H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 cc	 mov	 DWORD PTR [ebp-52], eax
  00020	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  00023	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00026	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00029	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0002c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0002f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00032	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00035	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003d	33 c5		 xor	 eax, ebp
  0003f	50		 push	 eax
  00040	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00043	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00049	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0004c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0004f	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00054	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1660 :         // copy entire subtree, recursively
; 1661 :         const auto _Scary = _Get_scary();

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00061	89 45 e8	 mov	 DWORD PTR __Scary$[ebp], eax

; 1662 :         _Nodeptr _Newroot = _Scary->_Myhead; // point at nil node

  00064	8b 45 e8	 mov	 eax, DWORD PTR __Scary$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	89 4d e4	 mov	 DWORD PTR __Newroot$[ebp], ecx

; 1663 : 
; 1664 :         if (!_Rootnode->_Isnil) { // copy or move a node, then any subtrees

  0006d	8b 55 08	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  00070	0f be 42 0d	 movsx	 eax, BYTE PTR [edx+13]
  00074	85 c0		 test	 eax, eax
  00076	0f 85 c5 00 00
	00		 jne	 $LN2@Copy_nodes

; 1665 :             bool_constant<is_same_v<key_type, value_type>> _Is_set;
; 1666 :             _Nodeptr _Pnode = _Copy_or_move(_Rootnode->_Myval, _Movefl, _Is_set);

  0007c	0f b6 4d df	 movzx	 ecx, BYTE PTR __Is_set$3[ebp]
  00080	51		 push	 ecx
  00081	0f b6 55 10	 movzx	 edx, BYTE PTR __Movefl$[ebp]
  00085	52		 push	 edx
  00086	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  00089	83 c0 10	 add	 eax, 16			; 00000010H
  0008c	50		 push	 eax
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ??$_Copy_or_move@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_or_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,std::integral_constant<bool,0> >
  00095	89 45 d4	 mov	 DWORD PTR __Pnode$2[ebp], eax

; 1667 :             _Pnode->_Parent = _Wherenode;

  00098	8b 4d d4	 mov	 ecx, DWORD PTR __Pnode$2[ebp]
  0009b	8b 55 0c	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0009e	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 1668 :             _Pnode->_Color  = _Rootnode->_Color;

  000a1	8b 45 d4	 mov	 eax, DWORD PTR __Pnode$2[ebp]
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR __Rootnode$[ebp]
  000a7	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
  000aa	88 50 0c	 mov	 BYTE PTR [eax+12], dl

; 1669 :             if (_Newroot->_Isnil) {

  000ad	8b 45 e4	 mov	 eax, DWORD PTR __Newroot$[ebp]
  000b0	0f be 48 0d	 movsx	 ecx, BYTE PTR [eax+13]
  000b4	85 c9		 test	 ecx, ecx
  000b6	74 06		 je	 SHORT $LN3@Copy_nodes

; 1670 :                 _Newroot = _Pnode; // memorize new root

  000b8	8b 55 d4	 mov	 edx, DWORD PTR __Pnode$2[ebp]
  000bb	89 55 e4	 mov	 DWORD PTR __Newroot$[ebp], edx
$LN3@Copy_nodes:

; 1671 :             }
; 1672 : 
; 1673 :             _TRY_BEGIN

  000be	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1674 :             _Pnode->_Left  = _Copy_nodes(_Rootnode->_Left, _Pnode, _Movefl);

  000c5	0f b6 45 10	 movzx	 eax, BYTE PTR __Movefl$[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d d4	 mov	 ecx, DWORD PTR __Pnode$2[ebp]
  000cd	51		 push	 ecx
  000ce	8b 55 08	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  000d1	8b 02		 mov	 eax, DWORD PTR [edx]
  000d3	50		 push	 eax
  000d4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>
  000dc	89 45 d0	 mov	 DWORD PTR tv137[ebp], eax
  000df	8b 4d d4	 mov	 ecx, DWORD PTR __Pnode$2[ebp]
  000e2	8b 55 d0	 mov	 edx, DWORD PTR tv137[ebp]
  000e5	89 11		 mov	 DWORD PTR [ecx], edx

; 1675 :             _Pnode->_Right = _Copy_nodes(_Rootnode->_Right, _Pnode, _Movefl);

  000e7	0f b6 45 10	 movzx	 eax, BYTE PTR __Movefl$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d d4	 mov	 ecx, DWORD PTR __Pnode$2[ebp]
  000ef	51		 push	 ecx
  000f0	8b 55 08	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  000f3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f6	50		 push	 eax
  000f7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>
  000ff	89 45 cc	 mov	 DWORD PTR tv138[ebp], eax
  00102	8b 4d d4	 mov	 ecx, DWORD PTR __Pnode$2[ebp]
  00105	8b 55 cc	 mov	 edx, DWORD PTR tv138[ebp]
  00108	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0010b	eb 24		 jmp	 SHORT $LN6@Copy_nodes
__catch$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$0:

; 1676 :             _CATCH_ALL
; 1677 :             _Scary->_Erase_tree_and_orphan(_Getal(), _Newroot); // subtree copy failed, bail out

  0010d	8b 45 e4	 mov	 eax, DWORD PTR __Newroot$[ebp]
  00110	50		 push	 eax
  00111	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00114	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  00119	50		 push	 eax
  0011a	8b 4d e8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  0011d	e8 00 00 00 00	 call	 ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >

; 1678 :             _RERAISE;

  00122	6a 00		 push	 0
  00124	6a 00		 push	 0
  00126	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1679 :             _CATCH_END

  0012b	b8 00 00 00 00	 mov	 eax, $LN9@Copy_nodes
  00130	c3		 ret	 0
$LN6@Copy_nodes:
  00131	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00138	eb 07		 jmp	 SHORT $LN2@Copy_nodes
$LN9@Copy_nodes:
  0013a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN2@Copy_nodes:

; 1680 :         }
; 1681 : 
; 1682 :         return _Newroot; // return newly constructed tree

  00141	8b 45 e4	 mov	 eax, DWORD PTR __Newroot$[ebp]
$LN5@Copy_nodes:

; 1683 :     }

  00144	52		 push	 edx
  00145	8b cd		 mov	 ecx, ebp
  00147	50		 push	 eax
  00148	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Copy_nodes
  0014e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00153	58		 pop	 eax
  00154	5a		 pop	 edx
  00155	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00158	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015f	59		 pop	 ecx
  00160	5f		 pop	 edi
  00161	5e		 pop	 esi
  00162	5b		 pop	 ebx
  00163	83 c4 34	 add	 esp, 52			; 00000034H
  00166	3b ec		 cmp	 ebp, esp
  00168	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016d	8b e5		 mov	 esp, ebp
  0016f	5d		 pop	 ebp
  00170	c2 0c 00	 ret	 12			; 0000000cH
  00173	90		 npad	 1
$LN13@Copy_nodes:
  00174	01 00 00 00	 DD	 1
  00178	00 00 00 00	 DD	 $LN12@Copy_nodes
$LN12@Copy_nodes:
  0017c	df ff ff ff	 DD	 -33			; ffffffdfH
  00180	01 00 00 00	 DD	 1
  00184	00 00 00 00	 DD	 $LN10@Copy_nodes
$LN10@Copy_nodes:
  00188	5f		 DB	 95			; 0000005fH
  00189	49		 DB	 73			; 00000049H
  0018a	73		 DB	 115			; 00000073H
  0018b	5f		 DB	 95			; 0000005fH
  0018c	73		 DB	 115			; 00000073H
  0018d	65		 DB	 101			; 00000065H
  0018e	74		 DB	 116			; 00000074H
  0018f	00		 DB	 0
  00190	cc		 int	 3
  00191	cc		 int	 3
  00192	cc		 int	 3
  00193	cc		 int	 3
  00194	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABVFrameAnimation@thor@@@std@@YAABVFrameAnimation@thor@@ABV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABVFrameAnimation@thor@@@std@@YAABVFrameAnimation@thor@@ABV12@@Z PROC ; std::forward<thor::FrameAnimation const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@ABVFrameAnimation@thor@@@std@@YAABVFrameAnimation@thor@@ABV12@@Z ENDP ; std::forward<thor::FrameAnimation const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$invoke@AAVFrameAnimation@thor@@AAVSprite@sf@@M@std@@YAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
__Arg1$ = 12						; size = 4
_<_Args2_0>$ = 16					; size = 4
??$invoke@AAVFrameAnimation@thor@@AAVSprite@sf@@M@std@@YAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z PROC ; std::invoke<thor::FrameAnimation &,sf::Sprite &,float>, COMDAT

; 1593 :         static_cast<_Callable&&>(_Obj), static_cast<_Ty1&&>(_Arg1), static_cast<_Types2&&>(_Args2)...)) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1594 :     if constexpr (_Invoker1<_Callable, _Ty1>::_Strategy == _Invoker_strategy::_Functor) {
; 1595 :         return static_cast<_Callable&&>(_Obj)(static_cast<_Ty1&&>(_Arg1), static_cast<_Types2&&>(_Args2)...);

  0000d	8b 45 10	 mov	 eax, DWORD PTR _<_Args2_0>$[ebp]
  00010	51		 push	 ecx
  00011	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00015	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Arg1$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Obj$[ebp]
  00021	e8 00 00 00 00	 call	 ??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z ; thor::FrameAnimation::operator()<sf::Sprite>

; 1596 :     } else if constexpr (_Invoker1<_Callable, _Ty1>::_Strategy == _Invoker_strategy::_Pmf_object) {
; 1597 :         return (static_cast<_Ty1&&>(_Arg1).*_Obj)(static_cast<_Types2&&>(_Args2)...);
; 1598 :     } else if constexpr (_Invoker1<_Callable, _Ty1>::_Strategy == _Invoker_strategy::_Pmf_refwrap) {
; 1599 :         return (_Arg1.get().*_Obj)(static_cast<_Types2&&>(_Args2)...);
; 1600 :     } else if constexpr (_Invoker1<_Callable, _Ty1>::_Strategy == _Invoker_strategy::_Pmf_pointer) {
; 1601 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);
; 1602 :     } else if constexpr (_Invoker1<_Callable, _Ty1>::_Strategy == _Invoker_strategy::_Pmd_object) {
; 1603 :         return static_cast<_Ty1&&>(_Arg1).*_Obj;
; 1604 :     } else if constexpr (_Invoker1<_Callable, _Ty1>::_Strategy == _Invoker_strategy::_Pmd_refwrap) {
; 1605 :         return _Arg1.get().*_Obj;
; 1606 :     } else {
; 1607 :         static_assert(_Invoker1<_Callable, _Ty1>::_Strategy == _Invoker_strategy::_Pmd_pointer, "bug in invoke");
; 1608 :         return (*static_cast<_Ty1&&>(_Arg1)).*_Obj;
; 1609 :     }
; 1610 : }

  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??$invoke@AAVFrameAnimation@thor@@AAVSprite@sf@@M@std@@YAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z ENDP ; std::invoke<thor::FrameAnimation &,sf::Sprite &,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z PROC ; std::_Voidify_iter<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

  0000d	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ENDP ; std::_Voidify_iter<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@ABQAU10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@ABQAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00015	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * *>
  0001e	83 c4 04	 add	 esp, 4
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 55 fc	 mov	 edx, DWORD PTR $T1[ebp]
  0003e	8b 00		 mov	 eax, DWORD PTR [eax]
  00040	89 02		 mov	 DWORD PTR [edx], eax
  00042	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 145  : }

  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@ABQAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>, COMDAT

; 307  : _CONSTEXPR20_DYNALLOC void _Destroy_in_place(_Ty& _Obj) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 308  :     if constexpr (is_array_v<_Ty>) {
; 309  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 310  :     } else {
; 311  :         _Obj.~_Ty();
; 312  :     }
; 313  : }

  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT

; 383  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00027	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 384  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 385  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  0002c	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002f	83 c0 10	 add	 eax, 16			; 00000010H
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00045	83 c4 08	 add	 esp, 8

; 386  :         _Freenode0(_Al, _Ptr);

  00048	8b 55 0c	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0004b	52		 push	 edx
  0004c	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  00055	83 c4 08	 add	 esp, 8

; 387  :     }

  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
  00071	cc		 int	 3
  00072	cc		 int	 3
  00073	cc		 int	 3
  00074	cc		 int	 3
  00075	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@0@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>, COMDAT

; 614  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 615  :     // assign _New_val to _Val, return previous _Val
; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00015	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d fc	 mov	 DWORD PTR __Old_val$[ebp], ecx

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00020	8b 45 0c	 mov	 eax, DWORD PTR __New_val$[ebp]
  00023	8b 08		 mov	 ecx, DWORD PTR [eax]
  00025	89 0a		 mov	 DWORD PTR [edx], ecx

; 618  :     return _Old_val;

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Old_val$[ebp]

; 619  : }

  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Debug_lt_pred@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@$0A@@std@@YA_NABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z
_TEXT	SEGMENT
__Result$ = -1						; size = 1
__Pred$ = 8						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$_Debug_lt_pred@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@$0A@@std@@YA_NABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z PROC ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>, COMDAT

; 1516 :     noexcept(_Pred(_Left, _Right)) && noexcept(_Pred(_Right, _Left))) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00011	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1517 :     // test if _Pred(_Left, _Right) and _Pred is strict weak ordering, when the arguments are the cv-same-type
; 1518 :     const auto _Result = static_cast<bool>(_Pred(_Left, _Right));

  00016	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00021	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  00026	88 45 ff	 mov	 BYTE PTR __Result$[ebp], al

; 1519 :     if (_Result) {

  00029	0f b6 55 ff	 movzx	 edx, BYTE PTR __Result$[ebp]
  0002d	85 d2		 test	 edx, edx
  0002f	74 79		 je	 SHORT $LN8@Debug_lt_p
$LN4@Debug_lt_p:

; 1520 :         _STL_VERIFY(!_Pred(_Right, _Left), "invalid comparator");

  00031	8b 45 0c	 mov	 eax, DWORD PTR __Left$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  00038	51		 push	 ecx
  00039	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  0003c	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  00041	0f b6 d0	 movzx	 edx, al
  00044	85 d2		 test	 edx, edx
  00046	75 02		 jne	 SHORT $LN7@Debug_lt_p
  00048	eb 5c		 jmp	 SHORT $LN2@Debug_lt_p
$LN7@Debug_lt_p:
  0004a	8b f4		 mov	 esi, esp
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00056	6a 00		 push	 0
  00058	68 f0 05 00 00	 push	 1520			; 000005f0H
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@MPIAFDPJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00062	6a 02		 push	 2
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0006a	83 c4 18	 add	 esp, 24			; 00000018H
  0006d	3b f4		 cmp	 esi, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	83 f8 01	 cmp	 eax, 1
  00077	75 01		 jne	 SHORT $LN12@Debug_lt_p
  00079	cc		 int	 3
$LN12@Debug_lt_p:
  0007a	8b f4		 mov	 esi, esp
  0007c	6a 00		 push	 0
  0007e	68 f0 05 00 00	 push	 1520			; 000005f0H
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_1NC@IFKPGDLA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00098	83 c4 14	 add	 esp, 20			; 00000014H
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	33 c9		 xor	 ecx, ecx
  000a4	75 a4		 jne	 SHORT $LN7@Debug_lt_p
$LN2@Debug_lt_p:
  000a6	33 d2		 xor	 edx, edx
  000a8	75 87		 jne	 SHORT $LN4@Debug_lt_p
$LN8@Debug_lt_p:

; 1521 :     }
; 1522 : 
; 1523 :     return _Result;

  000aa	8a 45 ff	 mov	 al, BYTE PTR __Result$[ebp]

; 1524 : }

  000ad	5e		 pop	 esi
  000ae	83 c4 04	 add	 esp, 4
  000b1	3b ec		 cmp	 ebp, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
??$_Debug_lt_pred@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@$0A@@std@@YA_NABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z ENDP ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >, COMDAT

; 68   :     static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val) { // extract key from element value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __84DB8D4B_map
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 69   :         return _Val.first;

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 70   :     }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@1@AB_N@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool const &,0>, COMDAT
; _this$ = ecx

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > > >
  00030	83 c4 04	 add	 esp, 4
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR tv71[ebp]
  00037	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  0003c	8b 55 0c	 mov	 edx, DWORD PTR __Val2$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ??$forward@AB_N@std@@YAAB_NAB_N@Z ; std::forward<bool const &>
  00045	83 c4 04	 add	 esp, 4
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8a 10		 mov	 dl, BYTE PTR [eax]
  0004d	88 51 0c	 mov	 BYTE PTR [ecx+12], dl
  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 c4 08	 add	 esp, 8
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 08 00	 ret	 8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
tv148 = -88						; size = 4
tv129 = -84						; size = 4
tv131 = -80						; size = 4
tv133 = -76						; size = 4
$T1 = -72						; size = 4
$T2 = -65						; size = 1
$T3 = -64						; size = 8
$T4 = -53						; size = 1
$T5 = -52						; size = 12
__Keyval$6 = -40					; size = 4
__Inserted$ = -36					; size = 4
__Loc$ = -28						; size = 12
__Scary$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$_Emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT
; _this$ = ecx

; 1007 :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d a8	 lea	 edi, DWORD PTR [ebp-88]
  0000b	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00025	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0002a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1008 :         using _In_place_key_extractor = typename _Traits::template _In_place_key_extractor<_Remove_cvref_t<_Valtys>...>;
; 1009 :         const auto _Scary             = _Get_scary();

  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00037	89 45 f4	 mov	 DWORD PTR __Scary$[ebp], eax

; 1010 :         _Tree_find_result<_Nodeptr> _Loc;
; 1011 :         _Nodeptr _Inserted;
; 1012 :         if constexpr (!_Multi && _In_place_key_extractor::_Extractable) {
; 1013 :             const auto& _Keyval = _In_place_key_extractor::_Extract(_Vals...);

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _<_Vals_0>$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@@Z ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >::_Extract
  00043	83 c4 04	 add	 esp, 4
  00046	89 45 d8	 mov	 DWORD PTR __Keyval$6[ebp], eax

; 1014 :             _Loc                = _Find_lower_bound(_Keyval);

  00049	8b 4d d8	 mov	 ecx, DWORD PTR __Keyval$6[ebp]
  0004c	51		 push	 ecx
  0004d	8d 55 cc	 lea	 edx, DWORD PTR $T5[ebp]
  00050	52		 push	 edx
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	89 4d e4	 mov	 DWORD PTR __Loc$[ebp], ecx
  0005e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00061	89 55 e8	 mov	 DWORD PTR __Loc$[ebp+4], edx
  00064	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00067	89 45 ec	 mov	 DWORD PTR __Loc$[ebp+8], eax

; 1015 :             if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

  0006a	8b 4d d8	 mov	 ecx, DWORD PTR __Keyval$6[ebp]
  0006d	51		 push	 ecx
  0006e	8b 55 ec	 mov	 edx, DWORD PTR __Loc$[ebp+8]
  00071	52		 push	 edx
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0007a	0f b6 c0	 movzx	 eax, al
  0007d	85 c0		 test	 eax, eax
  0007f	74 1c		 je	 SHORT $LN2@Emplace

; 1016 :                 return {_Loc._Bound, false};

  00081	c6 45 cb 00	 mov	 BYTE PTR $T4[ebp], 0
  00085	8d 4d cb	 lea	 ecx, DWORD PTR $T4[ebp]
  00088	51		 push	 ecx
  00089	8d 55 ec	 lea	 edx, DWORD PTR __Loc$[ebp+8]
  0008c	52		 push	 edx
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00090	e8 00 00 00 00	 call	 ??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &,bool,0>
  00095	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00098	e9 83 00 00 00	 jmp	 $LN1@Emplace
$LN2@Emplace:

; 1017 :             }
; 1018 : 
; 1019 :             _Check_grow_by_1();

  0009d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	e8 00 00 00 00	 call	 ?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Check_grow_by_1

; 1020 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  000a5	8b 45 0c	 mov	 eax, DWORD PTR _<_Vals_0>$[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  000ae	83 c4 04	 add	 esp, 4
  000b1	89 45 b4	 mov	 DWORD PTR tv133[ebp], eax
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR __Scary$[ebp]
  000b7	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ba	89 55 b0	 mov	 DWORD PTR tv131[ebp], edx
  000bd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  000c5	89 45 ac	 mov	 DWORD PTR tv129[ebp], eax
  000c8	8b 45 b4	 mov	 eax, DWORD PTR tv133[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d b0	 mov	 ecx, DWORD PTR tv131[ebp]
  000cf	51		 push	 ecx
  000d0	8b 55 ac	 mov	 edx, DWORD PTR tv129[ebp]
  000d3	52		 push	 edx
  000d4	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  000d7	e8 00 00 00 00	 call	 ??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  000dc	89 45 a8	 mov	 DWORD PTR tv148[ebp], eax
  000df	8b 4d a8	 mov	 ecx, DWORD PTR tv148[ebp]
  000e2	e8 00 00 00 00	 call	 ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::_Release
  000e7	89 45 dc	 mov	 DWORD PTR __Inserted$[ebp], eax
  000ea	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  000ed	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >

; 1021 :             // nothrow hereafter
; 1022 :         } else {
; 1023 :             _Tree_temp_node<_Alnode> _Newnode(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...);
; 1024 :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 1025 :             if constexpr (_Multi) { // duplicate check if unique
; 1026 :                 _Loc = _Find_upper_bound(_Keyval);
; 1027 :             } else {
; 1028 :                 _Loc = _Find_lower_bound(_Keyval);
; 1029 :                 if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1030 :                     return {_Loc._Bound, false};
; 1031 :                 }
; 1032 :             }
; 1033 : 
; 1034 :             _Check_grow_by_1();
; 1035 :             // nothrow hereafter
; 1036 :             _Inserted = _Newnode._Release();
; 1037 :         }
; 1038 : 
; 1039 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000f2	8b 45 dc	 mov	 eax, DWORD PTR __Inserted$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d e8	 mov	 ecx, DWORD PTR __Loc$[ebp+4]
  000f9	51		 push	 ecx
  000fa	8b 55 e4	 mov	 edx, DWORD PTR __Loc$[ebp]
  000fd	52		 push	 edx
  000fe	8b 4d f4	 mov	 ecx, DWORD PTR __Scary$[ebp]
  00101	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Insert_node
  00106	89 45 b8	 mov	 DWORD PTR $T1[ebp], eax
  00109	c6 45 bf 01	 mov	 BYTE PTR $T2[ebp], 1
  0010d	8d 45 bf	 lea	 eax, DWORD PTR $T2[ebp]
  00110	50		 push	 eax
  00111	8d 4d b8	 lea	 ecx, DWORD PTR $T1[ebp]
  00114	51		 push	 ecx
  00115	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	e8 00 00 00 00	 call	 ??$?0PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,bool,0>
  0011d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@Emplace:

; 1040 :     }

  00120	52		 push	 edx
  00121	8b cd		 mov	 ecx, ebp
  00123	50		 push	 eax
  00124	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@Emplace
  0012a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0012f	58		 pop	 eax
  00130	5a		 pop	 edx
  00131	5f		 pop	 edi
  00132	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00135	33 cd		 xor	 ecx, ebp
  00137	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013c	83 c4 58	 add	 esp, 88			; 00000058H
  0013f	3b ec		 cmp	 ebp, esp
  00141	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00146	8b e5		 mov	 esp, ebp
  00148	5d		 pop	 ebp
  00149	c2 08 00	 ret	 8
$LN7@Emplace:
  0014c	01 00 00 00	 DD	 1
  00150	00 00 00 00	 DD	 $LN6@Emplace
$LN6@Emplace:
  00154	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00158	0c 00 00 00	 DD	 12			; 0000000cH
  0015c	00 00 00 00	 DD	 $LN5@Emplace
$LN5@Emplace:
  00160	5f		 DB	 95			; 0000005fH
  00161	4c		 DB	 76			; 0000004cH
  00162	6f		 DB	 111			; 0000006fH
  00163	63		 DB	 99			; 00000063H
  00164	00		 DB	 0
??$_Emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Copy@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXABV01@U_Copy_tag@01@@Z
_TEXT	SEGMENT
tv134 = -24						; size = 4
tv94 = -20						; size = 4
tv79 = -16						; size = 4
__Right_scary$ = -12					; size = 4
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Movefl$ = 12						; size = 1
??$_Copy@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXABV01@U_Copy_tag@01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>, COMDAT
; _this$ = ecx

; 1629 :     void _Copy(const _Tree& _Right, _Moveit _Movefl) { // copy or move entire tree from _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00025	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1630 :         const auto _Scary        = _Get_scary();

  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00032	89 45 f8	 mov	 DWORD PTR __Scary$[ebp], eax

; 1631 :         const auto _Right_scary  = _Right._Get_scary();

  00035	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  0003d	89 45 f4	 mov	 DWORD PTR __Right_scary$[ebp], eax

; 1632 :         _Scary->_Myhead->_Parent = _Copy_nodes(_Right_scary->_Myhead->_Parent, _Scary->_Myhead, _Movefl);

  00040	0f b6 45 0c	 movzx	 eax, BYTE PTR __Movefl$[ebp]
  00044	50		 push	 eax
  00045	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  00048	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004b	52		 push	 edx
  0004c	8b 45 f4	 mov	 eax, DWORD PTR __Right_scary$[ebp]
  0004f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00052	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00055	52		 push	 edx
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>
  0005e	89 45 f0	 mov	 DWORD PTR tv79[ebp], eax
  00061	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  00064	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00067	8b 55 f0	 mov	 edx, DWORD PTR tv79[ebp]
  0006a	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 1633 :         _Scary->_Mysize          = _Right_scary->_Mysize;

  0006d	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  00070	8b 4d f4	 mov	 ecx, DWORD PTR __Right_scary$[ebp]
  00073	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00076	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1634 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00082	0f be 42 0d	 movsx	 eax, BYTE PTR [edx+13]
  00086	85 c0		 test	 eax, eax
  00088	75 43		 jne	 SHORT $LN2@Copy

; 1635 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

  0008a	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  0008d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00090	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Min
  00099	83 c4 04	 add	 esp, 4
  0009c	89 45 ec	 mov	 DWORD PTR tv94[ebp], eax
  0009f	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  000a2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a5	8b 45 ec	 mov	 eax, DWORD PTR tv94[ebp]
  000a8	89 02		 mov	 DWORD PTR [edx], eax

; 1636 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

  000aa	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  000ad	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000b0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Max
  000b9	83 c4 04	 add	 esp, 4
  000bc	89 45 e8	 mov	 DWORD PTR tv134[ebp], eax
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  000c2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c5	8b 45 e8	 mov	 eax, DWORD PTR tv134[ebp]
  000c8	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1637 :         } else { // empty tree, just tidy head pointers

  000cb	eb 1d		 jmp	 SHORT $LN1@Copy
$LN2@Copy:

; 1638 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

  000cd	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  000d0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d3	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  000d6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d9	89 0a		 mov	 DWORD PTR [edx], ecx

; 1639 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

  000db	8b 55 f8	 mov	 edx, DWORD PTR __Scary$[ebp]
  000de	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e1	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  000e4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e7	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN1@Copy:

; 1640 :         }
; 1641 :     }

  000ea	83 c4 18	 add	 esp, 24			; 00000018H
  000ed	3b ec		 cmp	 ebp, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
??$_Copy@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXABV01@U_Copy_tag@01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT

; 918  : _CONSTEXPR20 void _Pocca(_Alloc& _Left, const _Alloc& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 919  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 920  :         _Left = _Right;
; 921  :     }
; 922  : }

  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@std@@YAPBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@std@@YAPBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@std@@YAPBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0GA@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0GA@@std@@YAII@Z PROC		; std::_Get_size_of_n<96>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 45 ff 01	 mov	 BYTE PTR __Overflow_is_possible$[ebp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00022	c7 45 f8 aa aa
	aa 02		 mov	 DWORD PTR __Max_possible$1[ebp], 44739242 ; 02aaaaaaH

; 64   :         if (_Count > _Max_possible) {

  00029	81 7d 08 aa aa
	aa 02		 cmp	 DWORD PTR __Count$[ebp], 44739242 ; 02aaaaaaH
  00030	76 05		 jbe	 SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00032	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00037	6b 45 08 60	 imul	 eax, DWORD PTR __Count$[ebp], 96
$LN3@Get_size_o:

; 70   : }

  0003b	83 c4 08	 add	 esp, 8
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??$_Get_size_of_n@$0GA@@std@@YAII@Z ENDP		; std::_Get_size_of_n<96>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??$?0ABVFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@ABVFrameAnimation@thor@@@Z
_TEXT	SEGMENT
tv81 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0ABVFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@ABVFrameAnimation@thor@@@Z PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation const &,0>, COMDAT
; _this$ = ecx

; 896  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ??0?$_Func_base@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_base<void,sf::Sprite &,float>::_Func_base<void,sf::Sprite &,float>
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 04	 add	 ecx, 4
  00039	89 4d f8	 mov	 DWORD PTR tv81[ebp], ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ??$forward@ABVFrameAnimation@thor@@@std@@YAABVFrameAnimation@thor@@ABV12@@Z ; std::forward<thor::FrameAnimation const &>
  00045	83 c4 04	 add	 esp, 4
  00048	8b f4		 mov	 esi, esp
  0004a	50		 push	 eax
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR tv81[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@ABV01@@Z
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	5e		 pop	 esi
  0005f	83 c4 08	 add	 esp, 8
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
??$?0ABVFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@ABVFrameAnimation@thor@@@Z ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??$_Call@AAVFrameAnimation@thor@@AAVSprite@sf@@M@?$_Invoker_ret@X$00@std@@SAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z
_TEXT	SEGMENT
__Func$ = 8						; size = 4
_<_Vals_0>$ = 12					; size = 4
_<_Vals_1>$ = 16					; size = 4
??$_Call@AAVFrameAnimation@thor@@AAVSprite@sf@@M@?$_Invoker_ret@X$00@std@@SAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z PROC ; std::_Invoker_ret<void,1>::_Call<thor::FrameAnimation &,sf::Sprite &,float>, COMDAT

; 743  :         _Valtys...>::_Is_nothrow_invocable::value) { // INVOKE, "implicitly" converted to void

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 744  :         _STD invoke(static_cast<_Fx&&>(_Func), static_cast<_Valtys&&>(_Vals)...);

  0000d	8b 45 10	 mov	 eax, DWORD PTR _<_Vals_1>$[ebp]
  00010	50		 push	 eax
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Vals_0>$[ebp]
  00014	51		 push	 ecx
  00015	8b 55 08	 mov	 edx, DWORD PTR __Func$[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 ??$invoke@AAVFrameAnimation@thor@@AAVSprite@sf@@M@std@@YAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z ; std::invoke<thor::FrameAnimation &,sf::Sprite &,float>
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 745  :     }

  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Call@AAVFrameAnimation@thor@@AAVSprite@sf@@M@?$_Invoker_ret@X$00@std@@SAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z ENDP ; std::_Invoker_ret<void,1>::_Call<thor::FrameAnimation &,sf::Sprite &,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@M@std@@YA$$QAMAAM@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@M@std@@YA$$QAMAAM@Z PROC			; std::forward<float>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@M@std@@YA$$QAMAAM@Z ENDP			; std::forward<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AAVSprite@sf@@@std@@YAAAVSprite@sf@@AAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVSprite@sf@@@std@@YAAAVSprite@sf@@AAV12@@Z PROC ; std::forward<sf::Sprite &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@AAVSprite@sf@@@std@@YAAAVSprite@sf@@AAV12@@Z ENDP ; std::forward<sf::Sprite &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@$$CBVFrameAnimation@thor@@@std@@YAPBVFrameAnimation@thor@@ABV12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBVFrameAnimation@thor@@@std@@YAPBVFrameAnimation@thor@@ABV12@@Z PROC ; std::addressof<thor::FrameAnimation const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@$$CBVFrameAnimation@thor@@@std@@YAPBVFrameAnimation@thor@@ABV12@@Z ENDP ; std::addressof<thor::FrameAnimation const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Deallocate@$03$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$03$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<4,0>, COMDAT

; 251  : _CONSTEXPR20_DYNALLOC void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate@$03$0A@@std@@YAXPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00027	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {

  0002c	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	74 0e		 je	 SHORT $LN2@Deallocate

; 255  :         ::operator delete(_Ptr);

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00041	83 c4 04	 add	 esp, 4

; 256  :     } else

  00044	eb 29		 jmp	 SHORT $LN5@Deallocate
$LN2@Deallocate:

; 257  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00046	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  0004d	72 10		 jb	 SHORT $LN4@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0004f	8d 55 0c	 lea	 edx, DWORD PTR __Bytes$[ebp]
  00052	52		 push	 edx
  00053	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  0005c	83 c4 08	 add	 esp, 8
$LN4@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00062	51		 push	 ecx
  00063	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00066	52		 push	 edx
  00067	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006c	83 c4 08	 add	 esp, 8
$LN5@Deallocate:

; 265  :     }
; 266  : }

  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
  00088	cc		 int	 3
  00089	cc		 int	 3
  0008a	cc		 int	 3
  0008b	cc		 int	 3
  0008c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$03$0A@@std@@YAXPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate@$03$0A@@std@@YAXPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$03$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<4,0>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv77 = -8						; size = 4
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 30		 je	 SHORT $LN2@Construct_

; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 f8	 mov	 DWORD PTR tv77[ebp], eax
  00040	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  00049	83 c4 04	 add	 esp, 4
  0004c	89 45 f4	 mov	 DWORD PTR tv75[ebp], eax
  0004f	8b 45 f8	 mov	 eax, DWORD PTR tv77[ebp]
  00052	50		 push	 eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR tv75[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ??$construct_at@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@X@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@QAPAU10@ABQAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &,void>
  0005c	83 c4 08	 add	 esp, 8

; 155  :     } else

  0005f	eb 36		 jmp	 SHORT $LN4@Construct_
$LN2@Construct_:

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00061	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  0006a	83 c4 04	 add	 esp, 4
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * *>
  00073	83 c4 04	 add	 esp, 4
  00076	50		 push	 eax
  00077	6a 04		 push	 4
  00079	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0007e	83 c4 08	 add	 esp, 8
  00081	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00084	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
  0008d	83 c4 04	 add	 esp, 4
  00090	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00093	8b 10		 mov	 edx, DWORD PTR [eax]
  00095	89 11		 mov	 DWORD PTR [ecx], edx
$LN4@Construct_:

; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABU10@@Z PROC ; std::forward<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABU10@@Z ENDP ; std::forward<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT

; 374  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00027	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 375  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 376  :         _Destroy_in_place(_Ptr->_Left);

  0002c	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  00035	83 c4 04	 add	 esp, 4

; 377  :         _Destroy_in_place(_Ptr->_Parent);

  00038	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0003b	83 c1 04	 add	 ecx, 4
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  00044	83 c4 04	 add	 esp, 4

; 378  :         _Destroy_in_place(_Ptr->_Right);

  00047	8b 55 0c	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0004a	83 c2 08	 add	 edx, 8
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *>
  00053	83 c4 04	 add	 esp, 4

; 379  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

  00056	6a 01		 push	 1
  00058	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::deallocate
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH

; 380  :     }

  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
  00081	cc		 int	 3
  00082	cc		 int	 3
  00083	cc		 int	 3
  00084	cc		 int	 3
  00085	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx

; 748  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
$LN2@Erase_tree:

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0001b	0f be 48 0d	 movsx	 ecx, BYTE PTR [eax+13]
  0001f	85 c9		 test	 ecx, ecx
  00021	75 32		 jne	 SHORT $LN4@Erase_tree

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00023	8b 55 0c	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  00026	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >

; 751  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));

  00036	8b 55 0c	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  00039	52		 push	 edx
  0003a	8d 45 0c	 lea	 eax, DWORD PTR __Rootnode$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * &>
  00043	83 c4 08	 add	 esp, 8
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  00050	83 c4 08	 add	 esp, 8

; 752  :         }

  00053	eb c3		 jmp	 SHORT $LN2@Erase_tree
$LN4@Erase_tree:

; 753  :     }

  00055	83 c4 04	 add	 esp, 4
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
tv82 = -16						; size = 4
tv77 = -12						; size = 4
tv79 = -8						; size = 4
_this$ = -4						; size = 4
__Bound$ = 8						; size = 4
__Keyval$ = 12						; size = 4
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1598 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1599 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00024	8b 45 08	 mov	 eax, DWORD PTR __Bound$[ebp]
  00027	0f be 48 0d	 movsx	 ecx, BYTE PTR [eax+13]
  0002b	85 c9		 test	 ecx, ecx
  0002d	75 41		 jne	 SHORT $LN3@Lower_boun
  0002f	8b 55 08	 mov	 edx, DWORD PTR __Bound$[ebp]
  00032	83 c2 10	 add	 edx, 16			; 00000010H
  00035	52		 push	 edx
  00036	e8 00 00 00 00	 call	 ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
  0003b	83 c4 04	 add	 esp, 4
  0003e	89 45 f8	 mov	 DWORD PTR tv79[ebp], eax
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp
  00049	89 45 f4	 mov	 DWORD PTR tv77[ebp], eax
  0004c	8b 45 f8	 mov	 eax, DWORD PTR tv79[ebp]
  0004f	50		 push	 eax
  00050	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00053	51		 push	 ecx
  00054	8b 55 f4	 mov	 edx, DWORD PTR tv77[ebp]
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@$0A@@std@@YA_NABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	0f b6 c0	 movzx	 eax, al
  00063	85 c0		 test	 eax, eax
  00065	75 09		 jne	 SHORT $LN3@Lower_boun
  00067	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  0006e	eb 07		 jmp	 SHORT $LN4@Lower_boun
$LN3@Lower_boun:
  00070	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN4@Lower_boun:
  00077	8a 45 f0	 mov	 al, BYTE PTR tv82[ebp]

; 1600 :     }

  0007a	83 c4 10	 add	 esp, 16			; 00000010H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
tv82 = -44						; size = 4
tv84 = -40						; size = 4
__Trynode$ = -36					; size = 4
__Result$ = -28						; size = 12
__Scary$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1603 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00025	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0002a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1604 :         const auto _Scary = _Get_scary();

  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00037	89 45 f4	 mov	 DWORD PTR __Scary$[ebp], eax

; 1605 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  0003a	8b 45 f4	 mov	 eax, DWORD PTR __Scary$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00043	89 55 e4	 mov	 DWORD PTR __Result$[ebp], edx
  00046	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __Result$[ebp+4], 0
  0004d	8b 45 f4	 mov	 eax, DWORD PTR __Scary$[ebp]
  00050	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00053	89 4d ec	 mov	 DWORD PTR __Result$[ebp+8], ecx

; 1606 :         _Nodeptr _Trynode = _Result._Location._Parent;

  00056	8b 55 e4	 mov	 edx, DWORD PTR __Result$[ebp]
  00059	89 55 dc	 mov	 DWORD PTR __Trynode$[ebp], edx
$LN2@Find_lower:

; 1607 :         while (!_Trynode->_Isnil) {

  0005c	8b 45 dc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0005f	0f be 48 0d	 movsx	 ecx, BYTE PTR [eax+13]
  00063	85 c9		 test	 ecx, ecx
  00065	75 67		 jne	 SHORT $LN3@Find_lower

; 1608 :             _Result._Location._Parent = _Trynode;

  00067	8b 55 dc	 mov	 edx, DWORD PTR __Trynode$[ebp]
  0006a	89 55 e4	 mov	 DWORD PTR __Result$[ebp], edx

; 1609 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  0006d	8b 45 dc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00070	83 c0 10	 add	 eax, 16			; 00000010H
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
  00079	83 c4 04	 add	 esp, 4
  0007c	89 45 d8	 mov	 DWORD PTR tv84[ebp], eax
  0007f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp
  00087	89 45 d4	 mov	 DWORD PTR tv82[ebp], eax
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  0008d	51		 push	 ecx
  0008e	8b 55 d8	 mov	 edx, DWORD PTR tv84[ebp]
  00091	52		 push	 edx
  00092	8b 45 d4	 mov	 eax, DWORD PTR tv82[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@$0A@@std@@YA_NABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009e	0f b6 c8	 movzx	 ecx, al
  000a1	85 c9		 test	 ecx, ecx
  000a3	74 12		 je	 SHORT $LN4@Find_lower

; 1610 :                 _Result._Location._Child = _Tree_child::_Right;

  000a5	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR __Result$[ebp+4], 0

; 1611 :                 _Trynode                 = _Trynode->_Right;

  000ac	8b 55 dc	 mov	 edx, DWORD PTR __Trynode$[ebp]
  000af	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000b2	89 45 dc	 mov	 DWORD PTR __Trynode$[ebp], eax

; 1612 :             } else {

  000b5	eb 15		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1613 :                 _Result._Location._Child = _Tree_child::_Left;

  000b7	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR __Result$[ebp+4], 1

; 1614 :                 _Result._Bound           = _Trynode;

  000be	8b 4d dc	 mov	 ecx, DWORD PTR __Trynode$[ebp]
  000c1	89 4d ec	 mov	 DWORD PTR __Result$[ebp+8], ecx

; 1615 :                 _Trynode                 = _Trynode->_Left;

  000c4	8b 55 dc	 mov	 edx, DWORD PTR __Trynode$[ebp]
  000c7	8b 02		 mov	 eax, DWORD PTR [edx]
  000c9	89 45 dc	 mov	 DWORD PTR __Trynode$[ebp], eax
$LN5@Find_lower:

; 1616 :             }
; 1617 :         }

  000cc	eb 8e		 jmp	 SHORT $LN2@Find_lower
$LN3@Find_lower:

; 1618 : 
; 1619 :         return _Result;

  000ce	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000d1	8b 55 e4	 mov	 edx, DWORD PTR __Result$[ebp]
  000d4	89 11		 mov	 DWORD PTR [ecx], edx
  000d6	8b 45 e8	 mov	 eax, DWORD PTR __Result$[ebp+4]
  000d9	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000dc	8b 55 ec	 mov	 edx, DWORD PTR __Result$[ebp+8]
  000df	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  000e2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1620 :     }

  000e5	52		 push	 edx
  000e6	8b cd		 mov	 ecx, ebp
  000e8	50		 push	 eax
  000e9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@Find_lower
  000ef	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f4	58		 pop	 eax
  000f5	5a		 pop	 edx
  000f6	5f		 pop	 edi
  000f7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fa	33 cd		 xor	 ecx, ebp
  000fc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00101	83 c4 2c	 add	 esp, 44			; 0000002cH
  00104	3b ec		 cmp	 ebp, esp
  00106	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 08 00	 ret	 8
  00111	0f 1f 00	 npad	 3
$LN9@Find_lower:
  00114	01 00 00 00	 DD	 1
  00118	00 00 00 00	 DD	 $LN8@Find_lower
$LN8@Find_lower:
  0011c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00120	0c 00 00 00	 DD	 12			; 0000000cH
  00124	00 00 00 00	 DD	 $LN7@Find_lower
$LN7@Find_lower:
  00128	5f		 DB	 95			; 0000005fH
  00129	52		 DB	 82			; 00000052H
  0012a	65		 DB	 101			; 00000065H
  0012b	73		 DB	 115			; 00000073H
  0012c	75		 DB	 117			; 00000075H
  0012d	6c		 DB	 108			; 0000006cH
  0012e	74		 DB	 116			; 00000074H
  0012f	00		 DB	 0
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 693  :     static _CONSTEXPR20_DYNALLOC void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 694  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 695  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 696  :         if (_STD is_constant_evaluated()) {

  0000d	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00012	0f b6 c0	 movzx	 eax, al
  00015	85 c0		 test	 eax, eax
  00017	74 12		 je	 SHORT $LN2@deallocate

; 697  :             _Al.deallocate(_Ptr, _Count);

  00019	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 0c	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00020	52		 push	 edx
  00021	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00024	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXQAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 698  :         } else

  00029	eb 13		 jmp	 SHORT $LN1@deallocate
$LN2@deallocate:

; 699  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 700  :         {
; 701  :             (void) _Al;
; 702  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0002b	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  0002e	c1 e0 03	 shl	 eax, 3
  00031	50		 push	 eax
  00032	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003b	83 c4 08	 add	 esp, 8
$LN1@deallocate:

; 703  :         }
; 704  :     }

  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??$?0VFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@$$QAVFrameAnimation@thor@@@Z
_TEXT	SEGMENT
tv81 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$?0VFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@$$QAVFrameAnimation@thor@@@Z PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation,0>, COMDAT
; _this$ = ecx

; 896  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ??0?$_Func_base@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_base<void,sf::Sprite &,float>::_Func_base<void,sf::Sprite &,float>
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@6B@
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 04	 add	 ecx, 4
  00039	89 4d f8	 mov	 DWORD PTR tv81[ebp], ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ??$forward@VFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ; std::forward<thor::FrameAnimation>
  00045	83 c4 04	 add	 esp, 4
  00048	8b f4		 mov	 esi, esp
  0004a	50		 push	 eax
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR tv81[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@$$QAV01@@Z
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	5e		 pop	 esi
  0005f	83 c4 08	 add	 esp, 8
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
??$?0VFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@$$QAVFrameAnimation@thor@@@Z ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@VFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z PROC ; std::forward<thor::FrameAnimation>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@VFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ENDP ; std::forward<thor::FrameAnimation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAEPAXI@Z PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 18		 push	 24			; 00000018H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAEPAXI@Z ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@XZ PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::~_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 04	 add	 ecx, 4
  00015	8b f4		 mov	 esi, esp
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	5e		 pop	 esi
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@XZ ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::~_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Dealloc$ = 8						; size = 1
?_Delete_this@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEX_N@Z PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Delete_this, COMDAT
; _this$ = ecx

; 935  :     virtual void _Delete_this(bool _Dealloc) noexcept override { // destroy self

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 936  :         this->~_Func_impl_no_alloc();

  00018	6a 00		 push	 0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ??_G?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAEPAXI@Z

; 937  :         if (_Dealloc) {

  00022	0f b6 45 08	 movzx	 eax, BYTE PTR __Dealloc$[ebp]
  00026	85 c0		 test	 eax, eax
  00028	74 0e		 je	 SHORT $LN3@Delete_thi

; 938  :             _Deallocate<alignof(_Func_impl_no_alloc)>(this, sizeof(_Func_impl_no_alloc));

  0002a	6a 18		 push	 24			; 00000018H
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$_Deallocate@$03$0A@@std@@YAXPAXI@Z ; std::_Deallocate<4,0>
  00035	83 c4 08	 add	 esp, 8
$LN3@Delete_thi:

; 939  :         }
; 940  :     }

  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?_Delete_this@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEX_N@Z ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Get@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPBXXZ PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Get, COMDAT
; _this$ = ecx

; 931  :     virtual const void* _Get() const noexcept override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 932  :         return _STD addressof(_Callee);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c0 04	 add	 eax, 4
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@$$CBVFrameAnimation@thor@@@std@@YAPBVFrameAnimation@thor@@ABV12@@Z ; std::addressof<thor::FrameAnimation const >
  00024	83 c4 04	 add	 esp, 4

; 933  :     }

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?_Get@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPBXXZ ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Target_type@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEABVtype_info@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Target_type@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEABVtype_info@@XZ PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Target_type, COMDAT
; _this$ = ecx

; 923  :     virtual const type_info& _Target_type() const noexcept override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 924  : #if _HAS_STATIC_RTTI
; 925  :         return typeid(_Callable);

  00018	b8 00 00 00 00	 mov	 eax, OFFSET ??_R0?AVFrameAnimation@thor@@@8

; 926  : #else // _HAS_STATIC_RTTI
; 927  :         _CSTD abort();
; 928  : #endif // _HAS_STATIC_RTTI
; 929  :     }

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Target_type@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEABVtype_info@@XZ ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Do_call@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEXAAVSprite@sf@@$$QAM@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
tv75 = -8						; size = 4
_this$ = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
_<_Args_1>$ = 12					; size = 4
?_Do_call@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEXAAVSprite@sf@@$$QAM@Z PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Do_call, COMDAT
; _this$ = ecx

; 919  :     virtual _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 920  :         return _Invoker_ret<_Rx>::_Call(_Callee, _STD forward<_Types>(_Args)...);

  00028	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_1>$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$forward@M@std@@YA$$QAMAAM@Z ; std::forward<float>
  00031	83 c4 04	 add	 esp, 4
  00034	89 45 f8	 mov	 DWORD PTR tv75[ebp], eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$forward@AAVSprite@sf@@@std@@YAAAVSprite@sf@@AAV12@@Z ; std::forward<sf::Sprite &>
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f4	 mov	 DWORD PTR tv73[ebp], eax
  00046	8b 55 f8	 mov	 edx, DWORD PTR tv75[ebp]
  00049	52		 push	 edx
  0004a	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c1 04	 add	 ecx, 4
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$_Call@AAVFrameAnimation@thor@@AAVSprite@sf@@M@?$_Invoker_ret@X$00@std@@SAXAAVFrameAnimation@thor@@AAVSprite@sf@@$$QAM@Z ; std::_Invoker_ret<void,1>::_Call<thor::FrameAnimation &,sf::Sprite &,float>
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 921  :     }

  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?_Do_call@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEXAAVSprite@sf@@$$QAM@Z ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z
_TEXT	SEGMENT
tv80 = -24						; size = 4
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 4
?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Move, COMDAT
; _this$ = ecx

; 910  :     virtual _Mybase* _Move(void* _Where) noexcept override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  0001b	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  00022	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00042	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 911  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 912  :             (void) _Where; // TRANSITION, DevCom-1004719
; 913  :             return nullptr;
; 914  :         } else {
; 915  :             return ::new (_Where) _Func_impl_no_alloc(_STD move(_Callee));

  00047	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  0004a	50		 push	 eax
  0004b	6a 18		 push	 24			; 00000018H
  0004d	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00052	83 c4 08	 add	 esp, 8
  00055	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 04	 add	 ecx, 4
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??$move@AAVFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ; std::move<thor::FrameAnimation &>
  00064	83 c4 04	 add	 esp, 4
  00067	89 45 e8	 mov	 DWORD PTR tv80[ebp], eax
  0006a	8b 55 e8	 mov	 edx, DWORD PTR tv80[ebp]
  0006d	52		 push	 edx
  0006e	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  00071	e8 00 00 00 00	 call	 ??$?0VFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@$$QAVFrameAnimation@thor@@@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation,0>

; 916  :         }
; 917  :     }

  00076	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	83 c4 18	 add	 esp, 24			; 00000018H
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
  00094	cc		 int	 3
  00095	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Move@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EAEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Move
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Copy@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z PROC ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Copy, COMDAT
; _this$ = ecx

; 901  :     virtual _Mybase* _Copy(void* _Where) const override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 902  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 903  :             (void) _Where; // TRANSITION, DevCom-1004719
; 904  :             return _Global_new<_Func_impl_no_alloc>(_Callee);
; 905  :         } else {
; 906  :             return ::new (_Where) _Func_impl_no_alloc(_Callee);

  00021	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00024	50		 push	 eax
  00025	6a 18		 push	 24			; 00000018H
  00027	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002c	83 c4 08	 add	 esp, 8
  0002f	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	83 c1 04	 add	 ecx, 4
  00038	51		 push	 ecx
  00039	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0003c	e8 00 00 00 00	 call	 ??$?0ABVFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@ABVFrameAnimation@thor@@@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation const &,0>

; 907  :         }
; 908  :     }

  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?_Copy@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@EBEPAV?$_Func_base@XAAVSprite@sf@@M@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??$_Test_callable@VFrameAnimation@thor@@@std@@YA_NABVFrameAnimation@thor@@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Test_callable@VFrameAnimation@thor@@@std@@YA_NABVFrameAnimation@thor@@@Z PROC ; std::_Test_callable<thor::FrameAnimation>, COMDAT

; 776  : bool _Test_callable(const _Ty& _Arg) noexcept { // determine whether std::function must store _Arg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 777  :     if constexpr (_Testable_callable_v<_Ty>) {
; 778  :         return !!_Arg;
; 779  :     } else {
; 780  :         return true;

  0000d	b0 01		 mov	 al, 1

; 781  :     }
; 782  : }

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Test_callable@VFrameAnimation@thor@@@std@@YA_NABVFrameAnimation@thor@@@Z ENDP ; std::_Test_callable<thor::FrameAnimation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
tv84 = -44						; size = 4
$T1 = -40						; size = 4
$T2 = -36						; size = 12
__Result$ = -20						; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT
; _this$ = ecx

; 1044 :     pair<iterator, bool> emplace(_Valtys&&... _Vals) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00025	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  0002c	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00031	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1045 :         const auto _Result = _Emplace(_STD forward<_Valtys>(_Vals)...);

  00036	8b 45 0c	 mov	 eax, DWORD PTR _<_Vals_0>$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  0003f	83 c4 04	 add	 esp, 4
  00042	50		 push	 eax
  00043	8d 4d ec	 lea	 ecx, DWORD PTR __Result$[ebp]
  00046	51		 push	 ecx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??$_Emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >

; 1046 :         return {iterator(_Result.first, _Get_scary()), _Result.second};

  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00057	50		 push	 eax
  00058	8b 55 ec	 mov	 edx, DWORD PTR __Result$[ebp]
  0005b	52		 push	 edx
  0005c	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  0005f	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
  00064	89 45 d4	 mov	 DWORD PTR tv84[ebp], eax
  00067	8d 45 f0	 lea	 eax, DWORD PTR __Result$[ebp+4]
  0006a	50		 push	 eax
  0006b	8b 4d d4	 mov	 ecx, DWORD PTR tv84[ebp]
  0006e	51		 push	 ecx
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00072	e8 00 00 00 00	 call	 ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@1@AB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool const &,0>
  00077	8b 55 d8	 mov	 edx, DWORD PTR $T1[ebp]
  0007a	83 ca 01	 or	 edx, 1
  0007d	89 55 d8	 mov	 DWORD PTR $T1[ebp], edx
  00080	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00083	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00088	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1047 :     }

  0008b	52		 push	 edx
  0008c	8b cd		 mov	 ecx, ebp
  0008e	50		 push	 eax
  0008f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@emplace
  00095	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009a	58		 pop	 eax
  0009b	5a		 pop	 edx
  0009c	5f		 pop	 edi
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a0	33 cd		 xor	 ecx, ebp
  000a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a7	83 c4 2c	 add	 esp, 44			; 0000002cH
  000aa	3b ec		 cmp	 ebp, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 08 00	 ret	 8
  000b7	90		 npad	 1
$LN8@emplace:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN7@emplace
$LN7@emplace:
  000c0	ec ff ff ff	 DD	 -20			; ffffffecH
  000c4	08 00 00 00	 DD	 8
  000c8	00 00 00 00	 DD	 $LN6@emplace
$LN6@emplace:
  000cc	5f		 DB	 95			; 0000005fH
  000cd	52		 DB	 82			; 00000052H
  000ce	65		 DB	 101			; 00000065H
  000cf	73		 DB	 115			; 00000073H
  000d0	75		 DB	 117			; 00000075H
  000d1	6c		 DB	 108			; 0000006cH
  000d2	74		 DB	 116			; 00000074H
  000d3	00		 DB	 0
??$emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z PROC ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@@Z
_TEXT	SEGMENT
tv81 = -12						; size = 4
tv71 = -8						; size = 4
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>, COMDAT
; _this$ = ecx

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 ??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00037	83 c4 04	 add	 esp, 4
  0003a	50		 push	 eax
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR tv71[ebp]
  0003e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00046	83 c2 20	 add	 edx, 32			; 00000020H
  00049	89 55 f4	 mov	 DWORD PTR tv81[ebp], edx
  0004c	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@@std@@YA$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@AAU10@@Z ; std::forward<std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
  00055	83 c4 04	 add	 esp, 4
  00058	50		 push	 eax
  00059	8b 4d f4	 mov	 ecx, DWORD PTR tv81[ebp]
  0005c	e8 00 00 00 00	 call	 ??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@$$QAU01@@Z ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@@std@@YA$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@@std@@YA$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@AAU10@@Z PROC ; std::forward<std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@@std@@YA$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@AAU10@@Z ENDP ; std::forward<std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AAVTime@sf@@@std@@YAAAVTime@sf@@AAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVTime@sf@@@std@@YAAAVTime@sf@@AAV12@@Z PROC ; std::forward<sf::Time &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@AAVTime@sf@@@std@@YAAAVTime@sf@@AAV12@@Z ENDP ; std::forward<sf::Time &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YAABV?$function@$$A6AXAAVSprite@sf@@M@Z@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YAABV?$function@$$A6AXAAVSprite@sf@@M@Z@0@ABV10@@Z PROC ; std::forward<std::function<void __cdecl(sf::Sprite &,float)> const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YAABV?$function@$$A6AXAAVSprite@sf@@M@Z@0@ABV10@@Z ENDP ; std::forward<std::function<void __cdecl(sf::Sprite &,float)> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@ABV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@@std@@YA$$QBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@@std@@YA$$QBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@0@ABV10@@Z PROC ; std::move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1457 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$move@ABV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@@std@@YA$$QBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@0@ABV10@@Z ENDP ; std::move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Al$ = 8						; size = 4
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT

; 347  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00026	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 348  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 349  :         const auto _Pnode = _Al.allocate(1);

  0002b	6a 01		 push	 1
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00030	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocate
  00035	89 45 f4	 mov	 DWORD PTR __Pnode$[ebp], eax

; 350  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00038	8d 45 f4	 lea	 eax, DWORD PTR __Pnode$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
  00045	83 c4 08	 add	 esp, 8

; 351  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00048	8d 55 f4	 lea	 edx, DWORD PTR __Pnode$[ebp]
  0004b	52		 push	 edx
  0004c	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0004f	83 c0 04	 add	 eax, 4
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
  00058	83 c4 08	 add	 esp, 8

; 352  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0005b	8d 4d f4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00062	83 c2 08	 add	 edx, 8
  00065	52		 push	 edx
  00066	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> * const &>
  0006b	83 c4 08	 add	 esp, 8

; 353  :         _Pnode->_Color = _Black;

  0006e	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00071	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 354  :         _Pnode->_Isnil = true;

  00075	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00078	c6 41 0d 01	 mov	 BYTE PTR [ecx+13], 1

; 355  :         return _Pnode;

  0007c	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 356  :     }

  0007f	52		 push	 edx
  00080	8b cd		 mov	 ecx, ebp
  00082	50		 push	 eax
  00083	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Buyheadnod
  00089	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008e	58		 pop	 eax
  0008f	5a		 pop	 edx
  00090	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00093	33 cd		 xor	 ecx, ebp
  00095	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009a	83 c4 10	 add	 esp, 16			; 00000010H
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
$LN5@Buyheadnod:
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN4@Buyheadnod
$LN4@Buyheadnod:
  000b0	f4 ff ff ff	 DD	 -12			; fffffff4H
  000b4	04 00 00 00	 DD	 4
  000b8	00 00 00 00	 DD	 $LN3@Buyheadnod
$LN3@Buyheadnod:
  000bc	5f		 DB	 95			; 0000005fH
  000bd	50		 DB	 80			; 00000050H
  000be	6e		 DB	 110			; 0000006eH
  000bf	6f		 DB	 111			; 0000006fH
  000c0	64		 DB	 100			; 00000064H
  000c1	65		 DB	 101			; 00000065H
  000c2	00		 DB	 0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1><>, COMDAT
; _this$ = ecx

; 1390 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx

; 1395 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$forward@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABU10@@Z ; std::forward<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	89 4d f8	 mov	 DWORD PTR tv76[ebp], ecx
  00033	8b 55 10	 mov	 edx, DWORD PTR _<_Val2_0>$[ebp]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
  0003c	83 c4 04	 add	 esp, 4
  0003f	8a 00		 mov	 al, BYTE PTR [eax]
  00041	0f b6 c8	 movzx	 ecx, al
  00044	51		 push	 ecx
  00045	8b 4d f8	 mov	 ecx, DWORD PTR tv76[ebp]
  00048	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1><>
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >, COMDAT
; _this$ = ecx

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >, COMDAT
; _this$ = ecx

; 756  :     void _Erase_head(_Alnode& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 757  :         this->_Orphan_all();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 758  :         _Erase_tree(_Al, _Myhead->_Parent);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00026	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00029	52		 push	 edx
  0002a	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >

; 759  :         _Alnode::value_type::_Freenode0(_Al, _Myhead);

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0003c	52		 push	 edx
  0003d	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  00046	83 c4 08	 add	 esp, 8

; 760  :     }

  00049	83 c4 04	 add	 esp, 4
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Loc$ = -24						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__Keyval$ = 8						; size = 4
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1360 :     _NODISCARD _Nodeptr _Find(const _Other& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1361 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00037	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0003a	50		 push	 eax
  0003b	8d 4d e8	 lea	 ecx, DWORD PTR __Loc$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1362 :         if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

  00047	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  0004a	52		 push	 edx
  0004b	8b 45 f0	 mov	 eax, DWORD PTR __Loc$[ebp+8]
  0004e	50		 push	 eax
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00057	0f b6 c8	 movzx	 ecx, al
  0005a	85 c9		 test	 ecx, ecx
  0005c	74 05		 je	 SHORT $LN2@Find

; 1363 :             return _Loc._Bound;

  0005e	8b 45 f0	 mov	 eax, DWORD PTR __Loc$[ebp+8]
  00061	eb 0b		 jmp	 SHORT $LN1@Find
$LN2@Find:

; 1364 :         }
; 1365 : 
; 1366 :         return _Get_scary()->_Myhead;

  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  0006b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$LN1@Find:

; 1367 :     }

  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@Find
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00082	33 cd		 xor	 ecx, ebp
  00084	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00089	83 c4 1c	 add	 esp, 28			; 0000001cH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
  00099	0f 1f 00	 npad	 3
$LN6@Find:
  0009c	01 00 00 00	 DD	 1
  000a0	00 00 00 00	 DD	 $LN5@Find
$LN5@Find:
  000a4	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000a8	0c 00 00 00	 DD	 12			; 0000000cH
  000ac	00 00 00 00	 DD	 $LN4@Find
$LN4@Find:
  000b0	5f		 DB	 95			; 0000005fH
  000b1	4c		 DB	 76			; 0000004cH
  000b2	6f		 DB	 111			; 0000006fH
  000b3	63		 DB	 99			; 00000063H
  000b4	00		 DB	 0
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Ptr_container$ = -8					; size = 4
__Block_size$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00021	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00026	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00029	83 c0 27	 add	 eax, 39			; 00000027H
  0002c	89 45 fc	 mov	 DWORD PTR __Block_size$[ebp], eax

; 137  :     if (_Block_size <= _Bytes) {

  0002f	8b 4d fc	 mov	 ecx, DWORD PTR __Block_size$[ebp]
  00032	3b 4d 08	 cmp	 ecx, DWORD PTR __Bytes$[ebp]
  00035	77 05		 ja	 SHORT $LN8@Allocate_m

; 138  :         _Throw_bad_array_new_length(); // add overflow

  00037	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003c	8b 55 fc	 mov	 edx, DWORD PTR __Block_size$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
  00045	83 c4 04	 add	 esp, 4
  00048	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004b	83 7d f8 00	 cmp	 DWORD PTR __Ptr_container$[ebp], 0
  0004f	74 02		 je	 SHORT $LN7@Allocate_m
  00051	eb 5c		 jmp	 SHORT $LN2@Allocate_m
$LN7@Allocate_m:
  00053	8b f4		 mov	 esi, esp
  00055	68 00 00 00 00	 push	 OFFSET $SG98082
  0005a	68 00 00 00 00	 push	 OFFSET $SG98083
  0005f	6a 00		 push	 0
  00061	68 8e 00 00 00	 push	 142			; 0000008eH
  00066	68 00 00 00 00	 push	 OFFSET $SG98084
  0006b	6a 02		 push	 2
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00073	83 c4 18	 add	 esp, 24			; 00000018H
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 01		 jne	 SHORT $LN12@Allocate_m
  00082	cc		 int	 3
$LN12@Allocate_m:
  00083	8b f4		 mov	 esi, esp
  00085	6a 00		 push	 0
  00087	68 8e 00 00 00	 push	 142			; 0000008eH
  0008c	68 00 00 00 00	 push	 OFFSET $SG98085
  00091	68 00 00 00 00	 push	 OFFSET $SG98086
  00096	68 00 00 00 00	 push	 OFFSET $SG98087
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000a1	83 c4 14	 add	 esp, 20			; 00000014H
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	33 c9		 xor	 ecx, ecx
  000ad	75 a4		 jne	 SHORT $LN7@Allocate_m
$LN2@Allocate_m:
  000af	33 d2		 xor	 edx, edx
  000b1	75 98		 jne	 SHORT $LN4@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000b3	8b 45 f8	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  000b6	83 c0 27	 add	 eax, 39			; 00000027H
  000b9	83 e0 e0	 and	 eax, -32		; ffffffe0H
  000bc	89 45 f4	 mov	 DWORD PTR __Ptr$[ebp], eax

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000bf	b9 04 00 00 00	 mov	 ecx, 4
  000c4	6b d1 ff	 imul	 edx, ecx, -1
  000c7	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr_container$[ebp]
  000cd	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000d0	ba 04 00 00 00	 mov	 edx, 4
  000d5	6b c2 fe	 imul	 eax, edx, -2
  000d8	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000db	c7 04 01 fa fa
	fa fa		 mov	 DWORD PTR [ecx+eax], -84215046 ; fafafafaH

; 148  : #endif // _DEBUG
; 149  :     return _Ptr;

  000e2	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 150  : }

  000e5	5e		 pop	 esi
  000e6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e9	3b ec		 cmp	 ebp, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@PADAAPADX@std@@YAPAPADQAPADAAPAD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@PADAAPADX@std@@YAPAPADQAPADAAPAD@Z PROC	; std::construct_at<char *,char * &,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00015	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z ; std::_Voidify_iter<char * *>
  0001e	83 c4 04	 add	 esp, 4
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 55 fc	 mov	 edx, DWORD PTR $T1[ebp]
  0003e	8b 00		 mov	 eax, DWORD PTR [eax]
  00040	89 02		 mov	 DWORD PTR [edx], eax
  00042	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 145  : }

  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$construct_at@PADAAPADX@std@@YAPAPADQAPADAAPAD@Z ENDP	; std::construct_at<char *,char * &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z PROC		; std::_Voidify_iter<char * *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

  0000d	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z ENDP		; std::_Voidify_iter<char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@PADABQADX@std@@YAPAPADQAPADABQAD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@PADABQADX@std@@YAPAPADQAPADABQAD@Z PROC	; std::construct_at<char *,char * const &,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00015	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z ; std::_Voidify_iter<char * *>
  0001e	83 c4 04	 add	 esp, 4
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ??$forward@ABQAD@std@@YAABQADABQAD@Z ; std::forward<char * const &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 55 fc	 mov	 edx, DWORD PTR $T1[ebp]
  0003e	8b 00		 mov	 eax, DWORD PTR [eax]
  00040	89 02		 mov	 DWORD PTR [edx], eax
  00042	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 145  : }

  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$construct_at@PADABQADX@std@@YAPAPADQAPADABQAD@Z ENDP	; std::construct_at<char *,char * const &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABQAD@std@@YAABQADABQAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAD@std@@YAABQADABQAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@ABQAD@std@@YAABQADABQAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 985  : _CONSTEXPR20_DYNALLOC void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00027	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 986  :     // deallocate a plain pointer using an allocator
; 987  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 988  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 989  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  0002c	6a 01		 push	 1
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 990  :     } else {
; 991  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 992  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 993  :     }
; 994  : }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
  00057	cc		 int	 3
  00058	cc		 int	 3
  00059	cc		 int	 3
  0005a	cc		 int	 3
  0005b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??$_Reset@VFrameAnimation@thor@@@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAVFrameAnimation@thor@@@Z
_TEXT	SEGMENT
tv85 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Reset@VFrameAnimation@thor@@@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAVFrameAnimation@thor@@@Z PROC ; std::_Func_class<void,sf::Sprite &,float>::_Reset<thor::FrameAnimation>, COMDAT
; _this$ = ecx

; 1004 :     void _Reset(_Fx&& _Val) { // store copy of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1005 :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  00028	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Test_callable@VFrameAnimation@thor@@@std@@YA_NABVFrameAnimation@thor@@@Z ; std::_Test_callable<thor::FrameAnimation>
  00031	83 c4 04	 add	 esp, 4
  00034	0f b6 c8	 movzx	 ecx, al
  00037	85 c9		 test	 ecx, ecx
  00039	75 02		 jne	 SHORT $LN2@Reset

; 1006 :             return; // already empty

  0003b	eb 35		 jmp	 SHORT $LN1@Reset
$LN2@Reset:

; 1007 :         }
; 1008 : 
; 1009 :         using _Impl = _Func_impl_no_alloc<decay_t<_Fx>, _Ret, _Types...>;
; 1010 :         if constexpr (_Is_large<_Impl>) {
; 1011 :             // dynamically allocate _Val
; 1012 :             _Set(_Global_new<_Impl>(_STD forward<_Fx>(_Val)));
; 1013 :         } else {
; 1014 :             // store _Val in-situ
; 1015 :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  0003d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00040	52		 push	 edx
  00041	6a 18		 push	 24			; 00000018H
  00043	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00048	83 c4 08	 add	 esp, 8
  0004b	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$forward@VFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ; std::forward<thor::FrameAnimation>
  00057	83 c4 04	 add	 esp, 4
  0005a	89 45 f4	 mov	 DWORD PTR tv85[ebp], eax
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR tv85[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00064	e8 00 00 00 00	 call	 ??$?0VFrameAnimation@thor@@$0A@@?$_Func_impl_no_alloc@VFrameAnimation@thor@@XAAVSprite@sf@@M@std@@QAE@$$QAVFrameAnimation@thor@@@Z ; std::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float>::_Func_impl_no_alloc<thor::FrameAnimation,void,sf::Sprite &,float><thor::FrameAnimation,0>
  00069	50		 push	 eax
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set
$LN1@Reset:

; 1016 :         }
; 1017 :     }

  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
??$_Reset@VFrameAnimation@thor@@@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAVFrameAnimation@thor@@@Z ENDP ; std::_Func_class<void,sf::Sprite &,float>::_Reset<thor::FrameAnimation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AAVFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAVFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z PROC ; std::move<thor::FrameAnimation &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1457 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$move@AAVFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ENDP ; std::move<thor::FrameAnimation &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\map
;	COMDAT ??$insert@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@$0A@@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@$0A@@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,0>, COMDAT
; _this$ = ecx

; 164  :     pair<iterator, bool> insert(_Valty&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __84DB8D4B_map
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 165  :         return this->emplace(_STD forward<_Valty>(_Val));

  00028	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00031	83 c4 04	 add	 esp, 4
  00034	50		 push	 eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00038	51		 push	 ecx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ??$emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	83 ca 01	 or	 edx, 1
  00047	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 166  :     }

  0004d	83 c4 08	 add	 esp, 8
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 08 00	 ret	 8
??$insert@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@$0A@@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z
_TEXT	SEGMENT
tv83 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>, COMDAT
; _this$ = ecx

; 249  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00037	83 c4 04	 add	 esp, 4
  0003a	50		 push	 eax
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  0003e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00046	83 c2 20	 add	 edx, 32			; 00000020H
  00049	89 55 f4	 mov	 DWORD PTR tv83[ebp], edx
  0004c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0004f	83 c0 20	 add	 eax, 32			; 00000020H
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@@std@@YA$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@AAU10@@Z ; std::forward<std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR tv83[ebp]
  0005f	e8 00 00 00 00	 call	 ??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@$$QAU01@@Z ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 20	 add	 ecx, 32			; 00000020H
  00014	e8 00 00 00 00	 call	 ??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$make_pair@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
tv75 = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@@Z PROC ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >, COMDAT

; 407  :         is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00027	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 408  :     // return pair composed from arguments
; 409  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 410  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  0002c	8b 45 10	 mov	 eax, DWORD PTR __Val2$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??$forward@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@@std@@YA$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@AAU10@@Z ; std::forward<std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
  00035	83 c4 04	 add	 esp, 4
  00038	89 45 f8	 mov	 DWORD PTR tv75[ebp], eax
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 ??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00044	83 c4 04	 add	 esp, 4
  00047	89 45 f4	 mov	 DWORD PTR tv73[ebp], eax
  0004a	8b 55 f8	 mov	 edx, DWORD PTR tv75[ebp]
  0004d	52		 push	 edx
  0004e	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00055	e8 00 00 00 00	 call	 ??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,0>
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  0005d	83 c9 01	 or	 ecx, 1
  00060	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
  00063	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 411  : }

  00066	83 c4 0c	 add	 esp, 12			; 0000000cH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$make_pair@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@@Z ENDP ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$?0ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@AAVTime@sf@@$0A@@?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@1@AAVTime@sf@@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@AAVTime@sf@@$0A@@?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@1@AAVTime@sf@@@Z PROC ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time><std::function<void __cdecl(sf::Sprite &,float)> const &,sf::Time &,0>, COMDAT
; _this$ = ecx

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$forward@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YAABV?$function@$$A6AXAAVSprite@sf@@M@Z@0@ABV10@@Z ; std::forward<std::function<void __cdecl(sf::Sprite &,float)> const &>
  00030	83 c4 04	 add	 esp, 4
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR tv71[ebp]
  00037	e8 00 00 00 00	 call	 ??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>
  0003c	8b 55 0c	 mov	 edx, DWORD PTR __Val2$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ??$forward@AAVTime@sf@@@std@@YAAAVTime@sf@@AAV12@@Z ; std::forward<sf::Time &>
  00045	83 c4 04	 add	 esp, 4
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	89 48 28	 mov	 DWORD PTR [eax+40], ecx
  00053	89 50 2c	 mov	 DWORD PTR [eax+44], edx
  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 c4 08	 add	 esp, 8
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
??$?0ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@AAVTime@sf@@$0A@@?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@1@AAVTime@sf@@@Z ENDP ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time><std::function<void __cdecl(sf::Sprite &,float)> const &,sf::Time &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAEPAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 50		 push	 80			; 00000050H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAEPAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 20	 add	 ecx, 32			; 00000020H
  00014	e8 00 00 00 00	 call	 ??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ PROC ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::~pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ ENDP ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::~pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>, COMDAT
; _this$ = ecx

; 213  :     pair(pair&&)      = default;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR tv70[ebp], eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR tv70[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@$$QAV01@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>
  00033	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00036	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00039	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	89 42 28	 mov	 DWORD PTR [edx+40], eax
  00042	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABU01@@Z PROC ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>, COMDAT
; _this$ = ecx

; 212  :     pair(const pair&) = default;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR tv70[ebp], eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR tv70[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>
  00033	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00036	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00039	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	89 42 28	 mov	 DWORD PTR [edx+40], eax
  00042	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABU01@@Z ENDP ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
tv79 = -24						; size = 4
tv70 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >, COMDAT
; _this$ = ecx

; 212  :     pair(const pair&) = default;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  0001b	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  00022	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00042	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	89 45 ec	 mov	 DWORD PTR tv70[ebp], eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00050	51		 push	 ecx
  00051	8b 4d ec	 mov	 ecx, DWORD PTR tv70[ebp]
  00054	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00060	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00063	83 c2 20	 add	 edx, 32			; 00000020H
  00066	89 55 e8	 mov	 DWORD PTR tv79[ebp], edx
  00069	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0006c	83 c0 20	 add	 eax, 32			; 00000020H
  0006f	50		 push	 eax
  00070	8b 4d e8	 mov	 ecx, DWORD PTR tv79[ebp]
  00073	e8 00 00 00 00	 call	 ??0?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABU01@@Z ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>
  00078	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	83 c4 18	 add	 esp, 24			; 00000018H
  00090	3b ec		 cmp	 ebp, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@ABU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z
_TEXT	SEGMENT
tv176 = -176						; size = 4
tv154 = -172						; size = 4
tv174 = -168						; size = 4
tv139 = -164						; size = 4
tv167 = -160						; size = 4
tv79 = -156						; size = 4
tv162 = -152						; size = 4
$T2 = -148						; size = 4
$T3 = -144						; size = 12
$T4 = -132						; size = 12
$T5 = -120						; size = 4
$T6 = -116						; size = 28
$T7 = -88						; size = 28
_playingId$ = -56					; size = 28
_playing$ = -21						; size = 1
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::adopt<thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00017	57		 push	 edi
  00018	51		 push	 ecx
  00019	8d bd 50 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-176]
  0001f	b9 29 00 00 00	 mov	 ecx, 41			; 00000029H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00043	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0004d	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  00052	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 147  : 	// Move or copy source into this, depending on parameter type. T& is either Animator& or const Animator&
; 148  : 
; 149  : 	// Get playing ID from source before map is possibly moved
; 150  : 	bool playing = source.isPlayingAnimation();

  00057	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0005a	e8 00 00 00 00	 call	 ?isPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE_NXZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::isPlayingAnimation
  0005f	88 45 eb	 mov	 BYTE PTR _playing$[ebp], al

; 151  : 	Id playingId = playing ? source.getPlayingAnimation() : Id();

  00062	0f b6 45 eb	 movzx	 eax, BYTE PTR _playing$[ebp]
  00066	85 c0		 test	 eax, eax
  00068	74 2f		 je	 SHORT $LN5@adopt
  0006a	8d 4d a8	 lea	 ecx, DWORD PTR $T7[ebp]
  0006d	51		 push	 ecx
  0006e	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00071	e8 00 00 00 00	 call	 ?getPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::getPlayingAnimation
  00076	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv162[ebp], eax
  0007c	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00082	83 ca 01	 or	 edx, 1
  00085	89 95 6c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  0008b	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv162[ebp]
  00091	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv79[ebp], eax
  00097	eb 29		 jmp	 SHORT $LN6@adopt
$LN5@adopt:
  00099	8d 4d 8c	 lea	 ecx, DWORD PTR $T6[ebp]
  0009c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000a1	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv167[ebp], eax
  000a7	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000ad	83 c9 02	 or	 ecx, 2
  000b0	89 8d 6c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000b6	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv167[ebp]
  000bc	89 95 64 ff ff
	ff		 mov	 DWORD PTR tv79[ebp], edx
$LN6@adopt:
  000c2	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  000c8	89 45 88	 mov	 DWORD PTR $T5[ebp], eax
  000cb	8b 4d 88	 mov	 ecx, DWORD PTR $T5[ebp]
  000ce	51		 push	 ecx
  000cf	8d 4d c8	 lea	 ecx, DWORD PTR _playingId$[ebp]
  000d2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000de	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000e4	83 e2 02	 and	 edx, 2
  000e7	74 0f		 je	 SHORT $LN12@adopt
  000e9	83 a5 6c ff ff
	ff fd		 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  000f0	8d 4d 8c	 lea	 ecx, DWORD PTR $T6[ebp]
  000f3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN12@adopt:
  000f8	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  000fe	83 e0 01	 and	 eax, 1
  00101	74 0f		 je	 SHORT $LN13@adopt
  00103	83 a5 6c ff ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  0010a	8d 4d a8	 lea	 ecx, DWORD PTR $T7[ebp]
  0010d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN13@adopt:

; 152  : 
; 153  : 	// Move/copy other variables (std::move only has effect when source is mutable)
; 154  : 	mAnimationMap = std::move(source.mAnimationMap);

  00112	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00115	51		 push	 ecx
  00116	e8 00 00 00 00	 call	 ??$move@ABV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@@std@@YA$$QBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@0@ABV10@@Z ; std::move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const &>
  0011b	83 c4 04	 add	 esp, 4
  0011e	50		 push	 eax
  0011f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::operator=

; 155  : 	mProgress = source.mProgress;

  00127	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0012a	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0012d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00130	89 4a 18	 mov	 DWORD PTR [edx+24], ecx

; 156  : 	mLoop = source.mLoop;

  00133	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00136	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00139	8a 48 1c	 mov	 cl, BYTE PTR [eax+28]
  0013c	88 4a 1c	 mov	 BYTE PTR [edx+28], cl

; 157  : 
; 158  : 	// Reset playing ID in this instance
; 159  : 	if (playing)

  0013f	0f b6 55 eb	 movzx	 edx, BYTE PTR _playing$[ebp]
  00143	85 d2		 test	 edx, edx
  00145	74 44		 je	 SHORT $LN2@adopt

; 160  : 		mPlayingAnimation = mAnimationMap.find(playingId);

  00147	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0014a	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv139[ebp], eax
  00150	8d 4d c8	 lea	 ecx, DWORD PTR _playingId$[ebp]
  00153	51		 push	 ecx
  00154	8d 95 7c ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  0015a	52		 push	 edx
  0015b	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv139[ebp]
  00161	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::find
  00166	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv174[ebp], eax
  0016c	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv174[ebp]
  00172	50		 push	 eax
  00173	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00176	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00179	e8 00 00 00 00	 call	 ??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
  0017e	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00184	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00189	eb 3e		 jmp	 SHORT $LN3@adopt
$LN2@adopt:

; 161  : 	else
; 162  : 		mPlayingAnimation = mAnimationMap.end();

  0018b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0018e	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv154[ebp], ecx
  00194	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  0019a	52		 push	 edx
  0019b	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv154[ebp]
  001a1	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
  001a6	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv176[ebp], eax
  001ac	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv176[ebp]
  001b2	50		 push	 eax
  001b3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b6	83 c1 0c	 add	 ecx, 12			; 0000000cH
  001b9	e8 00 00 00 00	 call	 ??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
  001be	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  001c4	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
$LN3@adopt:

; 163  : }

  001c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001d0	8d 4d c8	 lea	 ecx, DWORD PTR _playingId$[ebp]
  001d3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001d8	52		 push	 edx
  001d9	8b cd		 mov	 ecx, ebp
  001db	50		 push	 eax
  001dc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN19@adopt
  001e2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e7	58		 pop	 eax
  001e8	5a		 pop	 edx
  001e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f3	59		 pop	 ecx
  001f4	5f		 pop	 edi
  001f5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f8	33 cd		 xor	 ecx, ebp
  001fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ff	81 c4 b0 00 00
	00		 add	 esp, 176		; 000000b0H
  00205	3b ec		 cmp	 ebp, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	8b e5		 mov	 esp, ebp
  0020e	5d		 pop	 ebp
  0020f	c2 04 00	 ret	 4
  00212	66 90		 npad	 2
$LN19@adopt:
  00214	01 00 00 00	 DD	 1
  00218	00 00 00 00	 DD	 $LN18@adopt
$LN18@adopt:
  0021c	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00220	1c 00 00 00	 DD	 28			; 0000001cH
  00224	00 00 00 00	 DD	 $LN16@adopt
$LN16@adopt:
  00228	70		 DB	 112			; 00000070H
  00229	6c		 DB	 108			; 0000006cH
  0022a	61		 DB	 97			; 00000061H
  0022b	79		 DB	 121			; 00000079H
  0022c	69		 DB	 105			; 00000069H
  0022d	6e		 DB	 110			; 0000006eH
  0022e	67		 DB	 103			; 00000067H
  0022f	49		 DB	 73			; 00000049H
  00230	64		 DB	 100			; 00000064H
  00231	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z$2:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR _playingId$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 8a 54 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-172]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00026	33 c8		 xor	 ecx, eax
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z
  00032	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::adopt<thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

  0000d	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@U_Container_proxy@std@@PAU_Container_base12@2@X@std@@YAPAU_Container_proxy@0@QAU10@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@U_Container_proxy@std@@PAU_Container_base12@2@X@std@@YAPAU_Container_proxy@0@QAU10@$$QAPAU_Container_base12@0@@Z PROC ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	6a 08		 push	 8
  0002d	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00032	83 c4 08	 add	 esp, 8
  00035	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
  00041	83 c4 04	 add	 esp, 4
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	89 55 f8	 mov	 DWORD PTR tv78[ebp], edx
  00049	8b 45 f8	 mov	 eax, DWORD PTR tv78[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00050	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 145  : }

  00055	83 c4 08	 add	 esp, 8
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$construct_at@U_Container_proxy@std@@PAU_Container_base12@2@X@std@@YAPAU_Container_proxy@0@QAU10@$$QAPAU_Container_base12@0@@Z ENDP ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABD@std@@YAABDABD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABD@std@@YAABDABD@Z PROC			; std::forward<char const &>, COMDAT

; 1443 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1444 :     return static_cast<_Ty&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1445 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$forward@ABD@std@@YAABDABD@Z ENDP			; std::forward<char const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Voidify_iter@PAD@std@@YAPAXPAD@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAD@std@@YAPAXPAD@Z PROC		; std::_Voidify_iter<char *>, COMDAT

; 130  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 131  :     if constexpr (is_pointer_v<_Iter>) {
; 132  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

  0000d	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]

; 133  :     } else {
; 134  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 135  :     }
; 136  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Voidify_iter@PAD@std@@YAPAXPAD@Z ENDP		; std::_Voidify_iter<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$construct_at@DABDX@std@@YAPADQADABD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Location$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct_at@DABDX@std@@YAPADQADABD@Z PROC		; std::construct_at<char,char const &,void>, COMDAT

; 143  :     noexcept(::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 144  :     return ::new (_Voidify_iter(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00015	8b 45 08	 mov	 eax, DWORD PTR __Location$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAD@std@@YAPAXPAD@Z ; std::_Voidify_iter<char *>
  0001e	83 c4 04	 add	 esp, 4
  00021	50		 push	 eax
  00022	6a 01		 push	 1
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ??$forward@ABD@std@@YAABDABD@Z ; std::forward<char const &>
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 55 fc	 mov	 edx, DWORD PTR $T1[ebp]
  0003e	8a 00		 mov	 al, BYTE PTR [eax]
  00040	88 02		 mov	 BYTE PTR [edx], al
  00042	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 145  : }

  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$construct_at@DABDX@std@@YAPADQADABD@Z ENDP		; std::construct_at<char,char const &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YAII@Z
_TEXT	SEGMENT
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$00@std@@YAII@Z PROC			; std::_Get_size_of_n<1>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00015	c6 45 ff 00	 mov	 BYTE PTR __Overflow_is_possible$[ebp], 0

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 64   :         if (_Count > _Max_possible) {
; 65   :             _Throw_bad_array_new_length(); // multiply overflow
; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00019	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]

; 70   : }

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YAII@Z ENDP			; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 251  : _CONSTEXPR20_DYNALLOC void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00027	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {

  0002c	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	74 0e		 je	 SHORT $LN2@Deallocate

; 255  :         ::operator delete(_Ptr);

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00041	83 c4 04	 add	 esp, 4

; 256  :     } else

  00044	eb 29		 jmp	 SHORT $LN5@Deallocate
$LN2@Deallocate:

; 257  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00046	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  0004d	72 10		 jb	 SHORT $LN4@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0004f	8d 55 0c	 lea	 edx, DWORD PTR __Bytes$[ebp]
  00052	52		 push	 edx
  00053	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  0005c	83 c4 08	 add	 esp, 8
$LN4@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00062	51		 push	 ecx
  00063	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00066	52		 push	 edx
  00067	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006c	83 c4 08	 add	 esp, 8
$LN5@Deallocate:

; 265  :     }
; 266  : }

  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
  00088	cc		 int	 3
  00089	cc		 int	 3
  0008a	cc		 int	 3
  0008b	cc		 int	 3
  0008c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20_DYNALLOC void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())

  0000d	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00012	0f b6 c0	 movzx	 eax, al
  00015	85 c0		 test	 eax, eax
  00017	75 17		 jne	 SHORT $LN2@Allocate

; 235  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00019	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00020	72 0e		 jb	 SHORT $LN2@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0002b	83 c4 04	 add	 esp, 4
  0002e	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00030	83 7d 08 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00034	74 0e		 je	 SHORT $LN4@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

  00036	8b 55 08	 mov	 edx, DWORD PTR __Bytes$[ebp]
  00039	52		 push	 edx
  0003a	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
  0003f	83 c4 04	 add	 esp, 4
  00042	eb 02		 jmp	 SHORT $LN1@Allocate
$LN4@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00044	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 248  : }

  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT

; 59   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 60   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 45 ff 01	 mov	 BYTE PTR __Overflow_is_possible$[ebp], 1

; 61   : 
; 62   :     if constexpr (_Overflow_is_possible) {
; 63   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00022	c7 45 f8 ff ff
	ff 1f		 mov	 DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH

; 64   :         if (_Count > _Max_possible) {

  00029	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00030	76 05		 jbe	 SHORT $LN2@Get_size_o

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00032	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00037	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0003a	c1 e0 03	 shl	 eax, 3
$LN3@Get_size_o:

; 70   : }

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT

; 42   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 43   :     // return larger of _Left and _Right
; 44   :     return _Left < _Right ? _Right : _Left;

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00028	73 08		 jae	 SHORT $LN3@max
  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0002d	89 45 f8	 mov	 DWORD PTR tv65[ebp], eax
  00030	eb 06		 jmp	 SHORT $LN4@max
$LN3@max:
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00035	89 4d f8	 mov	 DWORD PTR tv65[ebp], ecx
$LN4@max:
  00038	8b 55 f8	 mov	 edx, DWORD PTR tv65[ebp]
  0003b	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  0003e	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 45   : }

  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@PADAAPAD@std@@YAXAAPAD0@Z
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv77 = -8						; size = 4
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADAAPAD@std@@YAXAAPAD0@Z PROC	; std::_Construct_in_place<char *,char * &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 30		 je	 SHORT $LN2@Construct_

; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 f8	 mov	 DWORD PTR tv77[ebp], eax
  00040	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  00049	83 c4 04	 add	 esp, 4
  0004c	89 45 f4	 mov	 DWORD PTR tv75[ebp], eax
  0004f	8b 45 f8	 mov	 eax, DWORD PTR tv77[ebp]
  00052	50		 push	 eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR tv75[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ??$construct_at@PADAAPADX@std@@YAPAPADQAPADAAPAD@Z ; std::construct_at<char *,char * &,void>
  0005c	83 c4 08	 add	 esp, 8

; 155  :     } else

  0005f	eb 36		 jmp	 SHORT $LN4@Construct_
$LN2@Construct_:

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00061	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  0006a	83 c4 04	 add	 esp, 4
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z ; std::_Voidify_iter<char * *>
  00073	83 c4 04	 add	 esp, 4
  00076	50		 push	 eax
  00077	6a 04		 push	 4
  00079	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0007e	83 c4 08	 add	 esp, 8
  00081	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00084	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  0008d	83 c4 04	 add	 esp, 4
  00090	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00093	8b 10		 mov	 edx, DWORD PTR [eax]
  00095	89 11		 mov	 DWORD PTR [ecx], edx
$LN4@Construct_:

; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
??$_Construct_in_place@PADAAPAD@std@@YAXAAPAD0@Z ENDP	; std::_Construct_in_place<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv77 = -8						; size = 4
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 30		 je	 SHORT $LN2@Construct_

; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ??$forward@ABQAD@std@@YAABQADABQAD@Z ; std::forward<char * const &>
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 45 f8	 mov	 DWORD PTR tv77[ebp], eax
  00040	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  00049	83 c4 04	 add	 esp, 4
  0004c	89 45 f4	 mov	 DWORD PTR tv75[ebp], eax
  0004f	8b 45 f8	 mov	 eax, DWORD PTR tv77[ebp]
  00052	50		 push	 eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR tv75[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ??$construct_at@PADABQADX@std@@YAPAPADQAPADABQAD@Z ; std::construct_at<char *,char * const &,void>
  0005c	83 c4 08	 add	 esp, 8

; 155  :     } else

  0005f	eb 36		 jmp	 SHORT $LN4@Construct_
$LN2@Construct_:

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00061	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  0006a	83 c4 04	 add	 esp, 4
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAPAD@std@@YAPAXPAPAD@Z ; std::_Voidify_iter<char * *>
  00073	83 c4 04	 add	 esp, 4
  00076	50		 push	 eax
  00077	6a 04		 push	 4
  00079	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0007e	83 c4 08	 add	 esp, 8
  00081	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00084	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??$forward@ABQAD@std@@YAABQADABQAD@Z ; std::forward<char * const &>
  0008d	83 c4 04	 add	 esp, 4
  00090	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00093	8b 10		 mov	 edx, DWORD PTR [eax]
  00095	89 11		 mov	 DWORD PTR [ecx], edx
$LN4@Construct_:

; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z
_TEXT	SEGMENT
__New_ptr$ = -28					; size = 4
__Al$ = -20						; size = 4
__New_capacity$ = -16					; size = 4
__Old_capacity$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>, COMDAT
; _this$ = ecx

; 4505 :     _CONSTEXPR20_CONTAINER basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000e	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00011	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00014	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00017	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001a	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001d	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00020	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00028	33 c5		 xor	 eax, ebp
  0002a	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002d	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00030	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00035	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4506 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4507 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4508 :         if (_New_size > max_size()) {

  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00042	39 45 08	 cmp	 DWORD PTR __New_size$[ebp], eax
  00045	76 05		 jbe	 SHORT $LN2@Reallocate

; 4509 :             _Xlen_string(); // result too long

  00047	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Reallocate:

; 4510 :         }
; 4511 : 
; 4512 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00052	89 4d f4	 mov	 DWORD PTR __Old_capacity$[ebp], ecx

; 4513 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00055	8b 55 08	 mov	 edx, DWORD PTR __New_size$[ebp]
  00058	52		 push	 edx
  00059	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00061	89 45 f0	 mov	 DWORD PTR __New_capacity$[ebp], eax

; 4514 :         auto& _Al                     = _Getal();

  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006c	89 45 ec	 mov	 DWORD PTR __Al$[ebp], eax

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0006f	33 c0		 xor	 eax, eax
  00071	8b 4d f0	 mov	 ecx, DWORD PTR __New_capacity$[ebp]
  00074	83 c1 01	 add	 ecx, 1
  00077	0f 92 c0	 setb	 al
  0007a	f7 d8		 neg	 eax
  0007c	0b c1		 or	 eax, ecx
  0007e	50		 push	 eax
  0007f	8b 4d ec	 mov	 ecx, DWORD PTR __Al$[ebp]
  00082	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  00087	89 45 e4	 mov	 DWORD PTR __New_ptr$[ebp], eax

; 4516 : 
; 4517 : #ifdef __cpp_lib_constexpr_string
; 4518 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB

  0008a	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0008f	0f b6 d0	 movzx	 edx, al
  00092	85 d2		 test	 edx, edx
  00094	74 1e		 je	 SHORT $LN3@Reallocate

; 4519 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());

  00096	6a 00		 push	 0
  00098	8b 45 f0	 mov	 eax, DWORD PTR __New_capacity$[ebp]
  0009b	83 c0 01	 add	 eax, 1
  0009e	50		 push	 eax
  0009f	8b 4d e4	 mov	 ecx, DWORD PTR __New_ptr$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  000a8	83 c4 04	 add	 esp, 4
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPADQADID@Z ; std::_Narrow_char_traits<char,int>::assign
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@Reallocate:

; 4520 :         }
; 4521 : #endif // __cpp_lib_constexpr_string
; 4522 :         _Mypair._Myval2._Orphan_all();

  000b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000bc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	8b 45 08	 mov	 eax, DWORD PTR __New_size$[ebp]
  000c2	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	8b 55 f0	 mov	 edx, DWORD PTR __New_capacity$[ebp]
  000cb	89 51 18	 mov	 DWORD PTR [ecx+24], edx

; 4525 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000ce	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  000d1	50		 push	 eax
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR __New_size$[ebp]
  000d5	51		 push	 ecx
  000d6	8b 55 e4	 mov	 edx, DWORD PTR __New_ptr$[ebp]
  000d9	52		 push	 edx
  000da	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  000df	83 c4 04	 add	 esp, 4
  000e2	50		 push	 eax
  000e3	8d 4d 0c	 lea	 ecx, DWORD PTR __Fn$[ebp]
  000e6	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000eb	83 7d f4 10	 cmp	 DWORD PTR __Old_capacity$[ebp], 16 ; 00000010H
  000ef	72 21		 jb	 SHORT $LN4@Reallocate

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000f1	8b 45 f4	 mov	 eax, DWORD PTR __Old_capacity$[ebp]
  000f4	83 c0 01	 add	 eax, 1
  000f7	50		 push	 eax
  000f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000fe	52		 push	 edx
  000ff	8b 4d ec	 mov	 ecx, DWORD PTR __Al$[ebp]
  00102	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate

; 4528 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 4d e4	 mov	 ecx, DWORD PTR __New_ptr$[ebp]
  0010d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 4529 :         } else {

  00110	eb 13		 jmp	 SHORT $LN5@Reallocate
$LN4@Reallocate:

; 4530 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00112	8d 55 e4	 lea	 edx, DWORD PTR __New_ptr$[ebp]
  00115	52		 push	 edx
  00116	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00119	83 c0 04	 add	 eax, 4
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00122	83 c4 08	 add	 esp, 8
$LN5@Reallocate:

; 4531 :         }
; 4532 : 
; 4533 :         return *this;

  00125	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN6@Reallocate:

; 4534 :     }

  00128	52		 push	 edx
  00129	8b cd		 mov	 ecx, ebp
  0012b	50		 push	 eax
  0012c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@Reallocate
  00132	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00137	58		 pop	 eax
  00138	5a		 pop	 edx
  00139	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013c	33 cd		 xor	 ecx, ebp
  0013e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00143	83 c4 20	 add	 esp, 32			; 00000020H
  00146	3b ec		 cmp	 ebp, esp
  00148	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c2 0c 00	 ret	 12			; 0000000cH
  00153	90		 npad	 1
$LN9@Reallocate:
  00154	01 00 00 00	 DD	 1
  00158	00 00 00 00	 DD	 $LN8@Reallocate
$LN8@Reallocate:
  0015c	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00160	04 00 00 00	 DD	 4
  00164	00 00 00 00	 DD	 $LN7@Reallocate
$LN7@Reallocate:
  00168	5f		 DB	 95			; 0000005fH
  00169	4e		 DB	 78			; 0000004eH
  0016a	65		 DB	 101			; 00000065H
  0016b	77		 DB	 119			; 00000077H
  0016c	5f		 DB	 95			; 0000005fH
  0016d	70		 DB	 112			; 00000070H
  0016e	74		 DB	 116			; 00000074H
  0016f	72		 DB	 114			; 00000072H
  00170	00		 DB	 0
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__New_ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator(), COMDAT
; _this$ = ecx

; 3259 :             },

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  00021	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00028	51		 push	 ecx
  00029	8b 55 08	 mov	 edx, DWORD PTR __New_ptr$[ebp]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00035	c6 45 fb 00	 mov	 BYTE PTR $T1[ebp], 0
  00039	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR __New_ptr$[ebp]
  00040	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
  00049	83 c4 08	 add	 esp, 8

; 3259 :             },

  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 289  :     return _Ptr;

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 290  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 307  : _CONSTEXPR20_DYNALLOC void _Destroy_in_place(_Ty& _Obj) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 308  :     if constexpr (is_array_v<_Ty>) {
; 309  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 310  :     } else {
; 311  :         _Obj.~_Ty();
; 312  :     }
; 313  : }

  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??0?$_Func_base@XAAVSprite@sf@@M@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Func_base@XAAVSprite@sf@@M@std@@QAE@XZ PROC	; std::_Func_base<void,sf::Sprite &,float>::_Func_base<void,sf::Sprite &,float>, COMDAT
; _this$ = ecx

; 800  :     _Func_base()                  = default;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0?$_Func_base@XAAVSprite@sf@@M@std@@QAE@XZ ENDP	; std::_Func_base<void,sf::Sprite &,float>::_Func_base<void,sf::Sprite &,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 289  :     return _Ptr;

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 290  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx

; 1390 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT
; _this$ = ecx

; 1395 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
  00021	83 c4 04	 add	 esp, 4
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1455 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __589FA321_type_traits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1456 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1457 : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 829  :     constexpr allocator(const allocator<_Other>&) noexcept {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z
_TEXT	SEGMENT
__Ans$ = -4						; size = 4
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z PROC ; std::_Traits_compare<std::char_traits<char> >, COMDAT

; 588  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 589  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00015	8d 45 14	 lea	 eax, DWORD PTR __Right_size$[ebp]
  00018	50		 push	 eax
  00019	8d 4d 0c	 lea	 ecx, DWORD PTR __Left_size$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$min@I@std@@YAABIABI0@Z ; std::min<unsigned int>
  00022	83 c4 08	 add	 esp, 8
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	52		 push	 edx
  00028	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?compare@?$_Narrow_char_traits@DH@std@@SAHQBD0I@Z ; std::_Narrow_char_traits<char,int>::compare
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	89 45 fc	 mov	 DWORD PTR __Ans$[ebp], eax

; 591  : 
; 592  :     if (_Ans != 0) {

  0003b	83 7d fc 00	 cmp	 DWORD PTR __Ans$[ebp], 0
  0003f	74 05		 je	 SHORT $LN2@Traits_com

; 593  :         return _Ans;

  00041	8b 45 fc	 mov	 eax, DWORD PTR __Ans$[ebp]
  00044	eb 1e		 jmp	 SHORT $LN5@Traits_com
$LN2@Traits_com:

; 594  :     }
; 595  : 
; 596  :     if (_Left_size < _Right_size) {

  00046	8b 55 0c	 mov	 edx, DWORD PTR __Left_size$[ebp]
  00049	3b 55 14	 cmp	 edx, DWORD PTR __Right_size$[ebp]
  0004c	73 05		 jae	 SHORT $LN3@Traits_com

; 597  :         return -1;

  0004e	83 c8 ff	 or	 eax, -1
  00051	eb 11		 jmp	 SHORT $LN5@Traits_com
$LN3@Traits_com:

; 598  :     }
; 599  : 
; 600  :     if (_Left_size > _Right_size) {

  00053	8b 45 0c	 mov	 eax, DWORD PTR __Left_size$[ebp]
  00056	3b 45 14	 cmp	 eax, DWORD PTR __Right_size$[ebp]
  00059	76 07		 jbe	 SHORT $LN4@Traits_com

; 601  :         return 1;

  0005b	b8 01 00 00 00	 mov	 eax, 1
  00060	eb 02		 jmp	 SHORT $LN5@Traits_com
$LN4@Traits_com:

; 602  :     }
; 603  : 
; 604  :     return 0;

  00062	33 c0		 xor	 eax, eax
$LN5@Traits_com:

; 605  : }

  00064	83 c4 04	 add	 esp, 4
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ENDP ; std::_Traits_compare<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__New_proxy$ = -8					; size = 4
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1073 :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(_Alloc&& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1074 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00028	6a 01		 push	 1
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00038	83 c4 04	 add	 esp, 4
  0003b	89 45 f8	 mov	 DWORD PTR __New_proxy$[ebp], eax

; 1075 :         _Construct_in_place(*_New_proxy, this);

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00044	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00047	51		 push	 ecx
  00048	8b 55 f8	 mov	 edx, DWORD PTR __New_proxy$[ebp]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
  00051	83 c4 08	 add	 esp, 8

; 1076 :         _Myproxy            = _New_proxy;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR __New_proxy$[ebp]
  0005a	89 08		 mov	 DWORD PTR [eax], ecx

; 1077 :         _New_proxy->_Mycont = this;

  0005c	8b 55 f8	 mov	 edx, DWORD PTR __New_proxy$[ebp]
  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	89 02		 mov	 DWORD PTR [edx], eax

; 1078 :     }

  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1353 :     _CONSTEXPR20_CONTAINER ~_Container_proxy_ptr12() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1354 :         if (_Ptr) {

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001e	74 15		 je	 SHORT $LN3@Container_

; 1355 :             _Delete_plain_internal(_Al, _Ptr);

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	52		 push	 edx
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00032	83 c4 08	 add	 esp, 8
$LN3@Container_:

; 1356 :         }
; 1357 :     }

  00035	83 c4 04	 add	 esp, 4
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
__Mycont$ = 12						; size = 4
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1339 :     _CONSTEXPR20_CONTAINER _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ??0_Basic_container_proxy_ptr12@std@@IAE@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Al_$[ebp]
  0002f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1340 :         // create a new _Container_proxy pointing at _Mycont
; 1341 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00032	6a 01		 push	 1
  00034	8b 4d 08	 mov	 ecx, DWORD PTR __Al_$[ebp]
  00037	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00042	83 c4 04	 add	 esp, 4
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	89 02		 mov	 DWORD PTR [edx], eax

; 1342 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  0004a	8b 45 0c	 mov	 eax, DWORD PTR __Mycont$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
  00053	83 c4 04	 add	 esp, 4
  00056	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00059	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00060	8b 02		 mov	 eax, DWORD PTR [edx]
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
  00068	83 c4 08	 add	 esp, 8

; 1343 :         _Mycont._Myproxy = _Ptr;

  0006b	8b 4d 0c	 mov	 ecx, DWORD PTR __Mycont$[ebp]
  0006e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00071	8b 02		 mov	 eax, DWORD PTR [edx]
  00073	89 01		 mov	 DWORD PTR [ecx], eax

; 1344 :     }

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 c4 08	 add	 esp, 8
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 998  : _CONSTEXPR20_DYNALLOC void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 999  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1000 :     using _Ty = typename _Alloc::value_type;
; 1001 :     _Ptr->~_Ty();
; 1002 :     _Deallocate_plain(_Al, _Ptr);

  0000d	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00010	50		 push	 eax
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
  0001a	83 c4 08	 add	 esp, 8

; 1003 : }

  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00018	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YAII@Z ; std::_Get_size_of_n<8>
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0002a	83 c4 04	 add	 esp, 4

; 840  :     }

  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXQAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXQAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0001b	c1 e0 03	 shl	 eax, 3
  0001e	50		 push	 eax
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00028	83 c4 08	 add	 esp, 8

; 836  :     }

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXQAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT

; 66   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __1347750E_utility
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 67   :     // return smaller of _Left and _Right
; 68   :     return _Right < _Left ? _Right : _Left;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00028	73 08		 jae	 SHORT $LN3@min
  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0002d	89 45 f8	 mov	 DWORD PTR tv65[ebp], eax
  00030	eb 06		 jmp	 SHORT $LN4@min
$LN3@min:
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00035	89 4d f8	 mov	 DWORD PTR tv65[ebp], ecx
$LN4@min:
  00038	8b 55 f8	 mov	 edx, DWORD PTR tv65[ebp]
  0003b	89 55 fc	 mov	 DWORD PTR $T1[ebp], edx
  0003e	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 69   : }

  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Func$ = 8						; size = 20
??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z PROC ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>, COMDAT
; _this$ = ecx

; 1142 :     function(_Fx _Func) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  0003a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Func_class<void,sf::Sprite &,float>
  00047	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1143 :         this->_Reset(_STD move(_Func));

  0004b	8d 45 08	 lea	 eax, DWORD PTR __Func$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ??$move@AAVFrameAnimation@thor@@@std@@YA$$QAVFrameAnimation@thor@@AAV12@@Z ; std::move<thor::FrameAnimation &>
  00054	83 c4 04	 add	 esp, 4
  00057	50		 push	 eax
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ??$_Reset@VFrameAnimation@thor@@@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAVFrameAnimation@thor@@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Reset<thor::FrameAnimation>

; 1144 :     }

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	8b f4		 mov	 esi, esp
  00069	8d 4d 08	 lea	 ecx, DWORD PTR __Func$[ebp]
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00086	59		 pop	 ecx
  00087	5e		 pop	 esi
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d 08	 lea	 ecx, DWORD PTR __Func$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z$1:
  00012	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_class<void,sf::Sprite &,float>::~_Func_class<void,sf::Sprite &,float>
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
  0001e	cc		 int	 3
__ehhandler$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z:
  0001f	90		 npad	 1
  00020	90		 npad	 1
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z ENDP ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\FrameAnimation.hpp
;	COMDAT ??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z
_TEXT	SEGMENT
tv167 = -92						; size = 4
tv139 = -88						; size = 4
tv174 = -84						; size = 4
tv131 = -80						; size = 4
tv89 = -76						; size = 4
$T2 = -72						; size = 4
$T3 = -68						; size = 12
$T4 = -53						; size = 1
_frame$5 = -52						; size = 4
_auroraDetail_passed136$6 = -45				; size = 1
_auroraDetail_itr136$7 = -40				; size = 12
_auroraDetail_broken136$8 = -21				; size = 1
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_target$ = 8						; size = 4
_progress$ = 12						; size = 4
??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z PROC ; thor::FrameAnimation::operator()<sf::Sprite>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  0001a	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00031	50		 push	 eax
  00032	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00035	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0003e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET __B2B5E639_FrameAnimation@hpp
  0004a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 132  : 	assert(!mFrames.empty());

  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?empty@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE_NXZ ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::empty
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	74 21		 je	 SHORT $LN17@operator
  0005e	8b f4		 mov	 esi, esp
  00060	68 84 00 00 00	 push	 132			; 00000084H
  00065	68 00 00 00 00	 push	 OFFSET $SG99810
  0006a	68 00 00 00 00	 push	 OFFSET $SG99811
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
  00078	3b f4		 cmp	 esi, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN17@operator:

; 133  : 	assert(progress >= 0.f && progress <= 1.f);

  0007f	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _progress$[ebp]
  00084	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0008b	72 0e		 jb	 SHORT $LN18@operator
  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00095	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _progress$[ebp]
  00099	73 21		 jae	 SHORT $LN19@operator
$LN18@operator:
  0009b	8b f4		 mov	 esi, esp
  0009d	68 85 00 00 00	 push	 133			; 00000085H
  000a2	68 00 00 00 00	 push	 OFFSET $SG99812
  000a7	68 00 00 00 00	 push	 OFFSET $SG99813
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN19@operator:

; 134  : 
; 135  : 	ensureNormalized();

  000bc	8b f4		 mov	 esi, esp
  000be	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ensureNormalized@FrameAnimation@thor@@ABEXXZ
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 136  : 	AURORA_FOREACH(const detail::Frame& frame, mFrames)

  000ce	c6 45 eb 00	 mov	 BYTE PTR _auroraDetail_broken136$8[ebp], 0
  000d2	0f b6 45 eb	 movzx	 eax, BYTE PTR _auroraDetail_broken136$8[ebp]
  000d6	85 c0		 test	 eax, eax
  000d8	74 05		 je	 SHORT $LN8@operator
  000da	e9 4f 01 00 00	 jmp	 $LN9@operator
$LN8@operator:
  000df	6a 0c		 push	 12			; 0000000cH
  000e1	8d 4d d8	 lea	 ecx, DWORD PTR _auroraDetail_itr136$7[ebp]
  000e4	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEXI@Z
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	89 4d b4	 mov	 DWORD PTR tv89[ebp], ecx
  000ef	8d 55 d8	 lea	 edx, DWORD PTR _auroraDetail_itr136$7[ebp]
  000f2	52		 push	 edx
  000f3	8b 4d b4	 mov	 ecx, DWORD PTR tv89[ebp]
  000f6	e8 00 00 00 00	 call	 ?begin@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::begin
  000fb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00102	eb 08		 jmp	 SHORT $LN4@operator
$LN2@operator:
  00104	8d 4d d8	 lea	 ecx, DWORD PTR _auroraDetail_itr136$7[ebp]
  00107	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator++
$LN4@operator:
  0010c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	89 45 b0	 mov	 DWORD PTR tv131[ebp], eax
  00112	8d 4d bc	 lea	 ecx, DWORD PTR $T3[ebp]
  00115	51		 push	 ecx
  00116	8b 4d b0	 mov	 ecx, DWORD PTR tv131[ebp]
  00119	e8 00 00 00 00	 call	 ?end@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::end
  0011e	89 45 ac	 mov	 DWORD PTR tv174[ebp], eax
  00121	8b 55 b8	 mov	 edx, DWORD PTR $T2[ebp]
  00124	83 ca 01	 or	 edx, 1
  00127	89 55 b8	 mov	 DWORD PTR $T2[ebp], edx
  0012a	8b 45 ac	 mov	 eax, DWORD PTR tv174[ebp]
  0012d	50		 push	 eax
  0012e	8d 4d d8	 lea	 ecx, DWORD PTR _auroraDetail_itr136$7[ebp]
  00131	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator==
  00136	0f b6 c8	 movzx	 ecx, al
  00139	85 c9		 test	 ecx, ecx
  0013b	75 11		 jne	 SHORT $LN20@operator
  0013d	0f b6 55 eb	 movzx	 edx, BYTE PTR _auroraDetail_broken136$8[ebp]
  00141	85 d2		 test	 edx, edx
  00143	75 09		 jne	 SHORT $LN20@operator
  00145	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv139[ebp], 1
  0014c	eb 07		 jmp	 SHORT $LN21@operator
$LN20@operator:
  0014e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN21@operator:
  00155	8a 45 a8	 mov	 al, BYTE PTR tv139[ebp]
  00158	88 45 cb	 mov	 BYTE PTR $T4[ebp], al
  0015b	8b 4d b8	 mov	 ecx, DWORD PTR $T2[ebp]
  0015e	83 e1 01	 and	 ecx, 1
  00161	74 0c		 je	 SHORT $LN25@operator
  00163	83 65 b8 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00167	8d 4d bc	 lea	 ecx, DWORD PTR $T3[ebp]
  0016a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@XZ
$LN25@operator:
  0016f	0f b6 55 cb	 movzx	 edx, BYTE PTR $T4[ebp]
  00173	85 d2		 test	 edx, edx
  00175	0f 84 a4 00 00
	00		 je	 $LN3@operator
  0017b	c6 45 d3 00	 mov	 BYTE PTR _auroraDetail_passed136$6[ebp], 0
  0017f	0f b6 45 d3	 movzx	 eax, BYTE PTR _auroraDetail_passed136$6[ebp]
  00183	85 c0		 test	 eax, eax
  00185	74 05		 je	 SHORT $LN10@operator
  00187	e9 8e 00 00 00	 jmp	 $LN6@operator
$LN10@operator:
  0018c	c6 45 eb 01	 mov	 BYTE PTR _auroraDetail_broken136$8[ebp], 1
  00190	33 c9		 xor	 ecx, ecx
  00192	74 05		 je	 SHORT $LN12@operator
  00194	e9 81 00 00 00	 jmp	 $LN6@operator
$LN12@operator:
  00199	8d 4d d8	 lea	 ecx, DWORD PTR _auroraDetail_itr136$7[ebp]
  0019c	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEABUFrame@detail@thor@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator*
  001a1	89 45 cc	 mov	 DWORD PTR _frame$5[ebp], eax
  001a4	eb 08		 jmp	 SHORT $LN7@operator
$LN5@operator:
  001a6	c6 45 d3 01	 mov	 BYTE PTR _auroraDetail_passed136$6[ebp], 1
  001aa	c6 45 eb 00	 mov	 BYTE PTR _auroraDetail_broken136$8[ebp], 0
$LN7@operator:
  001ae	0f b6 55 d3	 movzx	 edx, BYTE PTR _auroraDetail_passed136$6[ebp]
  001b2	85 d2		 test	 edx, edx
  001b4	75 64		 jne	 SHORT $LN6@operator

; 137  : 	{
; 138  : 		progress -= frame.duration;

  001b6	8b 45 cc	 mov	 eax, DWORD PTR _frame$5[ebp]
  001b9	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _progress$[ebp]
  001be	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  001c2	f3 0f 11 45 0c	 movss	 DWORD PTR _progress$[ebp], xmm0

; 139  : 
; 140  : 		if (progress < 0.f)

  001c7	0f 57 c0	 xorps	 xmm0, xmm0
  001ca	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _progress$[ebp]
  001ce	76 48		 jbe	 SHORT $LN14@operator

; 141  : 		{
; 142  : 			target.setTextureRect(frame.subrect);

  001d0	8b 4d cc	 mov	 ecx, DWORD PTR _frame$5[ebp]
  001d3	83 c1 04	 add	 ecx, 4
  001d6	8b f4		 mov	 esi, esp
  001d8	51		 push	 ecx
  001d9	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setTextureRect@Sprite@sf@@QAEXABV?$Rect@H@2@@Z
  001e2	3b f4		 cmp	 esi, esp
  001e4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 143  : 			if (frame.applyOrigin)

  001e9	8b 55 cc	 mov	 edx, DWORD PTR _frame$5[ebp]
  001ec	0f b6 42 1c	 movzx	 eax, BYTE PTR [edx+28]
  001f0	85 c0		 test	 eax, eax
  001f2	74 22		 je	 SHORT $LN15@operator

; 144  : 				target.setOrigin(frame.origin);

  001f4	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  001f7	83 c1 04	 add	 ecx, 4
  001fa	89 4d a4	 mov	 DWORD PTR tv167[ebp], ecx
  001fd	8b 55 cc	 mov	 edx, DWORD PTR _frame$5[ebp]
  00200	83 c2 14	 add	 edx, 20			; 00000014H
  00203	8b f4		 mov	 esi, esp
  00205	52		 push	 edx
  00206	8b 4d a4	 mov	 ecx, DWORD PTR tv167[ebp]
  00209	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setOrigin@Transformable@sf@@QAEXABV?$Vector2@M@2@@Z
  0020f	3b f4		 cmp	 esi, esp
  00211	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@operator:

; 145  : 
; 146  : 			break;

  00216	eb 02		 jmp	 SHORT $LN6@operator
$LN14@operator:

; 147  : 		}
; 148  : 	}

  00218	eb 8c		 jmp	 SHORT $LN5@operator
$LN6@operator:
  0021a	e9 e5 fe ff ff	 jmp	 $LN2@operator
$LN3@operator:
  0021f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00226	8d 4d d8	 lea	 ecx, DWORD PTR _auroraDetail_itr136$7[ebp]
  00229	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@XZ
$LN9@operator:

; 149  : }

  0022e	52		 push	 edx
  0022f	8b cd		 mov	 ecx, ebp
  00231	50		 push	 eax
  00232	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN29@operator
  00238	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0023d	58		 pop	 eax
  0023e	5a		 pop	 edx
  0023f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00242	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00249	59		 pop	 ecx
  0024a	5f		 pop	 edi
  0024b	5e		 pop	 esi
  0024c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024f	33 cd		 xor	 ecx, ebp
  00251	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00256	83 c4 5c	 add	 esp, 92			; 0000005cH
  00259	3b ec		 cmp	 ebp, esp
  0025b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00260	8b e5		 mov	 esp, ebp
  00262	5d		 pop	 ebp
  00263	c2 08 00	 ret	 8
  00266	66 90		 npad	 2
$LN29@operator:
  00268	01 00 00 00	 DD	 1
  0026c	00 00 00 00	 DD	 $LN28@operator
$LN28@operator:
  00270	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00274	0c 00 00 00	 DD	 12			; 0000000cH
  00278	00 00 00 00	 DD	 $LN26@operator
$LN26@operator:
  0027c	61		 DB	 97			; 00000061H
  0027d	75		 DB	 117			; 00000075H
  0027e	72		 DB	 114			; 00000072H
  0027f	6f		 DB	 111			; 0000006fH
  00280	72		 DB	 114			; 00000072H
  00281	61		 DB	 97			; 00000061H
  00282	44		 DB	 68			; 00000044H
  00283	65		 DB	 101			; 00000065H
  00284	74		 DB	 116			; 00000074H
  00285	61		 DB	 97			; 00000061H
  00286	69		 DB	 105			; 00000069H
  00287	6c		 DB	 108			; 0000006cH
  00288	5f		 DB	 95			; 0000005fH
  00289	69		 DB	 105			; 00000069H
  0028a	74		 DB	 116			; 00000074H
  0028b	72		 DB	 114			; 00000072H
  0028c	31		 DB	 49			; 00000031H
  0028d	33		 DB	 51			; 00000033H
  0028e	36		 DB	 54			; 00000036H
  0028f	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _auroraDetail_itr136$7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?RVSprite@sf@@@FrameAnimation@thor@@QBEXAAVSprite@sf@@M@Z ENDP ; thor::FrameAnimation::operator()<sf::Sprite>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ PROC	; std::function<void __cdecl(sf::Sprite &,float)>::~function<void __cdecl(sf::Sprite &,float)>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_class<void,sf::Sprite &,float>::~_Func_class<void,sf::Sprite &,float>
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ ENDP	; std::function<void __cdecl(sf::Sprite &,float)>::~function<void __cdecl(sf::Sprite &,float)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@$$QAV01@@Z PROC ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>, COMDAT
; _this$ = ecx

; 1173 :     function(function&& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Func_class<void,sf::Sprite &,float>

; 1174 :         this->_Reset_move(_STD move(_Right));

  00020	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??$move@AAV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@@std@@YA$$QAV?$function@$$A6AXAAVSprite@sf@@M@Z@0@AAV10@@Z ; std::move<std::function<void __cdecl(sf::Sprite &,float)> &>
  00029	83 c4 04	 add	 esp, 4
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Reset_move@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAV12@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Reset_move

; 1175 :     }

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@$$QAV01@@Z ENDP ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z PROC ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>, COMDAT
; _this$ = ecx

; 1133 :     function(const function& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Func_class<void,sf::Sprite &,float>
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1134 :         this->_Reset_copy(_Right);

  00046	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Reset_copy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXABV12@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Reset_copy

; 1135 :     }

  00052	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	83 c4 10	 add	 esp, 16			; 00000010H
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ; std::_Func_class<void,sf::Sprite &,float>::~_Func_class<void,sf::Sprite &,float>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@ABV01@@Z ENDP ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z PROC ; std::_Func_class<void,sf::Sprite &,float>::_Set, COMDAT
; _this$ = ecx

; 1091 :     void _Set(_Ptrt* _Ptr) noexcept { // store pointer to object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1092 :         _Mystorage._Ptrs[_Small_object_num_ptrs - 1] = _Ptr;

  00018	b8 04 00 00 00	 mov	 eax, 4
  0001d	6b c8 09	 imul	 ecx, eax, 9
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1093 :     }

  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ENDP ; std::_Func_class<void,sf::Sprite &,float>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ PROC ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl, COMDAT
; _this$ = ecx

; 1087 :     _Ptrt* _Getimpl() const noexcept { // get pointer to object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1088 :         return _Mystorage._Ptrs[_Small_object_num_ptrs - 1];

  00018	b8 04 00 00 00	 mov	 eax, 4
  0001d	6b c8 09	 imul	 ecx, eax, 9
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]

; 1089 :     }

  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ENDP ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Local@?$_Func_class@XAAVSprite@sf@@M@std@@ABE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Local@?$_Func_class@XAAVSprite@sf@@M@std@@ABE_NXZ PROC ; std::_Func_class<void,sf::Sprite &,float>::_Local, COMDAT
; _this$ = ecx

; 1075 :     bool _Local() const noexcept { // test for locally stored copy of object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1076 :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
  00029	3b 45 fc	 cmp	 eax, DWORD PTR _this$[ebp]
  0002c	75 09		 jne	 SHORT $LN3@Local
  0002e	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00035	eb 07		 jmp	 SHORT $LN4@Local
$LN3@Local:
  00037	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@Local:
  0003e	8a 45 f8	 mov	 al, BYTE PTR tv68[ebp]

; 1077 :     }

  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?_Local@?$_Func_class@XAAVSprite@sf@@M@std@@ABE_NXZ ENDP ; std::_Func_class<void,sf::Sprite &,float>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Tidy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXXZ
_TEXT	SEGMENT
tv78 = -13						; size = 1
tv81 = -12						; size = 4
tv71 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXXZ PROC	; std::_Func_class<void,sf::Sprite &,float>::_Tidy, COMDAT
; _this$ = ecx

; 1044 :     void _Tidy() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1045 :         if (!_Empty()) { // destroy callable object and maybe delete it

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XAAVSprite@sf@@M@std@@IBE_NXZ ; std::_Func_class<void,sf::Sprite &,float>::_Empty
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	75 4d		 jne	 SHORT $LN3@Tidy

; 1046 :             _Getimpl()->_Delete_this(!_Local());

  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
  0003c	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR tv71[ebp]
  00042	8b 11		 mov	 edx, DWORD PTR [ecx]
  00044	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00047	89 45 f4	 mov	 DWORD PTR tv81[ebp], eax
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XAAVSprite@sf@@M@std@@ABE_NXZ ; std::_Func_class<void,sf::Sprite &,float>::_Local
  00052	0f b6 c8	 movzx	 ecx, al
  00055	85 c9		 test	 ecx, ecx
  00057	75 06		 jne	 SHORT $LN4@Tidy
  00059	c6 45 f3 01	 mov	 BYTE PTR tv78[ebp], 1
  0005d	eb 04		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  0005f	c6 45 f3 00	 mov	 BYTE PTR tv78[ebp], 0
$LN5@Tidy:
  00063	8b f4		 mov	 esi, esp
  00065	0f b6 55 f3	 movzx	 edx, BYTE PTR tv78[ebp]
  00069	52		 push	 edx
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR tv71[ebp]
  0006d	ff 55 f4	 call	 DWORD PTR tv81[ebp]
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1047 :             _Set(nullptr);

  00077	6a 00		 push	 0
  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set
$LN3@Tidy:

; 1048 :         }
; 1049 :     }

  00081	5e		 pop	 esi
  00082	83 c4 10	 add	 esp, 16			; 00000010H
  00085	3b ec		 cmp	 ebp, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
?_Tidy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXXZ ENDP	; std::_Func_class<void,sf::Sprite &,float>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Reset_move@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAV12@@Z
_TEXT	SEGMENT
tv83 = -12						; size = 4
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Reset_move@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAV12@@Z PROC ; std::_Func_class<void,sf::Sprite &,float>::_Reset_move, COMDAT
; _this$ = ecx

; 991  :     void _Reset_move(_Func_class&& _Right) noexcept { // move _Right's stored object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00024	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 992  :         if (!_Right._Empty()) {

  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XAAVSprite@sf@@M@std@@IBE_NXZ ; std::_Func_class<void,sf::Sprite &,float>::_Empty
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	75 66		 jne	 SHORT $LN5@Reset_move

; 993  :             if (_Right._Local()) { // move and tidy

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XAAVSprite@sf@@M@std@@ABE_NXZ ; std::_Func_class<void,sf::Sprite &,float>::_Local
  00040	0f b6 c8	 movzx	 ecx, al
  00043	85 c9		 test	 ecx, ecx
  00045	74 3c		 je	 SHORT $LN3@Reset_move

; 994  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00047	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
  0004f	89 45 f8	 mov	 DWORD PTR tv76[ebp], eax
  00052	8b 55 f8	 mov	 edx, DWORD PTR tv76[ebp]
  00055	8b 02		 mov	 eax, DWORD PTR [edx]
  00057	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005a	89 4d f4	 mov	 DWORD PTR tv83[ebp], ecx
  0005d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00060	8b f4		 mov	 esi, esp
  00062	52		 push	 edx
  00063	8b 4d f8	 mov	 ecx, DWORD PTR tv76[ebp]
  00066	ff 55 f4	 call	 DWORD PTR tv83[ebp]
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set

; 995  :                 _Right._Tidy();

  00079	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXXZ ; std::_Func_class<void,sf::Sprite &,float>::_Tidy

; 996  :             } else { // steal from _Right

  00081	eb 1b		 jmp	 SHORT $LN5@Reset_move
$LN3@Reset_move:

; 997  :                 _Set(_Right._Getimpl());

  00083	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
  0008b	50		 push	 eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set

; 998  :                 _Right._Set(nullptr);

  00094	6a 00		 push	 0
  00096	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00099	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set
$LN5@Reset_move:

; 999  :             }
; 1000 :         }
; 1001 :     }

  0009e	5e		 pop	 esi
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 04 00	 ret	 4
?_Reset_move@?$_Func_class@XAAVSprite@sf@@M@std@@IAEX$$QAV12@@Z ENDP ; std::_Func_class<void,sf::Sprite &,float>::_Reset_move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Reset_copy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXABV12@@Z
_TEXT	SEGMENT
tv79 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Reset_copy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXABV12@@Z PROC ; std::_Func_class<void,sf::Sprite &,float>::_Reset_copy, COMDAT
; _this$ = ecx

; 985  :     void _Reset_copy(const _Func_class& _Right) { // copy _Right's stored object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00024	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 986  :         if (!_Right._Empty()) {

  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XAAVSprite@sf@@M@std@@IBE_NXZ ; std::_Func_class<void,sf::Sprite &,float>::_Empty
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	75 31		 jne	 SHORT $LN1@Reset_copy

; 987  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
  00040	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  00043	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  00046	8b 11		 mov	 edx, DWORD PTR [ecx]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	89 45 f4	 mov	 DWORD PTR tv79[ebp], eax
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b f4		 mov	 esi, esp
  00052	51		 push	 ecx
  00053	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  00056	ff 55 f4	 call	 DWORD PTR tv79[ebp]
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	50		 push	 eax
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set
$LN1@Reset_copy:

; 988  :         }
; 989  :     }

  00069	5e		 pop	 esi
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?_Reset_copy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXABV12@@Z ENDP ; std::_Func_class<void,sf::Sprite &,float>::_Reset_copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ?_Empty@?$_Func_class@XAAVSprite@sf@@M@std@@IBE_NXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?_Empty@?$_Func_class@XAAVSprite@sf@@M@std@@IBE_NXZ PROC ; std::_Func_class<void,sf::Sprite &,float>::_Empty, COMDAT
; _this$ = ecx

; 981  :     bool _Empty() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 982  :         return !_Getimpl();

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XAAVSprite@sf@@M@std@@ABEPAV?$_Func_base@XAAVSprite@sf@@M@2@XZ ; std::_Func_class<void,sf::Sprite &,float>::_Getimpl
  00029	85 c0		 test	 eax, eax
  0002b	75 09		 jne	 SHORT $LN3@Empty
  0002d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN4@Empty:
  0003d	8a 45 f8	 mov	 al, BYTE PTR tv67[ebp]

; 983  :     }

  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?_Empty@?$_Func_class@XAAVSprite@sf@@M@std@@IBE_NXZ ENDP ; std::_Func_class<void,sf::Sprite &,float>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??1?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ PROC	; std::_Func_class<void,sf::Sprite &,float>::~_Func_class<void,sf::Sprite &,float>, COMDAT
; _this$ = ecx

; 971  :     ~_Func_class() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 972  :         _Tidy();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XAAVSprite@sf@@M@std@@IAEXXZ ; std::_Func_class<void,sf::Sprite &,float>::_Tidy

; 973  :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??1?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ENDP	; std::_Func_class<void,sf::Sprite &,float>::~_Func_class<void,sf::Sprite &,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional
;	COMDAT ??0?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ PROC	; std::_Func_class<void,sf::Sprite &,float>::_Func_class<void,sf::Sprite &,float>, COMDAT
; _this$ = ecx

; 959  :     _Func_class() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __BFE0F84B_functional
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 960  :         _Set(nullptr);

  00018	6a 00		 push	 0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XAAVSprite@sf@@M@std@@AAEXPAV?$_Func_base@XAAVSprite@sf@@M@2@@Z ; std::_Func_class<void,sf::Sprite &,float>::_Set

; 961  :     }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 c4 04	 add	 esp, 4
  00028	3b ec		 cmp	 ebp, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??0?$_Func_class@XAAVSprite@sf@@M@std@@QAE@XZ ENDP	; std::_Func_class<void,sf::Sprite &,float>::_Func_class<void,sf::Sprite &,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEPAXI@Z PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 20		 push	 32			; 00000020H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEPAXI@Z ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__autoclassinit2@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXI@Z PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00011	50		 push	 eax
  00012	6a 00		 push	 0
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 _memset
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?__autoclassinit2@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXI@Z ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR ___param1$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR ___param0$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEXI@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00011	50		 push	 eax
  00012	6a 00		 push	 0
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 _memset
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEXI@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator->, COMDAT
; _this$ = ecx

; 282  :     _NODISCARD pointer operator->() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 283  :         return pointer_traits<pointer>::pointer_to(**this);

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@2@AAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > *>::pointer_to
  00026	83 c4 04	 add	 esp, 4

; 284  :     }

  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*, COMDAT
; _this$ = ecx

; 278  :     _NODISCARD reference operator*() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 279  :         return const_cast<reference>(_Mybase::operator*());

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*

; 280  :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 0c	 mov	 eax, DWORD PTR ___param1$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR ___param0$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv136 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator==, COMDAT
; _this$ = ecx

; 231  :     _NODISCARD bool operator==(const _Tree_const_iterator& _Right) const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
$LN4@operator:

; 232  : #if _ITERATOR_DEBUG_LEVEL == 2
; 233  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "map/set iterators incompatible");

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002a	8b f0		 mov	 esi, eax
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00034	3b f0		 cmp	 esi, eax
  00036	75 02		 jne	 SHORT $LN7@operator
  00038	eb 5c		 jmp	 SHORT $LN2@operator
$LN7@operator:
  0003a	8b f4		 mov	 esi, esp
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00046	6a 00		 push	 0
  00048	68 e9 00 00 00	 push	 233			; 000000e9H
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0GG@BJFDHGEO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00052	6a 02		 push	 2
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	83 f8 01	 cmp	 eax, 1
  00067	75 01		 jne	 SHORT $LN11@operator
  00069	cc		 int	 3
$LN11@operator:
  0006a	8b f4		 mov	 esi, esp
  0006c	6a 00		 push	 0
  0006e	68 e9 00 00 00	 push	 233			; 000000e9H
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_1MM@JHPNFGGF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_1CGA@LHBKKDGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00088	83 c4 14	 add	 esp, 20			; 00000014H
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	33 c9		 xor	 ecx, ecx
  00094	75 a4		 jne	 SHORT $LN7@operator
$LN2@operator:
  00096	33 d2		 xor	 edx, edx
  00098	75 88		 jne	 SHORT $LN4@operator

; 234  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 235  : 
; 236  :         return this->_Ptr == _Right._Ptr;

  0009a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  000a0	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000a3	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  000a6	75 09		 jne	 SHORT $LN12@operator
  000a8	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv136[ebp], 1
  000af	eb 07		 jmp	 SHORT $LN13@operator
$LN12@operator:
  000b1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN13@operator:
  000b8	8a 45 f8	 mov	 al, BYTE PTR tv136[ebp]

; 237  :     }

  000bb	5e		 pop	 esi
  000bc	83 c4 08	 add	 esp, 8
  000bf	3b ec		 cmp	 ebp, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*, COMDAT
; _this$ = ecx

; 182  :     _NODISCARD reference operator*() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 183  : #if _ITERATOR_DEBUG_LEVEL == 2
; 184  :         const auto _Mycont = static_cast<const _Mytree*>(this->_Getcont());

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002a	89 45 f8	 mov	 DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 185  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized map/set iterator");

  0002d	83 7d f8 00	 cmp	 DWORD PTR __Mycont$[ebp], 0
  00031	74 02		 je	 SHORT $LN7@operator
  00033	eb 5c		 jmp	 SHORT $LN2@operator
$LN7@operator:
  00035	8b f4		 mov	 esi, esp
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00041	6a 00		 push	 0
  00043	68 b9 00 00 00	 push	 185			; 000000b9H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0GG@BJFDHGEO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0004d	6a 02		 push	 2
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00055	83 c4 18	 add	 esp, 24			; 00000018H
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 01		 jne	 SHORT $LN19@operator
  00064	cc		 int	 3
$LN19@operator:
  00065	8b f4		 mov	 esi, esp
  00067	6a 00		 push	 0
  00069	68 b9 00 00 00	 push	 185			; 000000b9H
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_1MM@JHPNFGGF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_1CFO@DPFJDIHM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00083	83 c4 14	 add	 esp, 20			; 00000014H
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	33 c9		 xor	 ecx, ecx
  0008f	75 a4		 jne	 SHORT $LN7@operator
$LN2@operator:
  00091	33 d2		 xor	 edx, edx
  00093	75 98		 jne	 SHORT $LN4@operator
$LN10@operator:

; 186  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end map/set iterator");

  00095	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00098	8b 4d f8	 mov	 ecx, DWORD PTR __Mycont$[ebp]
  0009b	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0009e	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  000a1	74 02		 je	 SHORT $LN13@operator
  000a3	eb 5c		 jmp	 SHORT $LN8@operator
$LN13@operator:
  000a5	8b f4		 mov	 esi, esp
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000b1	6a 00		 push	 0
  000b3	68 ba 00 00 00	 push	 186			; 000000baH
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0GG@BJFDHGEO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000bd	6a 02		 push	 2
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000c5	83 c4 18	 add	 esp, 24			; 00000018H
  000c8	3b f4		 cmp	 esi, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	83 f8 01	 cmp	 eax, 1
  000d2	75 01		 jne	 SHORT $LN20@operator
  000d4	cc		 int	 3
$LN20@operator:
  000d5	8b f4		 mov	 esi, esp
  000d7	6a 00		 push	 0
  000d9	68 ba 00 00 00	 push	 186			; 000000baH
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_1MM@JHPNFGGF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_1CFO@DPFJDIHM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs@
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000f3	83 c4 14	 add	 esp, 20			; 00000014H
  000f6	3b f4		 cmp	 esi, esp
  000f8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fd	33 c9		 xor	 ecx, ecx
  000ff	75 a4		 jne	 SHORT $LN13@operator
$LN8@operator:
  00101	33 d2		 xor	 edx, edx
  00103	75 90		 jne	 SHORT $LN10@operator

; 187  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 188  : 
; 189  :         return this->_Ptr->_Myval;

  00105	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00108	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0010b	83 c0 10	 add	 eax, 16			; 00000010H

; 190  :     }

  0010e	5e		 pop	 esi
  0010f	83 c4 08	 add	 esp, 8
  00112	3b ec		 cmp	 ebp, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00026	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 40   :         this->_Adopt(_Plist);

  00029	8b 55 0c	 mov	 edx, DWORD PTR __Plist$[ebp]
  0002c	52		 push	 edx
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 41   :     }

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 37   :     _Tree_unchecked_const_iterator() noexcept : _Ptr() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_animation$ = 8						; size = 12
_loop$ = 20						; size = 1
?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@Z PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation, COMDAT
; _this$ = ecx

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 138  : 	mPlayingAnimation = animation;

  00018	8d 45 08	 lea	 eax, DWORD PTR _animation$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00022	e8 00 00 00 00	 call	 ??4?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z

; 139  : 	mProgress = 0.f;

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	0f 57 c0	 xorps	 xmm0, xmm0
  0002d	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0

; 140  : 	mLoop = loop;

  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	8a 45 14	 mov	 al, BYTE PTR _loop$[ebp]
  00038	88 42 1c	 mov	 BYTE PTR [edx+28], al

; 141  : }

  0003b	8d 4d 08	 lea	 ecx, DWORD PTR _animation$[ebp]
  0003e	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 10 00	 ret	 16			; 00000010H
?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@Z ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\map
;	COMDAT ??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::operator=, COMDAT
; _this$ = ecx

; 139  :     map& operator=(const map& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __84DB8D4B_map
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 140  :         _Mybase::operator=(_Right);

  00018	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::operator=

; 141  :         return *this;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 142  :     }

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >, COMDAT
; _this$ = ecx

; 107  :     map() : _Mybase(key_compare()) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __84DB8D4B_map
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 c4 08	 add	 esp, 8
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 1401 :     constexpr const _Ty1& _Get_first() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1402 :         return *this;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1403 :     }

  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1398 :         return *this;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1399 :     }

  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1401 :     constexpr const _Ty1& _Get_first() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1402 :         return *this;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1403 :     }

  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1398 :         return *this;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1399 :     }

  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnextptr$1 = -28					; size = 4
__Pnext$ = -24						; size = 4
__Lock$ = -16						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__Ptr$ = 8						; size = 4
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 719  :     void _Orphan_ptr(const _Nodeptr _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00026	33 c5		 xor	 eax, ebp
  00028	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002b	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00033	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 720  : #if _ITERATOR_DEBUG_LEVEL == 2
; 721  :         _Lockit _Lock(_LOCK_DEBUG);

  00038	8b f4		 mov	 esi, esp
  0003a	6a 03		 push	 3
  0003c	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 722  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	83 c1 04	 add	 ecx, 4
  00054	89 4d e8	 mov	 DWORD PTR __Pnext$[ebp], ecx
$LN2@Orphan_ptr:

; 723  :         while (*_Pnext) {

  00057	8b 55 e8	 mov	 edx, DWORD PTR __Pnext$[ebp]
  0005a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0005d	74 4b		 je	 SHORT $LN3@Orphan_ptr

; 724  :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  0005f	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00067	89 55 e4	 mov	 DWORD PTR __Pnextptr$1[ebp], edx

; 725  :             if (_Pnextptr == _Myhead || (_Ptr != nullptr && _Pnextptr != _Ptr)) {

  0006a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 4d e4	 mov	 ecx, DWORD PTR __Pnextptr$1[ebp]
  00070	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00073	74 0e		 je	 SHORT $LN6@Orphan_ptr
  00075	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00079	74 15		 je	 SHORT $LN4@Orphan_ptr
  0007b	8b 55 e4	 mov	 edx, DWORD PTR __Pnextptr$1[ebp]
  0007e	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00081	74 0d		 je	 SHORT $LN4@Orphan_ptr
$LN6@Orphan_ptr:

; 726  :                 _Pnext = &(*_Pnext)->_Mynextiter;

  00083	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	83 c1 04	 add	 ecx, 4
  0008b	89 4d e8	 mov	 DWORD PTR __Pnext$[ebp], ecx

; 727  :             } else { // orphan the iterator

  0008e	eb 18		 jmp	 SHORT $LN5@Orphan_ptr
$LN4@Orphan_ptr:

; 728  :                 (*_Pnext)->_Myproxy = nullptr;

  00090	8b 55 e8	 mov	 edx, DWORD PTR __Pnext$[ebp]
  00093	8b 02		 mov	 eax, DWORD PTR [edx]
  00095	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 729  :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  0009b	8b 4d e8	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0009e	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a0	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a3	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000a6	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@Orphan_ptr:

; 730  :             }
; 731  :         }

  000a8	eb ad		 jmp	 SHORT $LN2@Orphan_ptr
$LN3@Orphan_ptr:

; 732  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 733  :         (void) _Ptr;
; 734  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 735  :     }

  000aa	8b f4		 mov	 esi, esp
  000ac	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	52		 push	 edx
  000bd	8b cd		 mov	 ecx, ebp
  000bf	50		 push	 eax
  000c0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Orphan_ptr
  000c6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000cb	58		 pop	 eax
  000cc	5a		 pop	 edx
  000cd	5e		 pop	 esi
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d1	33 cd		 xor	 ecx, ebp
  000d3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d8	83 c4 1c	 add	 esp, 28			; 0000001cH
  000db	3b ec		 cmp	 ebp, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 04 00	 ret	 4
$LN10@Orphan_ptr:
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN9@Orphan_ptr
$LN9@Orphan_ptr:
  000f0	f0 ff ff ff	 DD	 -16			; fffffff0H
  000f4	04 00 00 00	 DD	 4
  000f8	00 00 00 00	 DD	 $LN8@Orphan_ptr
$LN8@Orphan_ptr:
  000fc	5f		 DB	 95			; 0000005fH
  000fd	4c		 DB	 76			; 0000004cH
  000fe	6f		 DB	 111			; 0000006fH
  000ff	63		 DB	 99			; 00000063H
  00100	6b		 DB	 107			; 0000006bH
  00101	00		 DB	 0
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Orphan_ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Parent_sibling$1 = -20				; size = 4
__Parent_sibling$2 = -16				; size = 4
__Pnode$3 = -12						; size = 4
__Head$ = -8						; size = 4
_this$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Insert_node, COMDAT
; _this$ = ecx

; 650  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00022	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 651  :         ++_Mysize;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002d	83 c1 01	 add	 ecx, 1
  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 652  :         const auto _Head  = _Myhead;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003c	89 4d f8	 mov	 DWORD PTR __Head$[ebp], ecx

; 653  :         _Newnode->_Parent = _Loc._Parent;

  0003f	8b 55 10	 mov	 edx, DWORD PTR __Newnode$[ebp]
  00042	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 654  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  00048	8b 4d 08	 mov	 ecx, DWORD PTR __Loc$[ebp]
  0004b	3b 4d f8	 cmp	 ecx, DWORD PTR __Head$[ebp]
  0004e	75 29		 jne	 SHORT $LN5@Insert_nod

; 655  :             _Head->_Left     = _Newnode;

  00050	8b 55 f8	 mov	 edx, DWORD PTR __Head$[ebp]
  00053	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax

; 656  :             _Head->_Parent   = _Newnode;

  00058	8b 4d f8	 mov	 ecx, DWORD PTR __Head$[ebp]
  0005b	8b 55 10	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0005e	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 657  :             _Head->_Right    = _Newnode;

  00061	8b 45 f8	 mov	 eax, DWORD PTR __Head$[ebp]
  00064	8b 4d 10	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  00067	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 658  :             _Newnode->_Color = _Black; // the root is black

  0006a	8b 55 10	 mov	 edx, DWORD PTR __Newnode$[ebp]
  0006d	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 659  :             return _Newnode;

  00071	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00074	e9 a7 01 00 00	 jmp	 $LN18@Insert_nod
$LN5@Insert_nod:

; 660  :         }
; 661  : 
; 662  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 663  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00079	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  0007d	75 1f		 jne	 SHORT $LN6@Insert_nod

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 665  :             _Loc._Parent->_Right = _Newnode;

  0007f	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  00082	8b 4d 10	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  00085	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 666  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  00088	8b 55 f8	 mov	 edx, DWORD PTR __Head$[ebp]
  0008b	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  0008e	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00091	75 09		 jne	 SHORT $LN8@Insert_nod

; 667  :                 _Head->_Right = _Newnode;

  00093	8b 4d f8	 mov	 ecx, DWORD PTR __Head$[ebp]
  00096	8b 55 10	 mov	 edx, DWORD PTR __Newnode$[ebp]
  00099	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$LN8@Insert_nod:

; 668  :             }
; 669  :         } else { // add to left of _Loc._Parent

  0009c	eb 1a		 jmp	 SHORT $LN7@Insert_nod
$LN6@Insert_nod:

; 670  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 671  :             _Loc._Parent->_Left = _Newnode;

  0009e	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  000a1	8b 4d 10	 mov	 ecx, DWORD PTR __Newnode$[ebp]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx

; 672  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  000a6	8b 55 f8	 mov	 edx, DWORD PTR __Head$[ebp]
  000a9	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  000ac	3b 02		 cmp	 eax, DWORD PTR [edx]
  000ae	75 08		 jne	 SHORT $LN7@Insert_nod

; 673  :                 _Head->_Left = _Newnode;

  000b0	8b 4d f8	 mov	 ecx, DWORD PTR __Head$[ebp]
  000b3	8b 55 10	 mov	 edx, DWORD PTR __Newnode$[ebp]
  000b6	89 11		 mov	 DWORD PTR [ecx], edx
$LN7@Insert_nod:

; 674  :             }
; 675  :         }
; 676  : 
; 677  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  000b8	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  000bb	89 45 f4	 mov	 DWORD PTR __Pnode$3[ebp], eax
$LN4@Insert_nod:
  000be	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$3[ebp]
  000c1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c4	0f be 42 0c	 movsx	 eax, BYTE PTR [edx+12]
  000c8	85 c0		 test	 eax, eax
  000ca	0f 85 43 01 00
	00		 jne	 $LN3@Insert_nod

; 678  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$3[ebp]
  000d3	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000d9	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$3[ebp]
  000dc	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000df	3b 10		 cmp	 edx, DWORD PTR [eax]
  000e1	0f 85 97 00 00
	00		 jne	 $LN10@Insert_nod

; 679  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  000e7	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$3[ebp]
  000ea	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ed	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f0	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f3	89 45 f0	 mov	 DWORD PTR __Parent_sibling$2[ebp], eax

; 680  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  000f6	8b 4d f0	 mov	 ecx, DWORD PTR __Parent_sibling$2[ebp]
  000f9	0f be 51 0c	 movsx	 edx, BYTE PTR [ecx+12]
  000fd	85 d2		 test	 edx, edx
  000ff	75 2c		 jne	 SHORT $LN12@Insert_nod

; 681  :                     _Pnode->_Parent->_Color          = _Black;

  00101	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$3[ebp]
  00104	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00107	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 682  :                     _Parent_sibling->_Color          = _Black;

  0010b	8b 55 f0	 mov	 edx, DWORD PTR __Parent_sibling$2[ebp]
  0010e	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 683  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00112	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$3[ebp]
  00115	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00118	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0011b	c6 42 0c 00	 mov	 BYTE PTR [edx+12], 0

; 684  :                     _Pnode                           = _Pnode->_Parent->_Parent;

  0011f	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$3[ebp]
  00122	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00125	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00128	89 55 f4	 mov	 DWORD PTR __Pnode$3[ebp], edx

; 685  :                 } else { // parent's sibling has red and black children

  0012b	eb 4c		 jmp	 SHORT $LN13@Insert_nod
$LN12@Insert_nod:

; 686  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  0012d	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$3[ebp]
  00130	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00133	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  00136	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00139	75 15		 jne	 SHORT $LN14@Insert_nod

; 687  :                         _Pnode = _Pnode->_Parent;

  0013b	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$3[ebp]
  0013e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00141	89 4d f4	 mov	 DWORD PTR __Pnode$3[ebp], ecx

; 688  :                         _Lrotate(_Pnode);

  00144	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  00147	52		 push	 edx
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Lrotate
$LN14@Insert_nod:

; 689  :                     }
; 690  : 
; 691  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00150	8b 45 f4	 mov	 eax, DWORD PTR __Pnode$3[ebp]
  00153	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00156	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 692  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  0015a	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  0015d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00160	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00163	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 693  :                     _Rrotate(_Pnode->_Parent->_Parent);

  00167	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  0016a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0016d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00170	51		 push	 ecx
  00171	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Rrotate
$LN13@Insert_nod:

; 694  :                 }
; 695  :             } else { // fixup red-red in right subtree

  00179	e9 90 00 00 00	 jmp	 $LN11@Insert_nod
$LN10@Insert_nod:

; 696  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;

  0017e	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  00181	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00184	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00187	8b 11		 mov	 edx, DWORD PTR [ecx]
  00189	89 55 ec	 mov	 DWORD PTR __Parent_sibling$1[ebp], edx

; 697  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  0018c	8b 45 ec	 mov	 eax, DWORD PTR __Parent_sibling$1[ebp]
  0018f	0f be 48 0c	 movsx	 ecx, BYTE PTR [eax+12]
  00193	85 c9		 test	 ecx, ecx
  00195	75 2c		 jne	 SHORT $LN15@Insert_nod

; 698  :                     _Pnode->_Parent->_Color          = _Black;

  00197	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  0019a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0019d	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 699  :                     _Parent_sibling->_Color          = _Black;

  001a1	8b 4d ec	 mov	 ecx, DWORD PTR __Parent_sibling$1[ebp]
  001a4	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 700  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  001a8	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  001ab	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001ae	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001b1	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 701  :                     _Pnode                           = _Pnode->_Parent->_Parent;

  001b5	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  001b8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001be	89 4d f4	 mov	 DWORD PTR __Pnode$3[ebp], ecx

; 702  :                 } else { // parent's sibling has red and black children

  001c1	eb 4b		 jmp	 SHORT $LN11@Insert_nod
$LN15@Insert_nod:

; 703  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  001c3	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  001c6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001c9	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$3[ebp]
  001cc	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001ce	75 15		 jne	 SHORT $LN17@Insert_nod

; 704  :                         _Pnode = _Pnode->_Parent;

  001d0	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  001d3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001d6	89 45 f4	 mov	 DWORD PTR __Pnode$3[ebp], eax

; 705  :                         _Rrotate(_Pnode);

  001d9	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$3[ebp]
  001dc	51		 push	 ecx
  001dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e0	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Rrotate
$LN17@Insert_nod:

; 706  :                     }
; 707  : 
; 708  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  001e5	8b 55 f4	 mov	 edx, DWORD PTR __Pnode$3[ebp]
  001e8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001eb	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 709  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  001ef	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$3[ebp]
  001f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001f5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001f8	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 710  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001fc	8b 4d f4	 mov	 ecx, DWORD PTR __Pnode$3[ebp]
  001ff	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00202	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00205	50		 push	 eax
  00206	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00209	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Lrotate
$LN11@Insert_nod:

; 711  :                 }
; 712  :             }
; 713  :         }

  0020e	e9 ab fe ff ff	 jmp	 $LN4@Insert_nod
$LN3@Insert_nod:

; 714  : 
; 715  :         _Head->_Parent->_Color = _Black; // root is always black

  00213	8b 4d f8	 mov	 ecx, DWORD PTR __Head$[ebp]
  00216	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00219	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 716  :         return _Newnode;

  0021d	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
$LN18@Insert_nod:

; 717  :     }

  00220	83 c4 14	 add	 esp, 20			; 00000014H
  00223	3b ec		 cmp	 ebp, esp
  00225	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022a	8b e5		 mov	 esp, ebp
  0022c	5d		 pop	 ebp
  0022d	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Rrotate, COMDAT
; _this$ = ecx

; 486  :     void _Rrotate(_Nodeptr _Wherenode) noexcept { // promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 487  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00021	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 488  :         _Wherenode->_Left = _Pnode->_Right;

  00029	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0002f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00032	89 0a		 mov	 DWORD PTR [edx], ecx

; 489  : 
; 490  :         if (!_Pnode->_Right->_Isnil) {

  00034	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00037	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003a	0f be 48 0d	 movsx	 ecx, BYTE PTR [eax+13]
  0003e	85 c9		 test	 ecx, ecx
  00040	75 0c		 jne	 SHORT $LN2@Rrotate

; 491  :             _Pnode->_Right->_Parent = _Wherenode;

  00042	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00045	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0004b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN2@Rrotate:

; 492  :         }
; 493  : 
; 494  :         _Pnode->_Parent = _Wherenode->_Parent;

  0004e	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00051	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00054	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00057	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 495  : 
; 496  :         if (_Wherenode == _Myhead->_Parent) {

  0005a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00060	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00063	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00066	75 0e		 jne	 SHORT $LN3@Rrotate

; 497  :             _Myhead->_Parent = _Pnode;

  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006e	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00071	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00074	eb 27		 jmp	 SHORT $LN4@Rrotate
$LN3@Rrotate:

; 498  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00076	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00079	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0007f	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00082	75 0e		 jne	 SHORT $LN5@Rrotate

; 499  :             _Wherenode->_Parent->_Right = _Pnode;

  00084	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00087	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0008d	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 500  :         } else {

  00090	eb 0b		 jmp	 SHORT $LN4@Rrotate
$LN5@Rrotate:

; 501  :             _Wherenode->_Parent->_Left = _Pnode;

  00092	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00095	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00098	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0009b	89 08		 mov	 DWORD PTR [eax], ecx
$LN4@Rrotate:

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  0009d	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000a0	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000a3	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 505  :         _Wherenode->_Parent = _Pnode;

  000a6	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000a9	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000ac	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 506  :     }

  000af	83 c4 08	 add	 esp, 8
  000b2	3b ec		 cmp	 ebp, esp
  000b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 04 00	 ret	 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Lrotate, COMDAT
; _this$ = ecx

; 464  :     void _Lrotate(_Nodeptr _Wherenode) noexcept { // promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 465  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00021	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 466  :         _Wherenode->_Right = _Pnode->_Left;

  0002a	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  0002d	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 467  : 
; 468  :         if (!_Pnode->_Left->_Isnil) {

  00035	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00038	8b 02		 mov	 eax, DWORD PTR [edx]
  0003a	0f be 48 0d	 movsx	 ecx, BYTE PTR [eax+13]
  0003e	85 c9		 test	 ecx, ecx
  00040	75 0b		 jne	 SHORT $LN2@Lrotate

; 469  :             _Pnode->_Left->_Parent = _Wherenode;

  00042	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00045	8b 02		 mov	 eax, DWORD PTR [edx]
  00047	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0004a	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN2@Lrotate:

; 470  :         }
; 471  : 
; 472  :         _Pnode->_Parent = _Wherenode->_Parent;

  0004d	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00050	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  00053	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00056	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 473  : 
; 474  :         if (_Wherenode == _Myhead->_Parent) {

  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00062	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00065	75 0e		 jne	 SHORT $LN3@Lrotate

; 475  :             _Myhead->_Parent = _Pnode;

  00067	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00070	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00073	eb 26		 jmp	 SHORT $LN4@Lrotate
$LN3@Lrotate:

; 476  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  00075	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00078	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0007b	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0007e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00080	75 0d		 jne	 SHORT $LN5@Lrotate

; 477  :             _Wherenode->_Parent->_Left = _Pnode;

  00082	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00085	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00088	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0008b	89 08		 mov	 DWORD PTR [eax], ecx

; 478  :         } else {

  0008d	eb 0c		 jmp	 SHORT $LN4@Lrotate
$LN5@Lrotate:

; 479  :             _Wherenode->_Parent->_Right = _Pnode;

  0008f	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00092	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00095	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00098	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN4@Lrotate:

; 480  :         }
; 481  : 
; 482  :         _Pnode->_Left       = _Wherenode;

  0009b	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0009e	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  000a1	89 02		 mov	 DWORD PTR [edx], eax

; 483  :         _Wherenode->_Parent = _Pnode;

  000a3	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000a6	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000a9	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 484  :     }

  000ac	83 c4 08	 add	 esp, 8
  000af	3b ec		 cmp	 ebp, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Min, COMDAT

; 456  :     static _Nodeptr _Min(_Nodeptr _Pnode) noexcept { // return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
$LN2@Min:

; 457  :         while (!_Pnode->_Left->_Isnil) {

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00010	8b 08		 mov	 ecx, DWORD PTR [eax]
  00012	0f be 51 0d	 movsx	 edx, BYTE PTR [ecx+13]
  00016	85 d2		 test	 edx, edx
  00018	75 0a		 jne	 SHORT $LN3@Min

; 458  :             _Pnode = _Pnode->_Left;

  0001a	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 459  :         }

  00022	eb e9		 jmp	 SHORT $LN2@Min
$LN3@Min:

; 460  : 
; 461  :         return _Pnode;

  00024	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 462  :     }

  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Max, COMDAT

; 448  :     static _Nodeptr _Max(_Nodeptr _Pnode) noexcept { // return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
$LN2@Max:

; 449  :         while (!_Pnode->_Right->_Isnil) {

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00010	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00013	0f be 51 0d	 movsx	 edx, BYTE PTR [ecx+13]
  00017	85 d2		 test	 edx, edx
  00019	75 0b		 jne	 SHORT $LN3@Max

; 450  :             _Pnode = _Pnode->_Right;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0001e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00021	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 451  :         }

  00024	eb e7		 jmp	 SHORT $LN2@Max
$LN3@Max:

; 452  : 
; 453  :         return _Pnode;

  00026	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 454  :     }

  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >, COMDAT
; _this$ = ecx

; 441  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1954 :     const _Scary_val* _Get_scary() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1955 :         return _STD addressof(_Mypair._Myval2._Myval2);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > const >
  00021	83 c4 04	 add	 esp, 4

; 1956 :     }

  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1950 :     _Scary_val* _Get_scary() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1951 :         return _STD addressof(_Mypair._Myval2._Myval2);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >
  00021	83 c4 04	 add	 esp, 4

; 1952 :     }

  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1946 :     const _Alnode& _Getal() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1947 :         return _Mypair._Myval2._Get_first();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first

; 1948 :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1942 :     _Alnode& _Getal() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1943 :         return _Mypair._Myval2._Get_first();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>::_Get_first

; 1944 :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 1938 :     const key_compare& _Getcomp() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1939 :         return _Mypair._Get_first();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first

; 1940 :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 1934 :     key_compare& _Getcomp() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1935 :         return _Mypair._Get_first();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Get_first

; 1936 :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Proxy$ = -52						; size = 8
_$S20$ = -33						; size = 1
__Alproxy$ = -28					; size = 4
__Scary$ = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1921 :     void _Alloc_sentinel_and_proxy() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  00019	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00042	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1922 :         const auto _Scary = _Get_scary();

  00047	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  0004f	89 45 e8	 mov	 DWORD PTR __Scary$[ebp], eax

; 1923 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  0005a	50		 push	 eax
  0005b	8d 4d df	 lea	 ecx, DWORD PTR _$S20$[ebp]
  0005e	e8 00 00 00 00	 call	 ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >
  00063	8d 45 df	 lea	 eax, DWORD PTR _$S20$[ebp]
  00066	89 45 e4	 mov	 DWORD PTR __Alproxy$[ebp], eax

; 1924 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);

  00069	8b 4d e8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  0006c	51		 push	 ecx
  0006d	8b 55 e4	 mov	 edx, DWORD PTR __Alproxy$[ebp]
  00070	52		 push	 edx
  00071	8d 4d cc	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  00074	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00079	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1925 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00080	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  0008e	83 c4 04	 add	 esp, 4
  00091	8b 4d e8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  00094	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1926 :         _Proxy._Release();

  00097	8d 4d cc	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  0009a	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1927 :     }

  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8d 4d cc	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  000a9	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@Alloc_sent
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ce	33 cd		 xor	 ecx, ebp
  000d0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d5	83 c4 38	 add	 esp, 56			; 00000038H
  000d8	3b ec		 cmp	 ebp, esp
  000da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c3		 ret	 0
  000e3	90		 npad	 1
$LN8@Alloc_sent:
  000e4	02 00 00 00	 DD	 2
  000e8	00 00 00 00	 DD	 $LN7@Alloc_sent
$LN7@Alloc_sent:
  000ec	df ff ff ff	 DD	 -33			; ffffffdfH
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN4@Alloc_sent
  000f8	cc ff ff ff	 DD	 -52			; ffffffccH
  000fc	08 00 00 00	 DD	 8
  00100	00 00 00 00	 DD	 $LN5@Alloc_sent
$LN5@Alloc_sent:
  00104	5f		 DB	 95			; 0000005fH
  00105	50		 DB	 80			; 00000050H
  00106	72		 DB	 114			; 00000072H
  00107	6f		 DB	 111			; 0000006fH
  00108	78		 DB	 120			; 00000078H
  00109	79		 DB	 121			; 00000079H
  0010a	00		 DB	 0
$LN4@Alloc_sent:
  0010b	24		 DB	 36			; 00000024H
  0010c	53		 DB	 83			; 00000053H
  0010d	32		 DB	 50			; 00000032H
  0010e	30		 DB	 48			; 00000030H
  0010f	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Check_grow_by_1, COMDAT
; _this$ = ecx

; 1622 :     void _Check_grow_by_1() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00014	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1623 :         if (max_size() == _Get_scary()->_Mysize) {

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::max_size
  00021	8b f0		 mov	 esi, eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  0002b	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0002e	75 05		 jne	 SHORT $LN3@Check_grow

; 1624 :             _Throw_tree_length_error();

  00030	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN3@Check_grow:

; 1625 :         }
; 1626 :     }

  00035	5e		 pop	 esi
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Check_grow_by_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv74 = -16						; size = 4
tv76 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::find, COMDAT
; _this$ = ecx

; 1370 :     _NODISCARD iterator find(const key_type& _Keyval) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  00021	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00026	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1371 :         return iterator(_Find(_Keyval), _Get_scary());

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00033	89 45 f4	 mov	 DWORD PTR tv76[ebp], eax
  00036	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00042	89 45 f0	 mov	 DWORD PTR tv74[ebp], eax
  00045	8b 4d f4	 mov	 ecx, DWORD PTR tv76[ebp]
  00048	51		 push	 ecx
  00049	8b 55 f0	 mov	 edx, DWORD PTR tv74[ebp]
  0004c	52		 push	 edx
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
  00055	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00058	83 c8 01	 or	 eax, 1
  0005b	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0005e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1372 :     }

  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv76 = -20						; size = 4
tv78 = -16						; size = 4
__Head$ = -12						; size = 4
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::clear, COMDAT
; _this$ = ecx

; 1347 :     void clear() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00022	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1348 :         const auto _Scary = _Get_scary();

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  0002f	89 45 f8	 mov	 DWORD PTR __Scary$[ebp], eax

; 1349 :         _Scary->_Orphan_ptr(nullptr);

  00032	6a 00		 push	 0
  00034	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Orphan_ptr

; 1350 :         auto _Head = _Scary->_Myhead;

  0003c	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	89 4d f4	 mov	 DWORD PTR __Head$[ebp], ecx

; 1351 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00045	8b 55 f4	 mov	 edx, DWORD PTR __Head$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  00056	89 45 ec	 mov	 DWORD PTR tv76[ebp], eax
  00059	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 ec	 mov	 edx, DWORD PTR tv76[ebp]
  00060	52		 push	 edx
  00061	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  00064	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >

; 1352 :         _Head->_Parent  = _Head;

  00069	8b 45 f4	 mov	 eax, DWORD PTR __Head$[ebp]
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __Head$[ebp]
  0006f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1353 :         _Head->_Left    = _Head;

  00072	8b 55 f4	 mov	 edx, DWORD PTR __Head$[ebp]
  00075	8b 45 f4	 mov	 eax, DWORD PTR __Head$[ebp]
  00078	89 02		 mov	 DWORD PTR [edx], eax

; 1354 :         _Head->_Right   = _Head;

  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __Head$[ebp]
  0007d	8b 55 f4	 mov	 edx, DWORD PTR __Head$[ebp]
  00080	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 1355 :         _Scary->_Mysize = 0;

  00083	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  00086	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 1356 :     }

  0008d	83 c4 14	 add	 esp, 20			; 00000014H
  00090	3b ec		 cmp	 ebp, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::max_size, COMDAT
; _this$ = ecx

; 1213 :     _NODISCARD size_type max_size() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1214 :         return (_STD min)(

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::max_size
  00036	83 c4 04	 add	 esp, 4
  00039	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  0003c	e8 00 00 00 00	 call	 ?max@?$numeric_limits@H@std@@SAHXZ ; std::numeric_limits<int>::max
  00041	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00044	8d 45 f8	 lea	 eax, DWORD PTR $T2[ebp]
  00047	50		 push	 eax
  00048	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ??$min@I@std@@YAABIABI0@Z ; std::min<unsigned int>
  00051	83 c4 08	 add	 esp, 8
  00054	8b 00		 mov	 eax, DWORD PTR [eax]

; 1215 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1216 :     }

  00056	83 c4 0c	 add	 esp, 12			; 0000000cH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end, COMDAT
; _this$ = ecx

; 1156 :     _NODISCARD const_iterator end() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1157 :         const auto _Scary = _Get_scary();

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00029	89 45 f8	 mov	 DWORD PTR __Scary$[ebp], eax

; 1158 :         return const_iterator(_Scary->_Myhead, _Scary);

  0002c	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	52		 push	 edx
  00037	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
  0003f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1159 :     }

  00042	83 c4 08	 add	 esp, 8
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end, COMDAT
; _this$ = ecx

; 1151 :     _NODISCARD iterator end() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1152 :         const auto _Scary = _Get_scary();

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  00029	89 45 f8	 mov	 DWORD PTR __Scary$[ebp], eax

; 1153 :         return iterator(_Scary->_Myhead, _Scary);

  0002c	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR __Scary$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	52		 push	 edx
  00037	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@1@@Z
  0003f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1154 :     }

  00042	83 c4 08	 add	 esp, 8
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::operator=, COMDAT
; _this$ = ecx

; 1133 :     _Tree& operator=(const _Tree& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1134 :         if (this != _STD addressof(_Right)) {

  00021	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@std@@YAPBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> > const >
  0002a	83 c4 04	 add	 esp, 4
  0002d	39 45 fc	 cmp	 DWORD PTR _this$[ebp], eax
  00030	74 16		 je	 SHORT $LN2@operator

; 1135 :             _Copy_assign(_Right, _Choose_pocca<_Alnode>{});

  00032	33 c9		 xor	 ecx, ecx
  00034	88 4d fb	 mov	 BYTE PTR $T1[ebp], cl
  00037	0f b6 55 fb	 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?_Copy_assign@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_assign
$LN2@operator:

; 1136 :         }
; 1137 : 
; 1138 :         return *this;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1139 :     }

  0004b	83 c4 08	 add	 esp, 8
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Copy_assign@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z
_TEXT	SEGMENT
tv74 = -16						; size = 4
tv76 = -12						; size = 4
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Copy_assign@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_assign, COMDAT
; _this$ = ecx

; 1102 :     void _Copy_assign(const _Tree& _Right, false_type) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  0001f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1103 :         clear();

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::clear

; 1104 :         _Getcomp() = _Right._Getcomp();

  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getcomp

; 1105 :         _Pocca(_Getal(), _Right._Getal());

  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  00044	89 45 f4	 mov	 DWORD PTR tv76[ebp], eax
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  0004f	89 45 f0	 mov	 DWORD PTR tv74[ebp], eax
  00052	8b 45 f4	 mov	 eax, DWORD PTR tv76[ebp]
  00055	50		 push	 eax
  00056	8b 4d f0	 mov	 ecx, DWORD PTR tv74[ebp]
  00059	51		 push	 ecx
  0005a	e8 00 00 00 00	 call	 ??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@0@ABV10@@Z ; std::_Pocca<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >
  0005f	83 c4 08	 add	 esp, 8

; 1106 :         _Copy(_Right, _Copy_tag{});

  00062	0f b6 55 fb	 movzx	 edx, BYTE PTR $T1[ebp]
  00066	52		 push	 edx
  00067	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ??$_Copy@U_Copy_tag@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXABV01@U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_tag>

; 1107 :     }

  00073	83 c4 10	 add	 esp, 16			; 00000010H
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?_Copy_assign@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@AAEXABV12@U?$integral_constant@_N$0A@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Copy_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_$S19$ = -21						; size = 1
__Alproxy$ = -16					; size = 4
__Scary$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >, COMDAT
; _this$ = ecx

; 1092 :     ~_Tree() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1093 :         const auto _Scary = _Get_scary();

  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Get_scary
  0003f	89 45 f4	 mov	 DWORD PTR __Scary$[ebp], eax

; 1094 :         _Scary->_Erase_head(_Getal());

  00042	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  0004a	50		 push	 eax
  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __Scary$[ebp]
  0004e	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >

; 1095 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1096 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Getal
  0005b	50		 push	 eax
  0005c	8d 4d eb	 lea	 ecx, DWORD PTR _$S19$[ebp]
  0005f	e8 00 00 00 00	 call	 ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >
  00064	8d 45 eb	 lea	 eax, DWORD PTR _$S19$[ebp]
  00067	89 45 f0	 mov	 DWORD PTR __Alproxy$[ebp], eax

; 1097 :         _Delete_plain_internal(_Alproxy, _Scary->_Myproxy);

  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __Scary$[ebp]
  0006d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006f	52		 push	 edx
  00070	8b 45 f0	 mov	 eax, DWORD PTR __Alproxy$[ebp]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00079	83 c4 08	 add	 esp, 8

; 1098 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1099 :     }

  0007c	52		 push	 edx
  0007d	8b cd		 mov	 ecx, ebp
  0007f	50		 push	 eax
  00080	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Tree
  00086	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008b	58		 pop	 eax
  0008c	5a		 pop	 edx
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00090	33 cd		 xor	 ecx, ebp
  00092	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00097	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
  000a5	0f 1f 00	 npad	 3
$LN5@Tree:
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN4@Tree
$LN4@Tree:
  000b0	eb ff ff ff	 DD	 -21			; ffffffebH
  000b4	01 00 00 00	 DD	 1
  000b8	00 00 00 00	 DD	 $LN3@Tree
$LN3@Tree:
  000bc	24		 DB	 36			; 00000024H
  000bd	53		 DB	 83			; 00000053H
  000be	31		 DB	 49			; 00000031H
  000bf	39		 DB	 57			; 00000039H
  000c0	00		 DB	 0
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
tv71 = -12						; size = 4
$T1 = -6						; size = 1
$T2 = -5						; size = 1
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >, COMDAT
; _this$ = ecx

; 891  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	89 45 f4	 mov	 DWORD PTR tv71[ebp], eax
  0002e	8d 4d fb	 lea	 ecx, DWORD PTR $T2[ebp]
  00031	51		 push	 ecx
  00032	8b 55 08	 mov	 edx, DWORD PTR __Parg$[ebp]
  00035	52		 push	 edx
  00036	0f b6 45 fa	 movzx	 eax, BYTE PTR $T1[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f4	 mov	 ecx, DWORD PTR tv71[ebp]
  0003e	e8 00 00 00 00	 call	 ??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>

; 892  :         _Alloc_sentinel_and_proxy();

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Alloc_sentinel_and_proxy

; 893  :     }

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0000d	b8 aa aa aa 02	 mov	 eax, 44739242		; 02aaaaaaH

; 729  :     }

  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::deallocate, COMDAT

; 693  :     static _CONSTEXPR20_DYNALLOC void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 694  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 695  : #ifdef __cpp_lib_constexpr_dynamic_alloc // TRANSITION, GH-1532
; 696  :         if (_STD is_constant_evaluated()) {

  0000d	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00012	0f b6 c0	 movzx	 eax, al
  00015	85 c0		 test	 eax, eax
  00017	74 12		 je	 SHORT $LN2@deallocate

; 697  :             _Al.deallocate(_Ptr, _Count);

  00019	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 0c	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00020	52		 push	 edx
  00021	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00024	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::deallocate

; 698  :         } else

  00029	eb 11		 jmp	 SHORT $LN1@deallocate
$LN2@deallocate:

; 699  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 700  :         {
; 701  :             (void) _Al;
; 702  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0002b	6b 45 10 60	 imul	 eax, DWORD PTR __Count$[ebp], 96
  0002f	50		 push	 eax
  00030	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00039	83 c4 08	 add	 esp, 8
$LN1@deallocate:

; 703  :         }
; 704  :     }

  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocate, COMDAT
; _this$ = ecx

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00018	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0GA@@std@@YAII@Z ; std::_Get_size_of_n<96>
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0002a	83 c4 04	 add	 esp, 4

; 840  :     }

  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::deallocate, COMDAT
; _this$ = ecx

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	6b 45 0c 60	 imul	 eax, DWORD PTR __Count$[ebp], 96
  0001c	50		 push	 eax
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00026	83 c4 08	 add	 esp, 8

; 836  :     }

  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator() noexcept {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ?getPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::getPlayingAnimation, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  00024	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 102  : 	assert(isPlayingAnimation());

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?isPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE_NXZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::isPlayingAnimation
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	75 1e		 jne	 SHORT $LN3@getPlaying
  00038	8b f4		 mov	 esi, esp
  0003a	6a 66		 push	 102			; 00000066H
  0003c	68 00 00 00 00	 push	 OFFSET $SG98451
  00041	68 00 00 00 00	 push	 OFFSET $SG98452
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@getPlaying:

; 103  : 
; 104  : 	return mPlayingAnimation->first;

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0005c	e8 00 00 00 00	 call	 ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator->
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00065	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006a	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  0006d	83 ca 01	 or	 edx, 1
  00070	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  00073	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 105  : }

  00076	5e		 pop	 esi
  00077	83 c4 08	 add	 esp, 8
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?getPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::getPlayingAnimation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ?isPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE_NXZ
_TEXT	SEGMENT
tv88 = -36						; size = 4
tv92 = -32						; size = 4
tv80 = -28						; size = 4
tv85 = -24						; size = 4
$T1 = -20						; size = 12
$T2 = -5						; size = 1
_this$ = -4						; size = 4
?isPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE_NXZ PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::isPlayingAnimation, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00011	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00014	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00017	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00020	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00023	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00026	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00029	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  0002e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 96   : 	return mPlayingAnimation != mAnimationMap.end();

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	83 c0 0c	 add	 eax, 12			; 0000000cH
  00039	89 45 e8	 mov	 DWORD PTR tv85[ebp], eax
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	89 4d e4	 mov	 DWORD PTR tv80[ebp], ecx
  00042	8d 55 ec	 lea	 edx, DWORD PTR $T1[ebp]
  00045	52		 push	 edx
  00046	8b 4d e4	 mov	 ecx, DWORD PTR tv80[ebp]
  00049	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
  0004e	89 45 e0	 mov	 DWORD PTR tv92[ebp], eax
  00051	8b 45 e0	 mov	 eax, DWORD PTR tv92[ebp]
  00054	50		 push	 eax
  00055	8b 4d e8	 mov	 ecx, DWORD PTR tv85[ebp]
  00058	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator==
  0005d	0f b6 c8	 movzx	 ecx, al
  00060	85 c9		 test	 ecx, ecx
  00062	75 09		 jne	 SHORT $LN3@isPlayingA
  00064	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN4@isPlayingA
$LN3@isPlayingA:
  0006d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN4@isPlayingA:
  00074	8a 55 dc	 mov	 dl, BYTE PTR tv88[ebp]
  00077	88 55 fb	 mov	 BYTE PTR $T2[ebp], dl
  0007a	8d 4d ec	 lea	 ecx, DWORD PTR $T1[ebp]
  0007d	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00082	8a 45 fb	 mov	 al, BYTE PTR $T2[ebp]

; 97   : }

  00085	83 c4 24	 add	 esp, 36			; 00000024H
  00088	3b ec		 cmp	 ebp, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
?isPlayingAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QBE_NXZ ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::isPlayingAnimation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
_TEXT	SEGMENT
tv161 = -72						; size = 4
tv128 = -68						; size = 4
tv76 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 4
$T4 = -52						; size = 12
_itr$ = -36						; size = 12
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_loop$ = 12						; size = 1
?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d b8	 lea	 edi, DWORD PTR [ebp-72]
  0001a	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00031	50		 push	 eax
  00032	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00035	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0003e	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  0004a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 81   : 	AnimationMapIterator itr = mAnimationMap.find(id);

  0004f	6a 0c		 push	 12			; 0000000cH
  00051	8d 4d dc	 lea	 ecx, DWORD PTR _itr$[ebp]
  00054	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAEXI@Z
  00059	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	89 45 c0	 mov	 DWORD PTR tv76[ebp], eax
  0005f	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  00062	51		 push	 ecx
  00063	8d 55 dc	 lea	 edx, DWORD PTR _itr$[ebp]
  00066	52		 push	 edx
  00067	8b 4d c0	 mov	 ecx, DWORD PTR tv76[ebp]
  0006a	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::find
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 82   : 	assert(itr != mAnimationMap.end());

  00076	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00079	89 45 bc	 mov	 DWORD PTR tv128[ebp], eax
  0007c	8d 4d cc	 lea	 ecx, DWORD PTR $T4[ebp]
  0007f	51		 push	 ecx
  00080	8b 4d bc	 mov	 ecx, DWORD PTR tv128[ebp]
  00083	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
  00088	89 45 b8	 mov	 DWORD PTR tv161[ebp], eax
  0008b	8b 55 c4	 mov	 edx, DWORD PTR $T2[ebp]
  0008e	83 ca 01	 or	 edx, 1
  00091	89 55 c4	 mov	 DWORD PTR $T2[ebp], edx
  00094	8b 45 b8	 mov	 eax, DWORD PTR tv161[ebp]
  00097	50		 push	 eax
  00098	8d 4d dc	 lea	 ecx, DWORD PTR _itr$[ebp]
  0009b	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator==
  000a0	0f b6 c8	 movzx	 ecx, al
  000a3	85 c9		 test	 ecx, ecx
  000a5	74 1e		 je	 SHORT $LN3@playAnimat
  000a7	8b f4		 mov	 esi, esp
  000a9	6a 52		 push	 82			; 00000052H
  000ab	68 00 00 00 00	 push	 OFFSET $SG92124
  000b0	68 00 00 00 00	 push	 OFFSET $SG92125
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000be	3b f4		 cmp	 esi, esp
  000c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@playAnimat:
  000c5	8b 45 c4	 mov	 eax, DWORD PTR $T2[ebp]
  000c8	83 e0 01	 and	 eax, 1
  000cb	74 0c		 je	 SHORT $LN7@playAnimat
  000cd	83 65 c4 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  000d1	8d 4d cc	 lea	 ecx, DWORD PTR $T4[ebp]
  000d4	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
$LN7@playAnimat:

; 83   : 
; 84   : 	playAnimation(itr, loop);

  000d9	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _loop$[ebp]
  000dd	51		 push	 ecx
  000de	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000e1	8b cc		 mov	 ecx, esp
  000e3	89 65 c8	 mov	 DWORD PTR $T3[ebp], esp
  000e6	8d 55 dc	 lea	 edx, DWORD PTR _itr$[ebp]
  000e9	52		 push	 edx
  000ea	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  000ef	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	e8 00 00 00 00	 call	 ?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation

; 85   : }

  000f7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fe	8d 4d dc	 lea	 ecx, DWORD PTR _itr$[ebp]
  00101	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00106	52		 push	 edx
  00107	8b cd		 mov	 ecx, ebp
  00109	50		 push	 eax
  0010a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@playAnimat
  00110	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00115	58		 pop	 eax
  00116	5a		 pop	 edx
  00117	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00121	59		 pop	 ecx
  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00127	33 cd		 xor	 ecx, ebp
  00129	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012e	83 c4 48	 add	 esp, 72			; 00000048H
  00131	3b ec		 cmp	 ebp, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 08 00	 ret	 8
  0013e	66 90		 npad	 2
$LN12@playAnimat:
  00140	01 00 00 00	 DD	 1
  00144	00 00 00 00	 DD	 $LN11@playAnimat
$LN11@playAnimat:
  00148	dc ff ff ff	 DD	 -36			; ffffffdcH
  0014c	0c 00 00 00	 DD	 12			; 0000000cH
  00150	00 00 00 00	 DD	 $LN9@playAnimat
$LN9@playAnimat:
  00154	69		 DB	 105			; 00000069H
  00155	74		 DB	 116			; 00000074H
  00156	72		 DB	 114			; 00000072H
  00157	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _itr$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z
_TEXT	SEGMENT
tv180 = -232						; size = 4
tv182 = -228						; size = 4
tv178 = -224						; size = 4
tv144 = -220						; size = 4
tv160 = -216						; size = 4
tv133 = -212						; size = 4
tv172 = -208						; size = 4
tv95 = -204						; size = 4
tv135 = -200						; size = 4
tv167 = -196						; size = 4
tv77 = -192						; size = 4
$T2 = -188						; size = 4
$T3 = -184						; size = 16
$T4 = -168						; size = 12
$T5 = -156						; size = 12
$T6 = -144						; size = 80
$T7 = -64						; size = 48
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_animation$ = 12					; size = 4
_duration$ = 16						; size = 8
?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00020	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	59		 pop	 ecx
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00041	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0004b	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  00050	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 74   : 	assert(mAnimationMap.find(id) == mAnimationMap.end());

  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv77[ebp], eax
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  00061	51		 push	 ecx
  00062	8d 95 64 ff ff
	ff		 lea	 edx, DWORD PTR $T5[ebp]
  00068	52		 push	 edx
  00069	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv77[ebp]
  0006f	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::find
  00074	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv167[ebp], eax
  0007a	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00080	83 c8 01	 or	 eax, 1
  00083	89 85 44 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00089	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv167[ebp]
  0008f	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv135[ebp], ecx
  00095	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00098	89 95 34 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], edx
  0009e	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  000a4	50		 push	 eax
  000a5	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv95[ebp]
  000ab	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end
  000b0	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv172[ebp], eax
  000b6	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000bc	83 c9 02	 or	 ecx, 2
  000bf	89 8d 44 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000c5	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv172[ebp]
  000cb	89 95 2c ff ff
	ff		 mov	 DWORD PTR tv133[ebp], edx
  000d1	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR tv133[ebp]
  000d7	50		 push	 eax
  000d8	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv135[ebp]
  000de	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > > >::operator==
  000e3	0f b6 c8	 movzx	 ecx, al
  000e6	85 c9		 test	 ecx, ecx
  000e8	75 1e		 jne	 SHORT $LN3@addAnimati
  000ea	8b f4		 mov	 esi, esp
  000ec	6a 4a		 push	 74			; 0000004aH
  000ee	68 00 00 00 00	 push	 OFFSET $SG92109
  000f3	68 00 00 00 00	 push	 OFFSET $SG92110
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000fe	83 c4 0c	 add	 esp, 12			; 0000000cH
  00101	3b f4		 cmp	 esi, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@addAnimati:
  00108	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0010e	83 e0 02	 and	 eax, 2
  00111	74 12		 je	 SHORT $LN8@addAnimati
  00113	83 a5 44 ff ff
	ff fd		 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  0011a	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00120	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
$LN8@addAnimati:
  00125	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0012b	83 e1 01	 and	 ecx, 1
  0012e	74 12		 je	 SHORT $LN9@addAnimati
  00130	83 a5 44 ff ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00137	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0013d	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@addAnimati:

; 75   : 	mAnimationMap.insert( std::make_pair(id, ScaledAnimation(animation, duration)) );

  00142	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00145	89 95 28 ff ff
	ff		 mov	 DWORD PTR tv160[ebp], edx
  0014b	8d 45 10	 lea	 eax, DWORD PTR _duration$[ebp]
  0014e	50		 push	 eax
  0014f	8b 4d 0c	 mov	 ecx, DWORD PTR _animation$[ebp]
  00152	51		 push	 ecx
  00153	8d 4d c0	 lea	 ecx, DWORD PTR $T7[ebp]
  00156	e8 00 00 00 00	 call	 ??$?0ABV?$function@$$A6AXAAVSprite@sf@@M@Z@std@@AAVTime@sf@@$0A@@?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@1@AAVTime@sf@@@Z ; std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time><std::function<void __cdecl(sf::Sprite &,float)> const &,sf::Time &,0>
  0015b	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv144[ebp], eax
  00161	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv144[ebp]
  00167	89 95 20 ff ff
	ff		 mov	 DWORD PTR tv178[ebp], edx
  0016d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00174	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv178[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0017e	51		 push	 ecx
  0017f	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T6[ebp]
  00185	52		 push	 edx
  00186	e8 00 00 00 00	 call	 ??$make_pair@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAU?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@0@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >
  0018b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018e	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv182[ebp], eax
  00194	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv182[ebp]
  0019a	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv180[ebp], eax
  001a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001a4	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv180[ebp]
  001aa	51		 push	 ecx
  001ab	8d 95 48 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  001b1	52		 push	 edx
  001b2	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv160[ebp]
  001b8	e8 00 00 00 00	 call	 ??$insert@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@$0A@@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> >,0>
  001bd	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  001c3	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
  001c8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001cc	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  001d2	e8 00 00 00 00	 call	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ
  001d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001de	8d 4d c0	 lea	 ecx, DWORD PTR $T7[ebp]
  001e1	e8 00 00 00 00	 call	 ??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ

; 76   : }

  001e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f0	59		 pop	 ecx
  001f1	5f		 pop	 edi
  001f2	5e		 pop	 esi
  001f3	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  001f9	3b ec		 cmp	 ebp, esp
  001fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z$2:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR $T7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@std@@QAE@XZ
__unwindfunclet$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z$3:
  00008	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@QAE@XZ
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ??1?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 69   : }

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0001e	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??1?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_origin$ = 8						; size = 4
??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0004c	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00051	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 42   : 	adopt(origin);

  00055	8b 45 08	 mov	 eax, DWORD PTR _origin$[ebp]
  00058	50		 push	 eax
  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??$adopt@$$CBV?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@AAEXABV01@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::adopt<thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >

; 43   : }

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	83 c4 10	 add	 esp, 16			; 00000010H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ
__unwindfunclet$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@std@@QAE@XZ
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\Thor\Animations\Detail\Animator.inl
;	COMDAT ??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ
_TEXT	SEGMENT
tv79 = -8						; size = 4
_this$ = -4						; size = 4
??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ PROC ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __D138E2DC_Animator@inl
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 31   : : mAnimationMap()

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > > >

; 32   : , mPlayingAnimation(mAnimationMap.end())

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	89 45 f8	 mov	 DWORD PTR tv79[ebp], eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00035	51		 push	 ecx
  00036	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  00039	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@V?$function@$$A6AXAAVSprite@sf@@M@Z@std@@VTime@sf@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<std::function<void __cdecl(sf::Sprite &,float)>,sf::Time> > >,0> >::end

; 33   : , mProgress(0.f)

  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	0f 57 c0	 xorps	 xmm0, xmm0
  00044	f3 0f 11 42 18	 movss	 DWORD PTR [edx+24], xmm0

; 34   : , mLoop(false)

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c6 40 1c 00	 mov	 BYTE PTR [eax+28], 0

; 36   : }

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 c4 08	 add	 esp, 8
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ ENDP ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Animator.cpp
_TEXT	SEGMENT
tv65 = -28						; size = 4
$T1 = -24						; size = 16
_y$2 = -8						; size = 4
_step$ = -4						; size = 4
_animation$ = 8						; size = 4
_x$ = 12						; size = 4
_yFirst$ = 16						; size = 4
_yLast$ = 20						; size = 4
_duration$ = 24						; size = 4
?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z PROC	; addFrames

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00012	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00015	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00018	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001b	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001e	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00021	b9 00 00 00 00	 mov	 ecx, OFFSET __6C52B218_Animator@cpp
  00026	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 6    : 	const int step = (yFirst < yLast) ? +1 : -1;

  0002b	8b 45 10	 mov	 eax, DWORD PTR _yFirst$[ebp]
  0002e	3b 45 14	 cmp	 eax, DWORD PTR _yLast$[ebp]
  00031	7d 09		 jge	 SHORT $LN6@addFrames
  00033	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  0003a	eb 07		 jmp	 SHORT $LN7@addFrames
$LN6@addFrames:
  0003c	c7 45 e4 ff ff
	ff ff		 mov	 DWORD PTR tv65[ebp], -1
$LN7@addFrames:
  00043	8b 4d e4	 mov	 ecx, DWORD PTR tv65[ebp]
  00046	89 4d fc	 mov	 DWORD PTR _step$[ebp], ecx

; 7    : 	yLast += step; // so yLast is excluded in the range

  00049	8b 55 14	 mov	 edx, DWORD PTR _yLast$[ebp]
  0004c	03 55 fc	 add	 edx, DWORD PTR _step$[ebp]
  0004f	89 55 14	 mov	 DWORD PTR _yLast$[ebp], edx

; 8    : 
; 9    : 	for (int y = yFirst; y != yLast; y += step)

  00052	8b 45 10	 mov	 eax, DWORD PTR _yFirst$[ebp]
  00055	89 45 f8	 mov	 DWORD PTR _y$2[ebp], eax
  00058	eb 09		 jmp	 SHORT $LN4@addFrames
$LN2@addFrames:
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _y$2[ebp]
  0005d	03 4d fc	 add	 ecx, DWORD PTR _step$[ebp]
  00060	89 4d f8	 mov	 DWORD PTR _y$2[ebp], ecx
$LN4@addFrames:
  00063	8b 55 f8	 mov	 edx, DWORD PTR _y$2[ebp]
  00066	3b 55 14	 cmp	 edx, DWORD PTR _yLast$[ebp]
  00069	74 36		 je	 SHORT $LN3@addFrames

; 10   : 		animation.addFrame(duration, sf::IntRect(36 * x, 39 * y, 36, 39));

  0006b	6a 27		 push	 39			; 00000027H
  0006d	6a 24		 push	 36			; 00000024H
  0006f	6b 45 f8 27	 imul	 eax, DWORD PTR _y$2[ebp], 39
  00073	50		 push	 eax
  00074	6b 4d 0c 24	 imul	 ecx, DWORD PTR _x$[ebp], 36
  00078	51		 push	 ecx
  00079	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0007c	e8 00 00 00 00	 call	 ??0?$Rect@H@sf@@QAE@HHHH@Z ; sf::Rect<int>::Rect<int>
  00081	8b f4		 mov	 esi, esp
  00083	50		 push	 eax
  00084	51		 push	 ecx
  00085	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _duration$[ebp]
  0008a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008f	8b 4d 08	 mov	 ecx, DWORD PTR _animation$[ebp]
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?addFrame@FrameAnimation@thor@@QAEXMABV?$Rect@H@sf@@@Z
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	eb b9		 jmp	 SHORT $LN2@addFrames
$LN3@addFrames:

; 11   : }

  000a1	5e		 pop	 esi
  000a2	83 c4 1c	 add	 esp, 28			; 0000001cH
  000a5	3b ec		 cmp	 ebp, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z ENDP	; addFrames
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Animator.cpp
_TEXT	SEGMENT
tv75 = -20						; size = 4
tv69 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
??1Animator@@QAE@XZ PROC				; Animator::~Animator
; _this$ = ecx

; 34   : Animator::~Animator() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET __6C52B218_Animator@cpp
  00022	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 35   : 	delete(playerAnimation);

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00033	74 0f		 je	 SHORT $LN3@Animator
  00035	6a 01		 push	 1
  00037	8b 4d f8	 mov	 ecx, DWORD PTR $T2[ebp]
  0003a	e8 00 00 00 00	 call	 ??_G?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEPAXI@Z
  0003f	89 45 f0	 mov	 DWORD PTR tv69[ebp], eax
  00042	eb 07		 jmp	 SHORT $LN4@Animator
$LN3@Animator:
  00044	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@Animator:

; 36   : 	delete(playerAnimator);

  0004b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00051	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00054	83 7d f4 00	 cmp	 DWORD PTR $T1[ebp], 0
  00058	74 0f		 je	 SHORT $LN5@Animator
  0005a	6a 01		 push	 1
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  0005f	e8 00 00 00 00	 call	 ??_G?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEPAXI@Z
  00064	89 45 ec	 mov	 DWORD PTR tv75[ebp], eax
  00067	eb 07		 jmp	 SHORT $LN2@Animator
$LN5@Animator:
  00069	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN2@Animator:

; 37   : }

  00070	83 c4 14	 add	 esp, 20			; 00000014H
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??1Animator@@QAE@XZ ENDP				; Animator::~Animator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Animator.cpp
_TEXT	SEGMENT
tv372 = -780						; size = 4
tv363 = -776						; size = 4
tv346 = -772						; size = 4
tv403 = -768						; size = 4
tv281 = -764						; size = 4
tv398 = -760						; size = 4
tv248 = -756						; size = 4
tv393 = -752						; size = 4
tv215 = -748						; size = 4
tv388 = -744						; size = 4
tv182 = -740						; size = 4
tv383 = -736						; size = 4
tv78 = -732						; size = 4
$T2 = -728						; size = 4
$T3 = -724						; size = 4
$T4 = -720						; size = 8
$T5 = -712						; size = 8
$T6 = -700						; size = 4
$T7 = -696						; size = 8
$T8 = -688						; size = 8
$T9 = -680						; size = 8
$T10 = -668						; size = 4
$T11 = -664						; size = 8
$T12 = -656						; size = 8
$T13 = -648						; size = 8
$T14 = -636						; size = 4
$T15 = -632						; size = 8
$T16 = -624						; size = 8
$T17 = -616						; size = 8
$T18 = -604						; size = 4
$T19 = -600						; size = 8
$T20 = -592						; size = 8
$T21 = -584						; size = 8
$T22 = -572						; size = 4
$T23 = -568						; size = 8
$T24 = -560						; size = 4
$T25 = -556						; size = 4
$T26 = -552						; size = 28
$T27 = -524						; size = 28
$T28 = -496						; size = 40
$T29 = -452						; size = 28
$T30 = -424						; size = 40
$T31 = -380						; size = 28
$T32 = -352						; size = 40
$T33 = -308						; size = 28
$T34 = -280						; size = 40
$T35 = -236						; size = 28
$T36 = -208						; size = 40
_walkRight$ = -160					; size = 20
_walkLeft$ = -132					; size = 20
_idle$ = -104						; size = 20
_crouch$ = -76						; size = 20
_jump$ = -48						; size = 20
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
?generatePlayerAnimation@Animator@@QAEXXZ PROC		; Animator::generatePlayerAnimation
; _this$ = ecx

; 14   : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f8	 and	 esp, -8			; fffffff8H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?generatePlayerAnimation@Animator@@QAEXXZ
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec fc 02 00
	00		 sub	 esp, 764		; 000002fcH
  0002b	56		 push	 esi
  0002c	57		 push	 edi
  0002d	51		 push	 ecx
  0002e	8d bd f4 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-780]
  00034	b9 bf 00 00 00	 mov	 ecx, 191		; 000000bfH
  00039	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0003e	f3 ab		 rep stosd
  00040	59		 pop	 ecx
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00046	33 c5		 xor	 eax, ebp
  00048	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0004b	50		 push	 eax
  0004c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0004f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00055	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00058	b9 00 00 00 00	 mov	 ecx, OFFSET __6C52B218_Animator@cpp
  0005d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 15   : 	playerAnimation = new thor::Animator<sf::Sprite, std::string>;

  00062	6a 20		 push	 32			; 00000020H
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	83 c4 04	 add	 esp, 4
  0006c	89 85 d0 fd ff
	ff		 mov	 DWORD PTR $T24[ebp], eax
  00072	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00079	83 bd d0 fd ff
	ff 00		 cmp	 DWORD PTR $T24[ebp], 0
  00080	74 20		 je	 SHORT $LN3@generatePl
  00082	6a 20		 push	 32			; 00000020H
  00084	8b 8d d0 fd ff
	ff		 mov	 ecx, DWORD PTR $T24[ebp]
  0008a	e8 00 00 00 00	 call	 ?__autoclassinit2@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXI@Z
  0008f	8b 8d d0 fd ff
	ff		 mov	 ecx, DWORD PTR $T24[ebp]
  00095	e8 00 00 00 00	 call	 ??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@XZ ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0009a	89 85 24 fd ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  000a0	eb 0a		 jmp	 SHORT $LN4@generatePl
$LN3@generatePl:
  000a2	c7 85 24 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN4@generatePl:
  000ac	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  000b2	89 85 d4 fd ff
	ff		 mov	 DWORD PTR $T25[ebp], eax
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bf	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	8b 95 d4 fd ff
	ff		 mov	 edx, DWORD PTR $T25[ebp]
  000c8	89 11		 mov	 DWORD PTR [ecx], edx

; 16   : 	thor::FrameAnimation jump, crouch, idle, walkLeft,walkRight;

  000ca	8b f4		 mov	 esi, esp
  000cc	8d 4d d0	 lea	 ecx, DWORD PTR _jump$[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@XZ
  000d5	3b f4		 cmp	 esi, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000e3	8b f4		 mov	 esi, esp
  000e5	8d 4d b4	 lea	 ecx, DWORD PTR _crouch$[ebp]
  000e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@XZ
  000ee	3b f4		 cmp	 esi, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000f9	8b f4		 mov	 esi, esp
  000fb	8d 4d 98	 lea	 ecx, DWORD PTR _idle$[ebp]
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@XZ
  00104	3b f4		 cmp	 esi, esp
  00106	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0010f	8b f4		 mov	 esi, esp
  00111	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _walkLeft$[ebp]
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@XZ
  0011d	3b f4		 cmp	 esi, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00128	8b f4		 mov	 esi, esp
  0012a	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _walkRight$[ebp]
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@XZ
  00136	3b f4		 cmp	 esi, esp
  00138	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 17   : 
; 18   : 	addFrames(walkLeft, 0, 0,6);			

  00141	51		 push	 ecx
  00142	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0014a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014f	6a 06		 push	 6
  00151	6a 00		 push	 0
  00153	6a 00		 push	 0
  00155	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _walkLeft$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z ; addFrames

; 19   : 	addFrames(walkRight, 1, 0,6);

  00161	83 c4 10	 add	 esp, 16			; 00000010H
  00164	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0016c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00171	6a 06		 push	 6
  00173	6a 00		 push	 0
  00175	6a 01		 push	 1
  00177	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _walkRight$[ebp]
  0017d	51		 push	 ecx
  0017e	e8 00 00 00 00	 call	 ?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z ; addFrames

; 20   : 	addFrames(idle, 2, 0,2);

  00183	83 c4 10	 add	 esp, 16			; 00000010H
  00186	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0018e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00193	6a 02		 push	 2
  00195	6a 00		 push	 0
  00197	6a 02		 push	 2
  00199	8d 55 98	 lea	 edx, DWORD PTR _idle$[ebp]
  0019c	52		 push	 edx
  0019d	e8 00 00 00 00	 call	 ?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z ; addFrames

; 21   : 	addFrames(jump, 3, 0, 2);

  001a2	83 c4 10	 add	 esp, 16			; 00000010H
  001a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	6a 02		 push	 2
  001b4	6a 00		 push	 0
  001b6	6a 03		 push	 3
  001b8	8d 45 d0	 lea	 eax, DWORD PTR _jump$[ebp]
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 ?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z ; addFrames

; 22   : 	addFrames(crouch, 4, 0,2);

  001c1	83 c4 10	 add	 esp, 16			; 00000010H
  001c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d1	6a 02		 push	 2
  001d3	6a 00		 push	 0
  001d5	6a 04		 push	 4
  001d7	8d 4d b4	 lea	 ecx, DWORD PTR _crouch$[ebp]
  001da	51		 push	 ecx
  001db	e8 00 00 00 00	 call	 ?addFrames@@YAXAAVFrameAnimation@thor@@HHHM@Z ; addFrames
  001e0	83 c4 14	 add	 esp, 20			; 00000014H

; 23   : 
; 24   : 	playerAnimation->addAnimation("walkLeft", walkLeft, sf::seconds(1.f));

  001e3	83 ec 14	 sub	 esp, 20			; 00000014H
  001e6	8b cc		 mov	 ecx, esp
  001e8	89 a5 c4 fd ff
	ff		 mov	 DWORD PTR $T22[ebp], esp
  001ee	8b f4		 mov	 esi, esp
  001f0	8d 95 7c ff ff
	ff		 lea	 edx, DWORD PTR _walkLeft$[ebp]
  001f6	52		 push	 edx
  001f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@ABV01@@Z
  001fd	3b f4		 cmp	 esi, esp
  001ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00204	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T36[ebp]
  0020a	e8 00 00 00 00	 call	 ??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>
  0020f	89 85 20 fd ff
	ff		 mov	 DWORD PTR tv383[ebp], eax
  00215	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00219	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0021c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021e	89 8d 1c fd ff
	ff		 mov	 DWORD PTR tv182[ebp], ecx
  00224	8b f4		 mov	 esi, esp
  00226	51		 push	 ecx
  00227	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0022f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00234	8d 95 c8 fd ff
	ff		 lea	 edx, DWORD PTR $T23[ebp]
  0023a	52		 push	 edx
  0023b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?seconds@sf@@YA?AVTime@1@M@Z
  00241	83 c4 08	 add	 esp, 8
  00244	3b f4		 cmp	 esi, esp
  00246	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0024b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00250	89 8d b8 fd ff
	ff		 mov	 DWORD PTR $T21[ebp], ecx
  00256	89 95 bc fd ff
	ff		 mov	 DWORD PTR $T21[ebp+4], edx
  0025c	8b 85 b8 fd ff
	ff		 mov	 eax, DWORD PTR $T21[ebp]
  00262	8b 8d bc fd ff
	ff		 mov	 ecx, DWORD PTR $T21[ebp+4]
  00268	89 85 b0 fd ff
	ff		 mov	 DWORD PTR $T20[ebp], eax
  0026e	89 8d b4 fd ff
	ff		 mov	 DWORD PTR $T20[ebp+4], ecx
  00274	68 00 00 00 00	 push	 OFFSET $SG81867
  00279	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T35[ebp]
  0027f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00284	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00288	8b 95 b4 fd ff
	ff		 mov	 edx, DWORD PTR $T20[ebp+4]
  0028e	52		 push	 edx
  0028f	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR $T20[ebp]
  00295	50		 push	 eax
  00296	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T36[ebp]
  0029c	51		 push	 ecx
  0029d	8d 95 14 ff ff
	ff		 lea	 edx, DWORD PTR $T35[ebp]
  002a3	52		 push	 edx
  002a4	8b 8d 1c fd ff
	ff		 mov	 ecx, DWORD PTR tv182[ebp]
  002aa	e8 00 00 00 00	 call	 ?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation
  002af	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  002b3	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T35[ebp]
  002b9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002be	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  002c2	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T36[ebp]
  002c8	e8 00 00 00 00	 call	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ

; 25   : 	playerAnimation->addAnimation("walkRight", walkRight, sf::seconds(1.f));

  002cd	83 ec 14	 sub	 esp, 20			; 00000014H
  002d0	8b cc		 mov	 ecx, esp
  002d2	89 a5 a4 fd ff
	ff		 mov	 DWORD PTR $T18[ebp], esp
  002d8	8b f4		 mov	 esi, esp
  002da	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _walkRight$[ebp]
  002e0	50		 push	 eax
  002e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@ABV01@@Z
  002e7	3b f4		 cmp	 esi, esp
  002e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ee	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  002f4	e8 00 00 00 00	 call	 ??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>
  002f9	89 85 18 fd ff
	ff		 mov	 DWORD PTR tv388[ebp], eax
  002ff	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00303	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00306	8b 11		 mov	 edx, DWORD PTR [ecx]
  00308	89 95 14 fd ff
	ff		 mov	 DWORD PTR tv215[ebp], edx
  0030e	8b f4		 mov	 esi, esp
  00310	51		 push	 ecx
  00311	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00319	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031e	8d 85 a8 fd ff
	ff		 lea	 eax, DWORD PTR $T19[ebp]
  00324	50		 push	 eax
  00325	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?seconds@sf@@YA?AVTime@1@M@Z
  0032b	83 c4 08	 add	 esp, 8
  0032e	3b f4		 cmp	 esi, esp
  00330	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00335	8b 08		 mov	 ecx, DWORD PTR [eax]
  00337	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0033a	89 8d 98 fd ff
	ff		 mov	 DWORD PTR $T17[ebp], ecx
  00340	89 95 9c fd ff
	ff		 mov	 DWORD PTR $T17[ebp+4], edx
  00346	8b 85 98 fd ff
	ff		 mov	 eax, DWORD PTR $T17[ebp]
  0034c	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR $T17[ebp+4]
  00352	89 85 90 fd ff
	ff		 mov	 DWORD PTR $T16[ebp], eax
  00358	89 8d 94 fd ff
	ff		 mov	 DWORD PTR $T16[ebp+4], ecx
  0035e	68 00 00 00 00	 push	 OFFSET $SG81868
  00363	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR $T33[ebp]
  00369	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0036e	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00372	8b 95 94 fd ff
	ff		 mov	 edx, DWORD PTR $T16[ebp+4]
  00378	52		 push	 edx
  00379	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR $T16[ebp]
  0037f	50		 push	 eax
  00380	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  00386	51		 push	 ecx
  00387	8d 95 cc fe ff
	ff		 lea	 edx, DWORD PTR $T33[ebp]
  0038d	52		 push	 edx
  0038e	8b 8d 14 fd ff
	ff		 mov	 ecx, DWORD PTR tv215[ebp]
  00394	e8 00 00 00 00	 call	 ?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation
  00399	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0039d	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR $T33[ebp]
  003a3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a8	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  003ac	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  003b2	e8 00 00 00 00	 call	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ

; 26   : 	playerAnimation->addAnimation("idle", idle, sf::seconds(1.f));

  003b7	83 ec 14	 sub	 esp, 20			; 00000014H
  003ba	8b cc		 mov	 ecx, esp
  003bc	89 a5 84 fd ff
	ff		 mov	 DWORD PTR $T14[ebp], esp
  003c2	8b f4		 mov	 esi, esp
  003c4	8d 45 98	 lea	 eax, DWORD PTR _idle$[ebp]
  003c7	50		 push	 eax
  003c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@ABV01@@Z
  003ce	3b f4		 cmp	 esi, esp
  003d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d5	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T32[ebp]
  003db	e8 00 00 00 00	 call	 ??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>
  003e0	89 85 10 fd ff
	ff		 mov	 DWORD PTR tv393[ebp], eax
  003e6	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  003ea	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ed	8b 11		 mov	 edx, DWORD PTR [ecx]
  003ef	89 95 0c fd ff
	ff		 mov	 DWORD PTR tv248[ebp], edx
  003f5	8b f4		 mov	 esi, esp
  003f7	51		 push	 ecx
  003f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00400	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00405	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  0040b	50		 push	 eax
  0040c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?seconds@sf@@YA?AVTime@1@M@Z
  00412	83 c4 08	 add	 esp, 8
  00415	3b f4		 cmp	 esi, esp
  00417	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0041c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00421	89 8d 78 fd ff
	ff		 mov	 DWORD PTR $T13[ebp], ecx
  00427	89 95 7c fd ff
	ff		 mov	 DWORD PTR $T13[ebp+4], edx
  0042d	8b 85 78 fd ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  00433	8b 8d 7c fd ff
	ff		 mov	 ecx, DWORD PTR $T13[ebp+4]
  00439	89 85 70 fd ff
	ff		 mov	 DWORD PTR $T12[ebp], eax
  0043f	89 8d 74 fd ff
	ff		 mov	 DWORD PTR $T12[ebp+4], ecx
  00445	68 00 00 00 00	 push	 OFFSET $SG81869
  0044a	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR $T31[ebp]
  00450	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00455	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00459	8b 95 74 fd ff
	ff		 mov	 edx, DWORD PTR $T12[ebp+4]
  0045f	52		 push	 edx
  00460	8b 85 70 fd ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  00466	50		 push	 eax
  00467	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T32[ebp]
  0046d	51		 push	 ecx
  0046e	8d 95 84 fe ff
	ff		 lea	 edx, DWORD PTR $T31[ebp]
  00474	52		 push	 edx
  00475	8b 8d 0c fd ff
	ff		 mov	 ecx, DWORD PTR tv248[ebp]
  0047b	e8 00 00 00 00	 call	 ?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation
  00480	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00484	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR $T31[ebp]
  0048a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0048f	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00493	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T32[ebp]
  00499	e8 00 00 00 00	 call	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ

; 27   : 	playerAnimation->addAnimation("jump", jump, sf::seconds(1.f));

  0049e	83 ec 14	 sub	 esp, 20			; 00000014H
  004a1	8b cc		 mov	 ecx, esp
  004a3	89 a5 64 fd ff
	ff		 mov	 DWORD PTR $T10[ebp], esp
  004a9	8b f4		 mov	 esi, esp
  004ab	8d 45 d0	 lea	 eax, DWORD PTR _jump$[ebp]
  004ae	50		 push	 eax
  004af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@ABV01@@Z
  004b5	3b f4		 cmp	 esi, esp
  004b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004bc	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR $T30[ebp]
  004c2	e8 00 00 00 00	 call	 ??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>
  004c7	89 85 08 fd ff
	ff		 mov	 DWORD PTR tv398[ebp], eax
  004cd	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  004d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  004d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  004d6	89 95 04 fd ff
	ff		 mov	 DWORD PTR tv281[ebp], edx
  004dc	8b f4		 mov	 esi, esp
  004de	51		 push	 ecx
  004df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  004e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ec	8d 85 68 fd ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  004f2	50		 push	 eax
  004f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?seconds@sf@@YA?AVTime@1@M@Z
  004f9	83 c4 08	 add	 esp, 8
  004fc	3b f4		 cmp	 esi, esp
  004fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00503	8b 08		 mov	 ecx, DWORD PTR [eax]
  00505	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00508	89 8d 58 fd ff
	ff		 mov	 DWORD PTR $T9[ebp], ecx
  0050e	89 95 5c fd ff
	ff		 mov	 DWORD PTR $T9[ebp+4], edx
  00514	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  0051a	8b 8d 5c fd ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp+4]
  00520	89 85 50 fd ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00526	89 8d 54 fd ff
	ff		 mov	 DWORD PTR $T8[ebp+4], ecx
  0052c	68 00 00 00 00	 push	 OFFSET $SG81870
  00531	8d 8d 3c fe ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  00537	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0053c	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  00540	8b 95 54 fd ff
	ff		 mov	 edx, DWORD PTR $T8[ebp+4]
  00546	52		 push	 edx
  00547	8b 85 50 fd ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  0054d	50		 push	 eax
  0054e	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR $T30[ebp]
  00554	51		 push	 ecx
  00555	8d 95 3c fe ff
	ff		 lea	 edx, DWORD PTR $T29[ebp]
  0055b	52		 push	 edx
  0055c	8b 8d 04 fd ff
	ff		 mov	 ecx, DWORD PTR tv281[ebp]
  00562	e8 00 00 00 00	 call	 ?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation
  00567	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  0056b	8d 8d 3c fe ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  00571	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00576	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0057a	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR $T30[ebp]
  00580	e8 00 00 00 00	 call	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ

; 28   : 	playerAnimation->addAnimation("crouch", crouch, sf::seconds(1.f));

  00585	83 ec 14	 sub	 esp, 20			; 00000014H
  00588	8b cc		 mov	 ecx, esp
  0058a	89 a5 44 fd ff
	ff		 mov	 DWORD PTR $T6[ebp], esp
  00590	8b f4		 mov	 esi, esp
  00592	8d 45 b4	 lea	 eax, DWORD PTR _crouch$[ebp]
  00595	50		 push	 eax
  00596	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0FrameAnimation@thor@@QAE@ABV01@@Z
  0059c	3b f4		 cmp	 esi, esp
  0059e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a3	8d 8d 10 fe ff
	ff		 lea	 ecx, DWORD PTR $T28[ebp]
  005a9	e8 00 00 00 00	 call	 ??$?0VFrameAnimation@thor@@$0A@@?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@VFrameAnimation@thor@@@Z ; std::function<void __cdecl(sf::Sprite &,float)>::function<void __cdecl(sf::Sprite &,float)><thor::FrameAnimation,0>
  005ae	89 85 00 fd ff
	ff		 mov	 DWORD PTR tv403[ebp], eax
  005b4	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  005b8	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  005bd	89 95 fc fc ff
	ff		 mov	 DWORD PTR tv346[ebp], edx
  005c3	8b f4		 mov	 esi, esp
  005c5	51		 push	 ecx
  005c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  005ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d3	8d 85 48 fd ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  005d9	50		 push	 eax
  005da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?seconds@sf@@YA?AVTime@1@M@Z
  005e0	83 c4 08	 add	 esp, 8
  005e3	3b f4		 cmp	 esi, esp
  005e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ec	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  005ef	89 8d 38 fd ff
	ff		 mov	 DWORD PTR $T5[ebp], ecx
  005f5	89 95 3c fd ff
	ff		 mov	 DWORD PTR $T5[ebp+4], edx
  005fb	8b 85 38 fd ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00601	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp+4]
  00607	89 85 30 fd ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0060d	89 8d 34 fd ff
	ff		 mov	 DWORD PTR $T4[ebp+4], ecx
  00613	68 00 00 00 00	 push	 OFFSET $SG81871
  00618	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR $T27[ebp]
  0061e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00623	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  00627	8b 95 34 fd ff
	ff		 mov	 edx, DWORD PTR $T4[ebp+4]
  0062d	52		 push	 edx
  0062e	8b 85 30 fd ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00634	50		 push	 eax
  00635	8d 8d 10 fe ff
	ff		 lea	 ecx, DWORD PTR $T28[ebp]
  0063b	51		 push	 ecx
  0063c	8d 95 f4 fd ff
	ff		 lea	 edx, DWORD PTR $T27[ebp]
  00642	52		 push	 edx
  00643	8b 8d fc fc ff
	ff		 mov	 ecx, DWORD PTR tv346[ebp]
  00649	e8 00 00 00 00	 call	 ?addAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$function@$$A6AXAAVSprite@sf@@M@Z@4@VTime@sf@@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::addAnimation
  0064e	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00652	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR $T27[ebp]
  00658	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0065d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00661	8d 8d 10 fe ff
	ff		 lea	 ecx, DWORD PTR $T28[ebp]
  00667	e8 00 00 00 00	 call	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ

; 29   : 	playerAnimator = new thor::Animator(*playerAnimation);

  0066c	6a 20		 push	 32			; 00000020H
  0066e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00673	83 c4 04	 add	 esp, 4
  00676	89 85 28 fd ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0067c	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  00680	83 bd 28 fd ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  00687	74 26		 je	 SHORT $LN5@generatePl
  00689	6a 20		 push	 32			; 00000020H
  0068b	8b 8d 28 fd ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00691	e8 00 00 00 00	 call	 ?__autoclassinit2@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXI@Z
  00696	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00699	8b 08		 mov	 ecx, DWORD PTR [eax]
  0069b	51		 push	 ecx
  0069c	8b 8d 28 fd ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  006a2	e8 00 00 00 00	 call	 ??0?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAE@ABV01@@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  006a7	89 85 f8 fc ff
	ff		 mov	 DWORD PTR tv363[ebp], eax
  006ad	eb 0a		 jmp	 SHORT $LN6@generatePl
$LN5@generatePl:
  006af	c7 85 f8 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv363[ebp], 0
$LN6@generatePl:
  006b9	8b 95 f8 fc ff
	ff		 mov	 edx, DWORD PTR tv363[ebp]
  006bf	89 95 2c fd ff
	ff		 mov	 DWORD PTR $T3[ebp], edx
  006c5	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  006c9	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  006cc	8b 8d 2c fd ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  006d2	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 30   : 	playerAnimator->playAnimation("idle", true);

  006d5	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  006d8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  006db	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv372[ebp], eax
  006e1	68 00 00 00 00	 push	 OFFSET $SG81873
  006e6	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  006ec	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006f1	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  006f5	6a 01		 push	 1
  006f7	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  006fd	51		 push	 ecx
  006fe	8b 8d f4 fc ff
	ff		 mov	 ecx, DWORD PTR tv372[ebp]
  00704	e8 00 00 00 00	 call	 ?playAnimation@?$Animator@VSprite@sf@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@thor@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; thor::Animator<sf::Sprite,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::playAnimation
  00709	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0070d	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  00713	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 31   : 	
; 32   : }

  00718	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0071c	8b f4		 mov	 esi, esp
  0071e	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _walkRight$[ebp]
  00724	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  0072a	3b f4		 cmp	 esi, esp
  0072c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00731	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00735	8b f4		 mov	 esi, esp
  00737	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _walkLeft$[ebp]
  0073d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  00743	3b f4		 cmp	 esi, esp
  00745	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0074a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0074e	8b f4		 mov	 esi, esp
  00750	8d 4d 98	 lea	 ecx, DWORD PTR _idle$[ebp]
  00753	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  00759	3b f4		 cmp	 esi, esp
  0075b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00760	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00764	8b f4		 mov	 esi, esp
  00766	8d 4d b4	 lea	 ecx, DWORD PTR _crouch$[ebp]
  00769	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  0076f	3b f4		 cmp	 esi, esp
  00771	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00776	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0077d	8b f4		 mov	 esi, esp
  0077f	8d 4d d0	 lea	 ecx, DWORD PTR _jump$[ebp]
  00782	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  00788	3b f4		 cmp	 esi, esp
  0078a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0078f	52		 push	 edx
  00790	8b cd		 mov	 ecx, ebp
  00792	50		 push	 eax
  00793	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN37@generatePl
  00799	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0079e	58		 pop	 eax
  0079f	5a		 pop	 edx
  007a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  007a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  007aa	59		 pop	 ecx
  007ab	5f		 pop	 edi
  007ac	5e		 pop	 esi
  007ad	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007b0	33 cd		 xor	 ecx, ebp
  007b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007b7	8b e5		 mov	 esp, ebp
  007b9	5d		 pop	 ebp
  007ba	8b e3		 mov	 esp, ebx
  007bc	5b		 pop	 ebx
  007bd	c3		 ret	 0
  007be	66 90		 npad	 2
$LN37@generatePl:
  007c0	05 00 00 00	 DD	 5
  007c4	00 00 00 00	 DD	 $LN36@generatePl
$LN36@generatePl:
  007c8	d0 ff ff ff	 DD	 -48			; ffffffd0H
  007cc	14 00 00 00	 DD	 20			; 00000014H
  007d0	00 00 00 00	 DD	 $LN30@generatePl
  007d4	b4 ff ff ff	 DD	 -76			; ffffffb4H
  007d8	14 00 00 00	 DD	 20			; 00000014H
  007dc	00 00 00 00	 DD	 $LN31@generatePl
  007e0	98 ff ff ff	 DD	 -104			; ffffff98H
  007e4	14 00 00 00	 DD	 20			; 00000014H
  007e8	00 00 00 00	 DD	 $LN32@generatePl
  007ec	7c ff ff ff	 DD	 -132			; ffffff7cH
  007f0	14 00 00 00	 DD	 20			; 00000014H
  007f4	00 00 00 00	 DD	 $LN33@generatePl
  007f8	60 ff ff ff	 DD	 -160			; ffffff60H
  007fc	14 00 00 00	 DD	 20			; 00000014H
  00800	00 00 00 00	 DD	 $LN34@generatePl
$LN34@generatePl:
  00804	77		 DB	 119			; 00000077H
  00805	61		 DB	 97			; 00000061H
  00806	6c		 DB	 108			; 0000006cH
  00807	6b		 DB	 107			; 0000006bH
  00808	52		 DB	 82			; 00000052H
  00809	69		 DB	 105			; 00000069H
  0080a	67		 DB	 103			; 00000067H
  0080b	68		 DB	 104			; 00000068H
  0080c	74		 DB	 116			; 00000074H
  0080d	00		 DB	 0
$LN33@generatePl:
  0080e	77		 DB	 119			; 00000077H
  0080f	61		 DB	 97			; 00000061H
  00810	6c		 DB	 108			; 0000006cH
  00811	6b		 DB	 107			; 0000006bH
  00812	4c		 DB	 76			; 0000004cH
  00813	65		 DB	 101			; 00000065H
  00814	66		 DB	 102			; 00000066H
  00815	74		 DB	 116			; 00000074H
  00816	00		 DB	 0
$LN32@generatePl:
  00817	69		 DB	 105			; 00000069H
  00818	64		 DB	 100			; 00000064H
  00819	6c		 DB	 108			; 0000006cH
  0081a	65		 DB	 101			; 00000065H
  0081b	00		 DB	 0
$LN31@generatePl:
  0081c	63		 DB	 99			; 00000063H
  0081d	72		 DB	 114			; 00000072H
  0081e	6f		 DB	 111			; 0000006fH
  0081f	75		 DB	 117			; 00000075H
  00820	63		 DB	 99			; 00000063H
  00821	68		 DB	 104			; 00000068H
  00822	00		 DB	 0
$LN30@generatePl:
  00823	6a		 DB	 106			; 0000006aH
  00824	75		 DB	 117			; 00000075H
  00825	6d		 DB	 109			; 0000006dH
  00826	70		 DB	 112			; 00000070H
  00827	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 85 d0 fd ff
	ff		 mov	 eax, DWORD PTR $T24[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$1:
  00012	8b f4		 mov	 esi, esp
  00014	8d 4d d0	 lea	 ecx, DWORD PTR _jump$[ebp]
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  0001d	3b f4		 cmp	 esi, esp
  0001f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$2:
  00024	8b f4		 mov	 esi, esp
  00026	8d 4d b4	 lea	 ecx, DWORD PTR _crouch$[ebp]
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  0002f	3b f4		 cmp	 esi, esp
  00031	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$3:
  00036	8b f4		 mov	 esi, esp
  00038	8d 4d 98	 lea	 ecx, DWORD PTR _idle$[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  00041	3b f4		 cmp	 esi, esp
  00043	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$4:
  00048	8b f4		 mov	 esi, esp
  0004a	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _walkLeft$[ebp]
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  00056	3b f4		 cmp	 esi, esp
  00058	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$5:
  0005d	8b f4		 mov	 esi, esp
  0005f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _walkRight$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1FrameAnimation@thor@@QAE@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$7:
  00072	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR $T36[ebp]
  00078	e9 00 00 00 00	 jmp	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$8:
  0007d	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T35[ebp]
  00083	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$10:
  00088	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  0008e	e9 00 00 00 00	 jmp	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$11:
  00093	8d 8d cc fe ff
	ff		 lea	 ecx, DWORD PTR $T33[ebp]
  00099	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$13:
  0009e	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR $T32[ebp]
  000a4	e9 00 00 00 00	 jmp	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$14:
  000a9	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR $T31[ebp]
  000af	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$16:
  000b4	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR $T30[ebp]
  000ba	e9 00 00 00 00	 jmp	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$17:
  000bf	8d 8d 3c fe ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  000c5	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$19:
  000ca	8d 8d 10 fe ff
	ff		 lea	 ecx, DWORD PTR $T28[ebp]
  000d0	e9 00 00 00 00	 jmp	 ??1?$function@$$A6AXAAVSprite@sf@@M@Z@std@@QAE@XZ
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$20:
  000d5	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR $T27[ebp]
  000db	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$21:
  000e0	6a 20		 push	 32			; 00000020H
  000e2	8b 85 28 fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ee	83 c4 08	 add	 esp, 8
  000f1	c3		 ret	 0
__unwindfunclet$?generatePlayerAnimation@Animator@@QAEXXZ$22:
  000f2	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  000f8	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	cc		 int	 3
  000fe	cc		 int	 3
  000ff	cc		 int	 3
  00100	cc		 int	 3
  00101	cc		 int	 3
__ehhandler$?generatePlayerAnimation@Animator@@QAEXXZ:
  00102	90		 npad	 1
  00103	90		 npad	 1
  00104	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00108	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0010b	8b 8a f4 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-780]
  00111	33 c8		 xor	 ecx, eax
  00113	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00118	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0011b	33 c8		 xor	 ecx, eax
  0011d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00122	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?generatePlayerAnimation@Animator@@QAEXXZ
  00127	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?generatePlayerAnimation@Animator@@QAEXXZ ENDP		; Animator::generatePlayerAnimation
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; _this$ = ecx

; 126  :     _NODISCARD constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 127  :         return _Left < _Right;

  00021	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
  0002e	83 c4 08	 add	 esp, 8
  00031	88 45 fb	 mov	 BYTE PTR $T1[ebp], al
  00034	6a 00		 push	 0
  00036	0f b6 55 fb	 movzx	 edx, BYTE PTR $T1[ebp]
  0003a	52		 push	 edx
  0003b	e8 00 00 00 00	 call	 ??Mstd@@YA_NUstrong_ordering@0@$$T@Z ; std::operator<
  00040	83 c4 08	 add	 esp, 8

; 128  :     }

  00043	83 c4 08	 add	 esp, 8
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 44
_this$ = -4						; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 173  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET __D96D2425_xloctime
  00021	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 174  :         _Cvt = _Lobj._Getcvt();

  00026	8b f4		 mov	 esi, esp
  00028	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0003f	83 c7 18	 add	 edi, 24			; 00000018H
  00042	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00047	8b f0		 mov	 esi, eax
  00049	f3 a5		 rep movsd

; 175  : 
; 176  :         if (is_same_v<_Elem2, wchar_t>) {

  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	85 c9		 test	 ecx, ecx
  00052	74 57		 je	 SHORT $LN2@Getvals

; 177  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  00054	8b f4		 mov	 esi, esp
  00056	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00072	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 178  :             _Months =

  00075	8b f4		 mov	 esi, esp
  00077	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0008d	83 c4 04	 add	 esp, 4
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 179  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 180  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  00096	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0009b	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  000a0	83 c4 04	 add	 esp, 4
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 181  :         } else {

  000a9	eb 70		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 182  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	83 c0 18	 add	 eax, 24			; 00000018H
  000b1	50		 push	 eax
  000b2	6a 00		 push	 0
  000b4	8b f4		 mov	 esi, esp
  000b6	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 183  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  000d5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	83 c2 18	 add	 edx, 24			; 00000018H
  000db	52		 push	 edx
  000dc	6a 00		 push	 0
  000de	8b f4		 mov	 esi, esp
  000e0	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 184  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  000ff	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00102	83 c2 18	 add	 edx, 24			; 00000018H
  00105	52		 push	 edx
  00106	6a 00		 push	 0
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0010d	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH
  00115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 185  :         }
; 186  :     }

  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	83 c4 30	 add	 esp, 48			; 00000030H
  00120	3b ec		 cmp	 ebp, esp
  00122	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 44
_this$ = -4						; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 173  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET __D96D2425_xloctime
  00021	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 174  :         _Cvt = _Lobj._Getcvt();

  00026	8b f4		 mov	 esi, esp
  00028	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0003f	83 c7 18	 add	 edi, 24			; 00000018H
  00042	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00047	8b f0		 mov	 esi, eax
  00049	f3 a5		 rep movsd

; 175  : 
; 176  :         if (is_same_v<_Elem2, wchar_t>) {

  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	85 c9		 test	 ecx, ecx
  00052	74 57		 je	 SHORT $LN2@Getvals

; 177  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  00054	8b f4		 mov	 esi, esp
  00056	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00072	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 178  :             _Months =

  00075	8b f4		 mov	 esi, esp
  00077	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0008d	83 c4 04	 add	 esp, 4
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 179  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 180  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  00096	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0009b	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  000a0	83 c4 04	 add	 esp, 4
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 181  :         } else {

  000a9	eb 70		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 182  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	83 c0 18	 add	 eax, 24			; 00000018H
  000b1	50		 push	 eax
  000b2	6a 00		 push	 0
  000b4	8b f4		 mov	 esi, esp
  000b6	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 183  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  000d5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	83 c2 18	 add	 edx, 24			; 00000018H
  000db	52		 push	 edx
  000dc	6a 00		 push	 0
  000de	8b f4		 mov	 esi, esp
  000e0	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 184  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  000ff	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00102	83 c2 18	 add	 edx, 24			; 00000018H
  00105	52		 push	 edx
  00106	6a 00		 push	 0
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0010d	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH
  00115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 185  :         }
; 186  :     }

  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	83 c4 30	 add	 esp, 48			; 00000030H
  00120	3b ec		 cmp	 ebp, esp
  00122	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 522  : _Elem* __CRTDECL _Maklocstr(const char* _Ptr, _Elem*, const _Locinfo::_Cvtvec&) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET __D23FE460_xlocale
  00021	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 523  :     // convert C string to _Elem sequence using _Cvtvec
; 524  :     size_t _Count = _CSTD strlen(_Ptr) + 1;

  00026	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 _strlen
  0002f	83 c4 04	 add	 esp, 4
  00032	83 c0 01	 add	 eax, 1
  00035	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 525  : 
; 526  :     _Elem* _Ptrdest = static_cast<_Elem*>(_calloc_dbg(_Count, sizeof(_Elem), _CRT_BLOCK, __FILE__, __LINE__));

  00038	8b f4		 mov	 esi, esp
  0003a	68 0e 02 00 00	 push	 526			; 0000020eH
  0003f	68 00 00 00 00	 push	 OFFSET $SG94399
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	51		 push	 ecx
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00052	83 c4 14	 add	 esp, 20			; 00000014H
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 527  : 
; 528  :     if (!_Ptrdest) {

  0005f	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00063	75 05		 jne	 SHORT $LN5@Maklocstr

; 529  :         _Xbad_alloc();

  00065	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 530  :     }
; 531  : 
; 532  :     for (_Elem* _Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr) {

  0006a	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  0006d	89 55 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], edx
  00070	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  00072	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00075	83 e8 01	 sub	 eax, 1
  00078	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  0007e	83 c1 01	 add	 ecx, 1
  00081	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  00084	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00087	83 c2 01	 add	 edx, 1
  0008a	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  0008d	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00091	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 533  :         *_Ptrnext = static_cast<_Elem>(static_cast<unsigned char>(*_Ptr));

  00093	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00096	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00099	8a 11		 mov	 dl, BYTE PTR [ecx]
  0009b	88 10		 mov	 BYTE PTR [eax], dl

; 534  :     }

  0009d	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 535  : 
; 536  :     return _Ptrdest;

  0009f	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 537  : }

  000a2	5e		 pop	 esi
  000a3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a6	3b ec		 cmp	 ebp, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 90   : inline wchar_t* _Maklocwcs(const wchar_t* _Ptr) { // copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	b9 00 00 00 00	 mov	 ecx, OFFSET __4CB88277_xlocnum
  0001a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 91   :     const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  0001f	8b f4		 mov	 esi, esp
  00021	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00024	50		 push	 eax
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	83 c0 01	 add	 eax, 1
  00038	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 92   : 
; 93   :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Count, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  0003b	8b f4		 mov	 esi, esp
  0003d	6a 5d		 push	 93			; 0000005dH
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@OGMNKBMN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00044	6a 02		 push	 2
  00046	6a 02		 push	 2
  00048	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004b	51		 push	 ecx
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00052	83 c4 14	 add	 esp, 20			; 00000014H
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 94   : 
; 95   :     if (!_Ptrdest) {

  0005f	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00063	75 05		 jne	 SHORT $LN2@Maklocwcs

; 96   :         _Xbad_alloc();

  00065	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 97   :     }
; 98   : 
; 99   :     _CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  0006a	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  0006d	52		 push	 edx
  0006e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00071	50		 push	 eax
  00072	8b 4d f8	 mov	 ecx, DWORD PTR __Ptrdest$[ebp]
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 _wmemcpy
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 100  :     return _Ptrdest;

  0007e	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 101  : }

  00081	5e		 pop	 esi
  00082	83 c4 08	 add	 esp, 8
  00085	3b ec		 cmp	 ebp, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -72						; size = 8
__Ptrnext$ = -60					; size = 4
__Ptrdest$ = -56					; size = 4
__Mbst1$ = -48						; size = 8
__Wc$ = -32						; size = 2
__Bytes$ = -24						; size = 4
__Ptr1$ = -20						; size = 4
__Wchars$ = -16						; size = 4
__Count1$ = -12						; size = 4
__Count$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 540  : inline wchar_t* __CRTDECL _Maklocstr(const char* _Ptr, wchar_t*, const _Locinfo::_Cvtvec& _Cvt) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0000b	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	b9 00 00 00 00	 mov	 ecx, OFFSET __D23FE460_xlocale
  00026	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 541  :     // convert C string to wchar_t sequence using _Cvtvec
; 542  :     size_t _Count;
; 543  :     size_t _Count1;
; 544  :     size_t _Wchars;
; 545  :     const char* _Ptr1;
; 546  :     int _Bytes;
; 547  :     wchar_t _Wc;
; 548  :     mbstate_t _Mbst1 = {};

  0002b	33 c0		 xor	 eax, eax
  0002d	89 45 d0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  00030	89 45 d4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 549  : 
; 550  :     _Count1 = _CSTD strlen(_Ptr) + 1;

  00033	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 _strlen
  0003c	83 c4 04	 add	 esp, 4
  0003f	83 c0 01	 add	 eax, 1
  00042	89 45 f4	 mov	 DWORD PTR __Count1$[ebp], eax

; 551  :     for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count; _Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars) {

  00045	8b 55 f4	 mov	 edx, DWORD PTR __Count1$[ebp]
  00048	89 55 f8	 mov	 DWORD PTR __Count$[ebp], edx
  0004b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00052	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00055	89 45 ec	 mov	 DWORD PTR __Ptr1$[ebp], eax
  00058	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR __Count$[ebp]
  0005d	2b 4d e8	 sub	 ecx, DWORD PTR __Bytes$[ebp]
  00060	89 4d f8	 mov	 DWORD PTR __Count$[ebp], ecx
  00063	8b 55 ec	 mov	 edx, DWORD PTR __Ptr1$[ebp]
  00066	03 55 e8	 add	 edx, DWORD PTR __Bytes$[ebp]
  00069	89 55 ec	 mov	 DWORD PTR __Ptr1$[ebp], edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0006f	83 c0 01	 add	 eax, 1
  00072	89 45 f0	 mov	 DWORD PTR __Wchars$[ebp], eax
$LN4@Maklocstr:
  00075	83 7d f8 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00079	76 29		 jbe	 SHORT $LN3@Maklocstr

; 552  :         if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0) {

  0007b	8b 4d 10	 mov	 ecx, DWORD PTR __Cvt$[ebp]
  0007e	51		 push	 ecx
  0007f	8d 55 d0	 lea	 edx, DWORD PTR __Mbst1$[ebp]
  00082	52		 push	 edx
  00083	8b 45 f8	 mov	 eax, DWORD PTR __Count$[ebp]
  00086	50		 push	 eax
  00087	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  0008a	51		 push	 ecx
  0008b	8d 55 e0	 lea	 edx, DWORD PTR __Wc$[ebp]
  0008e	52		 push	 edx
  0008f	e8 00 00 00 00	 call	 __Mbrtowc
  00094	83 c4 14	 add	 esp, 20			; 00000014H
  00097	89 45 e8	 mov	 DWORD PTR __Bytes$[ebp], eax
  0009a	83 7d e8 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0009e	7f 02		 jg	 SHORT $LN8@Maklocstr

; 553  :             break;

  000a0	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 554  :         }
; 555  :     }

  000a2	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 556  : 
; 557  :     ++_Wchars; // count terminating nul

  000a4	8b 45 f0	 mov	 eax, DWORD PTR __Wchars$[ebp]
  000a7	83 c0 01	 add	 eax, 1
  000aa	89 45 f0	 mov	 DWORD PTR __Wchars$[ebp], eax

; 558  : 
; 559  :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Wchars, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  000ad	8b f4		 mov	 esi, esp
  000af	68 2f 02 00 00	 push	 559			; 0000022fH
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@GFIAKDGM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000b9	6a 02		 push	 2
  000bb	6a 02		 push	 2
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR __Wchars$[ebp]
  000c0	51		 push	 ecx
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000c7	83 c4 14	 add	 esp, 20			; 00000014H
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d1	89 45 c8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 560  : 
; 561  :     if (!_Ptrdest) {

  000d4	83 7d c8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000d8	75 05		 jne	 SHORT $LN9@Maklocstr

; 562  :         _Xbad_alloc();

  000da	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 563  :     }
; 564  : 
; 565  :     wchar_t* _Ptrnext = _Ptrdest;

  000df	8b 55 c8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  000e2	89 55 c4	 mov	 DWORD PTR __Ptrnext$[ebp], edx

; 566  :     mbstate_t _Mbst2  = {};

  000e5	33 c0		 xor	 eax, eax
  000e7	89 45 b8	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000ea	89 45 bc	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 567  : 
; 568  :     for (; 0 < _Wchars; _Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext) {

  000ed	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:
  000ef	8b 4d f8	 mov	 ecx, DWORD PTR __Count$[ebp]
  000f2	2b 4d e8	 sub	 ecx, DWORD PTR __Bytes$[ebp]
  000f5	89 4d f8	 mov	 DWORD PTR __Count$[ebp], ecx
  000f8	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000fb	03 55 e8	 add	 edx, DWORD PTR __Bytes$[ebp]
  000fe	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00101	8b 45 f0	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00104	83 e8 01	 sub	 eax, 1
  00107	89 45 f0	 mov	 DWORD PTR __Wchars$[ebp], eax
  0010a	8b 4d c4	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0010d	83 c1 02	 add	 ecx, 2
  00110	89 4d c4	 mov	 DWORD PTR __Ptrnext$[ebp], ecx
$LN7@Maklocstr:
  00113	83 7d f0 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  00117	76 29		 jbe	 SHORT $LN6@Maklocstr

; 569  :         if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0) {

  00119	8b 55 10	 mov	 edx, DWORD PTR __Cvt$[ebp]
  0011c	52		 push	 edx
  0011d	8d 45 b8	 lea	 eax, DWORD PTR __Mbst2$[ebp]
  00120	50		 push	 eax
  00121	8b 4d f4	 mov	 ecx, DWORD PTR __Count1$[ebp]
  00124	51		 push	 ecx
  00125	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00128	52		 push	 edx
  00129	8b 45 c4	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 __Mbrtowc
  00132	83 c4 14	 add	 esp, 20			; 00000014H
  00135	89 45 e8	 mov	 DWORD PTR __Bytes$[ebp], eax
  00138	83 7d e8 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0013c	7f 02		 jg	 SHORT $LN10@Maklocstr

; 570  :             break;

  0013e	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 571  :         }
; 572  :     }

  00140	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:

; 573  : 
; 574  :     *_Ptrnext = L'\0';

  00142	33 c9		 xor	 ecx, ecx
  00144	8b 55 c4	 mov	 edx, DWORD PTR __Ptrnext$[ebp]
  00147	66 89 0a	 mov	 WORD PTR [edx], cx

; 575  : 
; 576  :     return _Ptrdest;

  0014a	8b 45 c8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 577  : }

  0014d	52		 push	 edx
  0014e	8b cd		 mov	 ecx, ebp
  00150	50		 push	 eax
  00151	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@Maklocstr
  00157	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0015c	58		 pop	 eax
  0015d	5a		 pop	 edx
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00163	33 cd		 xor	 ecx, ebp
  00165	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016a	83 c4 4c	 add	 esp, 76			; 0000004cH
  0016d	3b ec		 cmp	 ebp, esp
  0016f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c3		 ret	 0
$LN16@Maklocstr:
  00178	03 00 00 00	 DD	 3
  0017c	00 00 00 00	 DD	 $LN15@Maklocstr
$LN15@Maklocstr:
  00180	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00184	02 00 00 00	 DD	 2
  00188	00 00 00 00	 DD	 $LN12@Maklocstr
  0018c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00190	08 00 00 00	 DD	 8
  00194	00 00 00 00	 DD	 $LN13@Maklocstr
  00198	b8 ff ff ff	 DD	 -72			; ffffffb8H
  0019c	08 00 00 00	 DD	 8
  001a0	00 00 00 00	 DD	 $LN14@Maklocstr
$LN14@Maklocstr:
  001a4	5f		 DB	 95			; 0000005fH
  001a5	4d		 DB	 77			; 0000004dH
  001a6	62		 DB	 98			; 00000062H
  001a7	73		 DB	 115			; 00000073H
  001a8	74		 DB	 116			; 00000074H
  001a9	32		 DB	 50			; 00000032H
  001aa	00		 DB	 0
$LN13@Maklocstr:
  001ab	5f		 DB	 95			; 0000005fH
  001ac	4d		 DB	 77			; 0000004dH
  001ad	62		 DB	 98			; 00000062H
  001ae	73		 DB	 115			; 00000073H
  001af	74		 DB	 116			; 00000074H
  001b0	31		 DB	 49			; 00000031H
  001b1	00		 DB	 0
$LN12@Maklocstr:
  001b2	5f		 DB	 95			; 0000005fH
  001b3	57		 DB	 87			; 00000057H
  001b4	63		 DB	 99			; 00000063H
  001b5	00		 DB	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?__autoclassinit2@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEXI@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00011	50		 push	 eax
  00012	6a 00		 push	 0
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 _memset
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?__autoclassinit2@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEXI@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Compat, COMDAT
; _this$ = ecx

; 185  :     _CONSTEXPR20_CONTAINER void _Compat(const _Vector_const_iterator& _Right) const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  00014	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
$LN4@Compat:

; 186  :         // test for compatible iterator pair
; 187  : #if _ITERATOR_DEBUG_LEVEL == 0
; 188  :         (void) _Right;
; 189  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 190  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector iterators incompatible");

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00021	8b f0		 mov	 esi, eax
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002b	3b f0		 cmp	 esi, eax
  0002d	75 02		 jne	 SHORT $LN7@Compat
  0002f	eb 5c		 jmp	 SHORT $LN2@Compat
$LN7@Compat:
  00031	8b f4		 mov	 esi, esp
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0003d	6a 00		 push	 0
  0003f	68 be 00 00 00	 push	 190			; 000000beH
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00049	6a 02		 push	 2
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00051	83 c4 18	 add	 esp, 24			; 00000018H
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	83 f8 01	 cmp	 eax, 1
  0005e	75 01		 jne	 SHORT $LN11@Compat
  00060	cc		 int	 3
$LN11@Compat:
  00061	8b f4		 mov	 esi, esp
  00063	6a 00		 push	 0
  00065	68 be 00 00 00	 push	 190			; 000000beH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_1OM@HCLAOKIM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0007f	83 c4 14	 add	 esp, 20			; 00000014H
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	33 c9		 xor	 ecx, ecx
  0008b	75 a4		 jne	 SHORT $LN7@Compat
$LN2@Compat:
  0008d	33 d2		 xor	 edx, edx
  0008f	75 88		 jne	 SHORT $LN4@Compat

; 191  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 192  :     }

  00091	5e		 pop	 esi
  00092	83 c4 04	 add	 esp, 4
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 04 00	 ret	 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator==, COMDAT
; _this$ = ecx

; 152  :     _NODISCARD _CONSTEXPR20_CONTAINER bool operator==(const _Vector_const_iterator& _Right) const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 153  :         _Compat(_Right);

  00021	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Compat

; 154  :         return _Ptr == _Right._Ptr;

  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00033	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00036	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00039	75 09		 jne	 SHORT $LN3@operator
  0003b	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00042	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00044	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0004b	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 155  :     }

  0004e	83 c4 08	 add	 esp, 8
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator++, COMDAT
; _this$ = ecx

; 71   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator& operator++() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 72   : #if _ITERATOR_DEBUG_LEVEL != 0
; 73   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002a	89 45 f8	 mov	 DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 74   :         _STL_VERIFY(_Ptr, "can't increment value-initialized vector iterator");

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00034	74 02		 je	 SHORT $LN7@operator
  00036	eb 56		 jmp	 SHORT $LN2@operator
$LN7@operator:
  00038	8b f4		 mov	 esi, esp
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00044	6a 00		 push	 0
  00046	6a 4a		 push	 74			; 0000004aH
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0004d	6a 02		 push	 2
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00055	83 c4 18	 add	 esp, 24			; 00000018H
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 01		 jne	 SHORT $LN19@operator
  00064	cc		 int	 3
$LN19@operator:
  00065	8b f4		 mov	 esi, esp
  00067	6a 00		 push	 0
  00069	6a 4a		 push	 74			; 0000004aH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_1PE@OKLODLBI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00080	83 c4 14	 add	 esp, 20			; 00000014H
  00083	3b f4		 cmp	 esi, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	33 d2		 xor	 edx, edx
  0008c	75 aa		 jne	 SHORT $LN7@operator
$LN2@operator:
  0008e	33 c0		 xor	 eax, eax
  00090	75 9b		 jne	 SHORT $LN4@operator
$LN10@operator:

; 75   :         _STL_VERIFY(_Ptr < _Mycont->_Mylast, "can't increment vector iterator past end");

  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 55 f8	 mov	 edx, DWORD PTR __Mycont$[ebp]
  00098	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0009b	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0009e	73 02		 jae	 SHORT $LN13@operator
  000a0	eb 56		 jmp	 SHORT $LN8@operator
$LN13@operator:
  000a2	8b f4		 mov	 esi, esp
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000ae	6a 00		 push	 0
  000b0	6a 4b		 push	 75			; 0000004bH
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000b7	6a 02		 push	 2
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000bf	83 c4 18	 add	 esp, 24			; 00000018H
  000c2	3b f4		 cmp	 esi, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c9	83 f8 01	 cmp	 eax, 1
  000cc	75 01		 jne	 SHORT $LN20@operator
  000ce	cc		 int	 3
$LN20@operator:
  000cf	8b f4		 mov	 esi, esp
  000d1	6a 00		 push	 0
  000d3	6a 4b		 push	 75			; 0000004bH
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_1PE@OKLODLBI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000ea	83 c4 14	 add	 esp, 20			; 00000014H
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	33 d2		 xor	 edx, edx
  000f6	75 aa		 jne	 SHORT $LN13@operator
$LN8@operator:
  000f8	33 c0		 xor	 eax, eax
  000fa	75 96		 jne	 SHORT $LN10@operator

; 76   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 77   : 
; 78   :         ++_Ptr;

  000fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00102	83 c2 20	 add	 edx, 32			; 00000020H
  00105	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00108	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 79   :         return *this;

  0010b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 80   :     }

  0010e	5e		 pop	 esi
  0010f	83 c4 08	 add	 esp, 8
  00112	3b ec		 cmp	 ebp, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEABUFrame@detail@thor@@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEABUFrame@detail@thor@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator*, COMDAT
; _this$ = ecx

; 49   :     _NODISCARD _CONSTEXPR20_CONTAINER reference operator*() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 50   : #if _ITERATOR_DEBUG_LEVEL != 0
; 51   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002a	89 45 f8	 mov	 DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 52   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00034	74 02		 je	 SHORT $LN7@operator
  00036	eb 56		 jmp	 SHORT $LN2@operator
$LN7@operator:
  00038	8b f4		 mov	 esi, esp
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00044	6a 00		 push	 0
  00046	6a 34		 push	 52			; 00000034H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0004d	6a 02		 push	 2
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00055	83 c4 18	 add	 esp, 24			; 00000018H
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 01		 jne	 SHORT $LN19@operator
  00064	cc		 int	 3
$LN19@operator:
  00065	8b f4		 mov	 esi, esp
  00067	6a 00		 push	 0
  00069	6a 34		 push	 52			; 00000034H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_1PC@NJLMOKFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00080	83 c4 14	 add	 esp, 20			; 00000014H
  00083	3b f4		 cmp	 esi, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	33 d2		 xor	 edx, edx
  0008c	75 aa		 jne	 SHORT $LN7@operator
$LN2@operator:
  0008e	33 c0		 xor	 eax, eax
  00090	75 9b		 jne	 SHORT $LN4@operator
$LN10@operator:

; 53   :         _STL_VERIFY(

  00092	8b 4d f8	 mov	 ecx, DWORD PTR __Mycont$[ebp]
  00095	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00098	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0009b	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0009e	77 10		 ja	 SHORT $LN13@operator
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Mycont$[ebp]
  000a6	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000a9	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  000ac	73 02		 jae	 SHORT $LN13@operator
  000ae	eb 56		 jmp	 SHORT $LN8@operator
$LN13@operator:
  000b0	8b f4		 mov	 esi, esp
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000bc	6a 00		 push	 0
  000be	6a 36		 push	 54			; 00000036H
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@KMHDIFOI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000c5	6a 02		 push	 2
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000cd	83 c4 18	 add	 esp, 24			; 00000018H
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	83 f8 01	 cmp	 eax, 1
  000da	75 01		 jne	 SHORT $LN20@operator
  000dc	cc		 int	 3
$LN20@operator:
  000dd	8b f4		 mov	 esi, esp
  000df	6a 00		 push	 0
  000e1	6a 36		 push	 54			; 00000036H
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@NOHEJINP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_1PC@NJLMOKFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000ed	68 00 00 00 00	 push	 OFFSET ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000f8	83 c4 14	 add	 esp, 20			; 00000014H
  000fb	3b f4		 cmp	 esi, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	33 d2		 xor	 edx, edx
  00104	75 aa		 jne	 SHORT $LN13@operator
$LN8@operator:
  00106	33 c0		 xor	 eax, eax
  00108	75 88		 jne	 SHORT $LN10@operator

; 54   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 55   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 56   : 
; 57   :         return *_Ptr;

  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 58   :     }

  00110	5e		 pop	 esi
  00111	83 c4 08	 add	 esp, 8
  00114	3b ec		 cmp	 ebp, esp
  00116	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QBEABUFrame@detail@thor@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@PAUFrame@detail@thor@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@PAUFrame@detail@thor@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >, COMDAT
; _this$ = ecx

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00026	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 43   :         this->_Adopt(_Pvector);

  00029	8b 55 0c	 mov	 edx, DWORD PTR __Pvector$[ebp]
  0002c	52		 push	 edx
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 44   :     }

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@PAUFrame@detail@thor@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?empty@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -12						; size = 4
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE_NXZ PROC ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::empty, COMDAT
; _this$ = ecx

; 1542 :     _NODISCARD _CONSTEXPR20_CONTAINER bool empty() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1543 :         auto& _My_data = _Mypair._Myval2;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  0002e	8b 4d f8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  00031	8b 55 f8	 mov	 edx, DWORD PTR __My_data$[ebp]
  00034	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00037	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  0003a	75 09		 jne	 SHORT $LN3@empty
  0003c	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00043	eb 07		 jmp	 SHORT $LN4@empty
$LN3@empty:
  00045	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@empty:
  0004c	8a 45 f4	 mov	 al, BYTE PTR tv69[ebp]

; 1545 :     }

  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?empty@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE_NXZ ENDP ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?end@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv78 = -16						; size = 4
tv80 = -12						; size = 4
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ PROC ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::end, COMDAT
; _this$ = ecx

; 1489 :     _NODISCARD _CONSTEXPR20_CONTAINER const_iterator end() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  0001f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1490 :         auto& _My_data = _Mypair._Myval2;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1491 :         return const_iterator(_My_data._Mylast, _STD addressof(_My_data));

  0002a	8b 4d f8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@0@ABV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > const >
  00033	83 c4 04	 add	 esp, 4
  00036	89 45 f4	 mov	 DWORD PTR tv80[ebp], eax
  00039	8b 55 f8	 mov	 edx, DWORD PTR __My_data$[ebp]
  0003c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003f	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00042	8b 4d f4	 mov	 ecx, DWORD PTR tv80[ebp]
  00045	51		 push	 ecx
  00046	8b 55 f0	 mov	 edx, DWORD PTR tv78[ebp]
  00049	52		 push	 edx
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@PAUFrame@detail@thor@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >
  00052	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1492 :     }

  00055	83 c4 10	 add	 esp, 16			; 00000010H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?end@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ ENDP ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?begin@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv78 = -16						; size = 4
tv80 = -12						; size = 4
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ PROC ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::begin, COMDAT
; _this$ = ecx

; 1479 :     _NODISCARD _CONSTEXPR20_CONTAINER const_iterator begin() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001a	b9 00 00 00 00	 mov	 ecx, OFFSET __324884E2_vector
  0001f	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1480 :         auto& _My_data = _Mypair._Myval2;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1481 :         return const_iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0002a	8b 4d f8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@0@ABV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > const >
  00033	83 c4 04	 add	 esp, 4
  00036	89 45 f4	 mov	 DWORD PTR tv80[ebp], eax
  00039	8b 55 f8	 mov	 edx, DWORD PTR __My_data$[ebp]
  0003c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003f	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00042	8b 4d f4	 mov	 ecx, DWORD PTR tv80[ebp]
  00045	51		 push	 ecx
  00046	8b 55 f0	 mov	 edx, DWORD PTR tv78[ebp]
  00049	52		 push	 edx
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@std@@QAE@PAUFrame@detail@thor@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<thor::detail::Frame> > >
  00052	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1482 :     }

  00055	83 c4 10	 add	 esp, 16			; 00000010H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?begin@?$vector@UFrame@detail@thor@@V?$allocator@UFrame@detail@thor@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFrame@detail@thor@@@std@@@std@@@2@XZ ENDP ; std::vector<thor::detail::Frame,std::allocator<thor::detail::Frame> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\vcpkg_installed\x86-windows\x86-windows\include\SFML\Graphics\Rect.inl
;	COMDAT ??0?$Rect@H@sf@@QAE@HHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rectLeft$ = 8						; size = 4
_rectTop$ = 12						; size = 4
_rectWidth$ = 16					; size = 4
_rectHeight$ = 20					; size = 4
??0?$Rect@H@sf@@QAE@HHHH@Z PROC				; sf::Rect<int>::Rect<int>, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __6AE60262_Rect@inl
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 41   : left  (rectLeft),

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _rectLeft$[ebp]
  0001e	89 08		 mov	 DWORD PTR [eax], ecx

; 42   : top   (rectTop),

  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 45 0c	 mov	 eax, DWORD PTR _rectTop$[ebp]
  00026	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 43   : width (rectWidth),

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 10	 mov	 edx, DWORD PTR _rectWidth$[ebp]
  0002f	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 44   : height(rectHeight)

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 4d 14	 mov	 ecx, DWORD PTR _rectHeight$[ebp]
  00038	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 46   : 
; 47   : }

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	83 c4 04	 add	 esp, 4
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 10 00	 ret	 16			; 00000010H
??0?$Rect@H@sf@@QAE@HHHH@Z ENDP				; sf::Rect<int>::Rect<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1401 :     constexpr const _Ty1& _Get_first() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1402 :         return *this;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1403 :     }

  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1397 :     constexpr _Ty1& _Get_first() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1398 :         return *this;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1399 :     }

  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx

; 4654 :     _CONSTEXPR20_CONTAINER const _Alty& _Getal() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4655 :         return _Mypair._Get_first();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4656 :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx

; 4650 :     _CONSTEXPR20_CONTAINER _Alty& _Getal() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4651 :         return _Mypair._Get_first();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4652 :     }

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
tv79 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx

; 4646 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(basic_string& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4647 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR tv79[ebp], eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4648 :     }

  00033	83 c4 08	 add	 esp, 8
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -25						; size = 1
__Al$3 = -24						; size = 4
__Ptr$4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 4616 :     _CONSTEXPR20_CONTAINER void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00039	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0003e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4617 :         _Mypair._Myval2._Orphan_all();

  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00053	0f b6 c0	 movzx	 eax, al
  00056	85 c0		 test	 eax, eax
  00058	74 39		 je	 SHORT $LN2@Tidy_deall

; 4619 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00060	89 55 ec	 mov	 DWORD PTR __Ptr$4[ebp], edx

; 4620 :             auto& _Al          = _Getal();

  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006b	89 45 e8	 mov	 DWORD PTR __Al$3[ebp], eax

; 4621 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0006e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00071	83 c0 04	 add	 eax, 4
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ; std::_Destroy_in_place<char *>
  0007a	83 c4 04	 add	 esp, 4

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00083	83 c2 01	 add	 edx, 1
  00086	52		 push	 edx
  00087	8b 45 ec	 mov	 eax, DWORD PTR __Ptr$4[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d e8	 mov	 ecx, DWORD PTR __Al$3[ebp]
  0008e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4623 :         }
; 4624 : 
; 4625 : #ifdef __cpp_lib_constexpr_string
; 4626 :         if (_STD is_constant_evaluated()) {

  00093	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00098	0f b6 c8	 movzx	 ecx, al
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 20		 je	 SHORT $LN3@Tidy_deall

; 4627 :             _Mypair._Myval2._Bx._Ptr = nullptr;

  0009f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 4628 :             _Mypair._Myval2._Mysize  = 0;

  000a9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 4629 :             _Mypair._Myval2._Myres   = 0;

  000b3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 4630 :         } else

  000bd	eb 34		 jmp	 SHORT $LN5@Tidy_deall
$LN3@Tidy_deall:

; 4631 : #endif // __cpp_lib_constexpr_string
; 4632 :         {
; 4633 :             _Mypair._Myval2._Mysize = 0;

  000bf	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000c9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	c7 40 18 0f 00
	00 00		 mov	 DWORD PTR [eax+24], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000d3	c6 45 e7 00	 mov	 BYTE PTR $T2[ebp], 0
  000d7	8d 4d e7	 lea	 ecx, DWORD PTR $T2[ebp]
  000da	51		 push	 ecx
  000db	ba 01 00 00 00	 mov	 edx, 1
  000e0	6b c2 00	 imul	 eax, edx, 0
  000e3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  000ea	52		 push	 edx
  000eb	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
  000f0	83 c4 08	 add	 esp, 8
$LN5@Tidy_deall:

; 4637 :         }
; 4638 :     }

  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	83 c4 1c	 add	 esp, 28			; 0000001cH
  00101	3b ec		 cmp	 ebp, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c3		 ret	 0
  0010c	cc		 int	 3
  0010d	cc		 int	 3
  0010e	cc		 int	 3
  0010f	cc		 int	 3
  00110	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -33						; size = 1
__Raw_new$3 = -32					; size = 4
__New_ptr$4 = -28					; size = 4
__Al$5 = -24						; size = 4
__My_data$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx

; 4594 :     _CONSTEXPR20_CONTAINER void _Tidy_init() noexcept { // initialize basic_string data members

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003f	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00044	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4595 :         auto& _My_data   = _Mypair._Myval2;

  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	89 45 ec	 mov	 DWORD PTR __My_data$[ebp], eax

; 4596 :         _My_data._Mysize = 0;

  0004f	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$[ebp]
  00052	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {

  00059	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0005e	0f b6 d0	 movzx	 edx, al
  00061	85 d2		 test	 edx, edx
  00063	74 4c		 je	 SHORT $LN2@Tidy_init

; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context

  00065	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00068	c7 40 18 10 00
	00 00		 mov	 DWORD PTR [eax+24], 16	; 00000010H

; 4601 :             auto& _Al              = _Getal();

  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00077	89 45 e8	 mov	 DWORD PTR __Al$5[ebp], eax

; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws

  0007a	6a 11		 push	 17			; 00000011H
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR __Al$5[ebp]
  0007f	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  00084	89 45 e4	 mov	 DWORD PTR __New_ptr$4[ebp], eax

; 4603 :             _My_data._Bx._Ptr      = _New_ptr;

  00087	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$[ebp]
  0008a	8b 55 e4	 mov	 edx, DWORD PTR __New_ptr$4[ebp]
  0008d	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);

  00090	8b 45 e4	 mov	 eax, DWORD PTR __New_ptr$4[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  00099	83 c4 04	 add	 esp, 4
  0009c	89 45 e0	 mov	 DWORD PTR __Raw_new$3[ebp], eax

; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());

  0009f	6a 00		 push	 0
  000a1	6a 11		 push	 17			; 00000011H
  000a3	8b 4d e0	 mov	 ecx, DWORD PTR __Raw_new$3[ebp]
  000a6	51		 push	 ecx
  000a7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPADQADID@Z ; std::_Narrow_char_traits<char,int>::assign
  000ac	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4607 :         } else

  000af	eb 2a		 jmp	 SHORT $LN4@Tidy_init
$LN2@Tidy_init:

; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000b1	8b 55 ec	 mov	 edx, DWORD PTR __My_data$[ebp]
  000b4	c7 42 18 0f 00
	00 00		 mov	 DWORD PTR [edx+24], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000bb	c6 45 df 00	 mov	 BYTE PTR $T2[ebp], 0
  000bf	8d 45 df	 lea	 eax, DWORD PTR $T2[ebp]
  000c2	50		 push	 eax
  000c3	b9 01 00 00 00	 mov	 ecx, 1
  000c8	6b d1 00	 imul	 edx, ecx, 0
  000cb	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  000ce	8d 4c 10 04	 lea	 ecx, DWORD PTR [eax+edx+4]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
  000d8	83 c4 08	 add	 esp, 8
$LN4@Tidy_init:

; 4613 :         }
; 4614 :     }

  000db	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000de	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e5	59		 pop	 ecx
  000e6	83 c4 24	 add	 esp, 36			; 00000024H
  000e9	3b ec		 cmp	 ebp, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
  000f4	cc		 int	 3
  000f5	cc		 int	 3
  000f6	cc		 int	 3
  000f7	cc		 int	 3
  000f8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 4500 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Requested) const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4501 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00030	89 45 f8	 mov	 DWORD PTR tv76[ebp], eax
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00039	89 4d f4	 mov	 DWORD PTR tv74[ebp], ecx
  0003c	8b 55 f8	 mov	 edx, DWORD PTR tv76[ebp]
  0003f	52		 push	 edx
  00040	8b 45 f4	 mov	 eax, DWORD PTR tv74[ebp]
  00043	50		 push	 eax
  00044	8b 4d 08	 mov	 ecx, DWORD PTR __Requested$[ebp]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4502 :     }

  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__Masked$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Requested$ = 8					; size = 4
__Old$ = 12						; size = 4
__Max$ = 16						; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4487 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00024	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00029	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0002e	8b 45 08	 mov	 eax, DWORD PTR __Requested$[ebp]
  00031	83 c8 0f	 or	 eax, 15			; 0000000fH
  00034	89 45 f4	 mov	 DWORD PTR __Masked$[ebp], eax

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00037	8b 4d f4	 mov	 ecx, DWORD PTR __Masked$[ebp]
  0003a	3b 4d 10	 cmp	 ecx, DWORD PTR __Max$[ebp]
  0003d	76 05		 jbe	 SHORT $LN2@Calculate_

; 4490 :             return _Max;

  0003f	8b 45 10	 mov	 eax, DWORD PTR __Max$[ebp]
  00042	eb 31		 jmp	 SHORT $LN4@Calculate_
$LN2@Calculate_:

; 4491 :         }
; 4492 : 
; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00044	8b 55 0c	 mov	 edx, DWORD PTR __Old$[ebp]
  00047	d1 ea		 shr	 edx, 1
  00049	8b 45 10	 mov	 eax, DWORD PTR __Max$[ebp]
  0004c	2b c2		 sub	 eax, edx
  0004e	39 45 0c	 cmp	 DWORD PTR __Old$[ebp], eax
  00051	76 05		 jbe	 SHORT $LN3@Calculate_

; 4494 :             return _Max;

  00053	8b 45 10	 mov	 eax, DWORD PTR __Max$[ebp]
  00056	eb 1d		 jmp	 SHORT $LN4@Calculate_
$LN3@Calculate_:

; 4495 :         }
; 4496 : 
; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00058	8b 4d 0c	 mov	 ecx, DWORD PTR __Old$[ebp]
  0005b	d1 e9		 shr	 ecx, 1
  0005d	03 4d 0c	 add	 ecx, DWORD PTR __Old$[ebp]
  00060	89 4d ec	 mov	 DWORD PTR $T1[ebp], ecx
  00063	8d 55 ec	 lea	 edx, DWORD PTR $T1[ebp]
  00066	52		 push	 edx
  00067	8d 45 f4	 lea	 eax, DWORD PTR __Masked$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ??$max@I@std@@YAABIABI0@Z ; std::max<unsigned int>
  00070	83 c4 08	 add	 esp, 8
  00073	8b 00		 mov	 eax, DWORD PTR [eax]
$LN4@Calculate_:

; 4498 :     }

  00075	52		 push	 edx
  00076	8b cd		 mov	 ecx, ebp
  00078	50		 push	 eax
  00079	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@Calculate_
  0007f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00084	58		 pop	 eax
  00085	5a		 pop	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00089	33 cd		 xor	 ecx, ebp
  0008b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00090	83 c4 14	 add	 esp, 20			; 00000014H
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
  0009e	66 90		 npad	 2
$LN7@Calculate_:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN6@Calculate_
$LN6@Calculate_:
  000a8	f4 ff ff ff	 DD	 -12			; fffffff4H
  000ac	04 00 00 00	 DD	 4
  000b0	00 00 00 00	 DD	 $LN5@Calculate_
$LN5@Calculate_:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	4d		 DB	 77			; 0000004dH
  000b6	61		 DB	 97			; 00000061H
  000b7	73		 DB	 115			; 00000073H
  000b8	6b		 DB	 107			; 0000006bH
  000b9	65		 DB	 101			; 00000065H
  000ba	64		 DB	 100			; 00000064H
  000bb	00		 DB	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
tv84 = -20						; size = 4
tv86 = -16						; size = 4
tv88 = -12						; size = 4
tv90 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 4412 :     _NODISCARD _CONSTEXPR20_CONTAINER int compare(const basic_string& _Right) const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00022	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4413 :         // compare [0, size()) with _Right
; 4414 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  00027	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0002a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0002d	89 4d f8	 mov	 DWORD PTR tv90[ebp], ecx
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00038	89 45 f4	 mov	 DWORD PTR tv88[ebp], eax
  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00041	89 45 f0	 mov	 DWORD PTR tv86[ebp], eax
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0004c	89 45 ec	 mov	 DWORD PTR tv84[ebp], eax
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR tv90[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f4	 mov	 edx, DWORD PTR tv88[ebp]
  00056	52		 push	 edx
  00057	8b 45 f0	 mov	 eax, DWORD PTR tv86[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d ec	 mov	 ecx, DWORD PTR tv84[ebp]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  00064	83 c4 10	 add	 esp, 16			; 00000010H

; 4415 :             _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 4416 :     }

  00067	83 c4 14	 add	 esp, 20			; 00000014H
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
__Storage_max$ = -24					; size = 4
__Alloc_max$ = -16					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 3943 :     _NODISCARD _CONSTEXPR20_CONTAINER size_type max_size() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00011	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00014	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00017	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00020	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00023	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00030	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00033	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00038	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 3944 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  0004b	83 c4 04	 add	 esp, 4
  0004e	89 45 f0	 mov	 DWORD PTR __Alloc_max$[ebp], eax

; 3945 :         const size_type _Storage_max = // can always store small string

  00051	c7 45 e4 10 00
	00 00		 mov	 DWORD PTR $T3[ebp], 16	; 00000010H
  00058	8d 45 e4	 lea	 eax, DWORD PTR $T3[ebp]
  0005b	50		 push	 eax
  0005c	8d 4d f0	 lea	 ecx, DWORD PTR __Alloc_max$[ebp]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ??$max@I@std@@YAABIABI0@Z ; std::max<unsigned int>
  00065	83 c4 08	 add	 esp, 8
  00068	8b 10		 mov	 edx, DWORD PTR [eax]
  0006a	89 55 e8	 mov	 DWORD PTR __Storage_max$[ebp], edx

; 3946 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3947 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  0006d	8b 45 e8	 mov	 eax, DWORD PTR __Storage_max$[ebp]
  00070	83 e8 01	 sub	 eax, 1
  00073	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  00076	e8 00 00 00 00	 call	 ?max@?$numeric_limits@H@std@@SAHXZ ; std::numeric_limits<int>::max
  0007b	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
  0007e	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00081	51		 push	 ecx
  00082	8d 55 dc	 lea	 edx, DWORD PTR $T1[ebp]
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 ??$min@I@std@@YAABIABI0@Z ; std::min<unsigned int>
  0008b	83 c4 08	 add	 esp, 8
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]

; 3948 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3949 :         );
; 3950 :     }

  00090	52		 push	 edx
  00091	8b cd		 mov	 ecx, ebp
  00093	50		 push	 eax
  00094	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@max_size
  0009a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009f	58		 pop	 eax
  000a0	5a		 pop	 edx
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a4	33 cd		 xor	 ecx, ebp
  000a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ab	83 c4 24	 add	 esp, 36			; 00000024H
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
  000b9	0f 1f 00	 npad	 3
$LN5@max_size:
  000bc	01 00 00 00	 DD	 1
  000c0	00 00 00 00	 DD	 $LN4@max_size
$LN4@max_size:
  000c4	f0 ff ff ff	 DD	 -16			; fffffff0H
  000c8	04 00 00 00	 DD	 4
  000cc	00 00 00 00	 DD	 $LN3@max_size
$LN3@max_size:
  000d0	5f		 DB	 95			; 0000005fH
  000d1	41		 DB	 65			; 00000041H
  000d2	6c		 DB	 108			; 0000006cH
  000d3	6c		 DB	 108			; 0000006cH
  000d4	6f		 DB	 111			; 0000006fH
  000d5	63		 DB	 99			; 00000063H
  000d6	5f		 DB	 95			; 0000005fH
  000d7	6d		 DB	 109			; 0000006dH
  000d8	61		 DB	 97			; 00000061H
  000d9	78		 DB	 120			; 00000078H
  000da	00		 DB	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00018	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Convert_size@I@std@@YAII@Z ; std::_Convert_size<unsigned int>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00031	51		 push	 ecx
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3265 :     }

  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Old_ptr$3 = -8					; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3244 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 3245 :         // assign [_Ptr, _Ptr + _Count)
; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0002e	3b 48 18	 cmp	 ecx, DWORD PTR [eax+24]
  00031	77 44		 ja	 SHORT $LN2@assign

; 3247 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003b	89 45 f8	 mov	 DWORD PTR __Old_ptr$3[ebp], eax

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00044	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00047	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0004e	52		 push	 edx
  0004f	8b 45 f8	 mov	 eax, DWORD PTR __Old_ptr$3[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0005b	c6 45 f7 00	 mov	 BYTE PTR $T2[ebp], 0
  0005f	8d 4d f7	 lea	 ecx, DWORD PTR $T2[ebp]
  00062	51		 push	 ecx
  00063	8b 55 f8	 mov	 edx, DWORD PTR __Old_ptr$3[ebp]
  00066	03 55 0c	 add	 edx, DWORD PTR __Count$[ebp]
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
  0006f	83 c4 08	 add	 esp, 8

; 3251 :             return *this;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00075	eb 15		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 3252 :         }
; 3253 : 
; 3254 :         return _Reallocate_for(

  00077	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0007a	50		 push	 eax
  0007b	0f b6 4d f6	 movzx	 ecx, BYTE PTR $T1[ebp]
  0007f	51		 push	 ecx
  00080	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00083	52		 push	 edx
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
$LN1@assign:

; 3255 :             _Count,
; 3256 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3257 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
__To_delete$ = -28					; size = 4
_$S12$ = -17						; size = 1
__Alproxy$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00032	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 3003 :         _Tidy_deallocate();

  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 3004 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3005 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00047	50		 push	 eax
  00048	8d 4d ef	 lea	 ecx, DWORD PTR _$S12$[ebp]
  0004b	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00050	8d 45 ef	 lea	 eax, DWORD PTR _$S12$[ebp]
  00053	89 45 f4	 mov	 DWORD PTR __Alproxy$[ebp], eax

; 3006 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	89 55 e4	 mov	 DWORD PTR __To_delete$[ebp], edx

; 3007 :         _Mypair._Myval2._Myproxy = nullptr;

  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 3008 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00067	8b 4d e4	 mov	 ecx, DWORD PTR __To_delete$[ebp]
  0006a	51		 push	 ecx
  0006b	8b 55 f4	 mov	 edx, DWORD PTR __Alproxy$[ebp]
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	83 c4 08	 add	 esp, 8

; 3009 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3010 :     }

  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
  0007f	52		 push	 edx
  00080	8b cd		 mov	 ecx, ebp
  00082	50		 push	 eax
  00083	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@basic_stri
  00089	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008e	58		 pop	 eax
  0008f	5a		 pop	 edx
  00090	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00093	33 cd		 xor	 ecx, ebp
  00095	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009a	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
$LN5@basic_stri:
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN4@basic_stri
$LN4@basic_stri:
  000b0	ef ff ff ff	 DD	 -17			; ffffffefH
  000b4	01 00 00 00	 DD	 1
  000b8	00 00 00 00	 DD	 $LN3@basic_stri
$LN3@basic_stri:
  000bc	24		 DB	 36			; 00000024H
  000bd	53		 DB	 83			; 00000053H
  000be	31		 DB	 49			; 00000031H
  000bf	32		 DB	 50			; 00000032H
  000c0	00		 DB	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
tv75 = -57						; size = 1
$T1 = -56						; size = 4
$T2 = -52						; size = 4
__New_array$ = -44					; size = 4
__New_capacity$ = -36					; size = 4
__Al$ = -32						; size = 4
__Stay_small$ = -25					; size = 1
__My_data$ = -24					; size = 4
__Right_ptr$ = -20					; size = 4
__Right_size$ = -16					; size = 4
__Right_data$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT
; _this$ = ecx

; 2915 :     _CONSTEXPR20_CONTAINER void _Construct_lv_contents(const basic_string& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  0000b	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00025	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0002a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2916 :         // assign by copying data stored in _Right
; 2917 :         // pre: this != &_Right
; 2918 :         // pre: *this owns no memory, iterators orphaned (note:
; 2919 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2920 :         auto& _Right_data             = _Right._Mypair._Myval2;

  0002f	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00032	89 45 f4	 mov	 DWORD PTR __Right_data$[ebp], eax

; 2921 :         const size_type _Right_size   = _Right_data._Mysize;

  00035	8b 4d f4	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  00038	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0003b	89 55 f0	 mov	 DWORD PTR __Right_size$[ebp], edx

; 2922 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00046	89 45 ec	 mov	 DWORD PTR __Right_ptr$[ebp], eax

; 2923 :         auto& _My_data                = _Mypair._Myval2;

  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	89 45 e8	 mov	 DWORD PTR __My_data$[ebp], eax

; 2924 : 
; 2925 : #ifdef __cpp_lib_constexpr_string
; 2926 :         const bool _Stay_small = _Right_size < _BUF_SIZE && !_STD is_constant_evaluated();

  0004f	83 7d f0 10	 cmp	 DWORD PTR __Right_size$[ebp], 16 ; 00000010H
  00053	73 12		 jae	 SHORT $LN5@Construct_
  00055	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0005a	0f b6 c8	 movzx	 ecx, al
  0005d	85 c9		 test	 ecx, ecx
  0005f	75 06		 jne	 SHORT $LN5@Construct_
  00061	c6 45 c7 01	 mov	 BYTE PTR tv75[ebp], 1
  00065	eb 04		 jmp	 SHORT $LN6@Construct_
$LN5@Construct_:
  00067	c6 45 c7 00	 mov	 BYTE PTR tv75[ebp], 0
$LN6@Construct_:
  0006b	8a 55 c7	 mov	 dl, BYTE PTR tv75[ebp]
  0006e	88 55 e7	 mov	 BYTE PTR __Stay_small$[ebp], dl

; 2927 : #else // ^^^ __cpp_lib_constexpr_string / !__cpp_lib_constexpr_string vvv
; 2928 :         const bool _Stay_small = _Right_size < _BUF_SIZE;
; 2929 : #endif // __cpp_lib_constexpr_string
; 2930 : 
; 2931 :         // NOTE: even if _Right is in large mode, we only go into large mode ourselves if the actual size of _Right
; 2932 :         // requires it
; 2933 :         if (_Stay_small) { // stay small, don't allocate

  00071	0f b6 45 e7	 movzx	 eax, BYTE PTR __Stay_small$[ebp]
  00075	85 c0		 test	 eax, eax
  00077	74 2d		 je	 SHORT $LN2@Construct_

; 2934 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

  00079	6a 10		 push	 16			; 00000010H
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR __Right_ptr$[ebp]
  0007e	51		 push	 ecx
  0007f	8b 55 e8	 mov	 edx, DWORD PTR __My_data$[ebp]
  00082	83 c2 04	 add	 edx, 4
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2935 :             _My_data._Mysize = _Right_size;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00091	8b 4d f0	 mov	 ecx, DWORD PTR __Right_size$[ebp]
  00094	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 2936 :             _My_data._Myres  = _BUF_SIZE - 1;

  00097	8b 55 e8	 mov	 edx, DWORD PTR __My_data$[ebp]
  0009a	c7 42 18 0f 00
	00 00		 mov	 DWORD PTR [edx+24], 15	; 0000000fH

; 2937 :             return;

  000a1	e9 b5 00 00 00	 jmp	 $LN1@Construct_
$LN2@Construct_:

; 2938 :         }
; 2939 : 
; 2940 :         auto& _Al                     = _Getal();

  000a6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000ae	89 45 e0	 mov	 DWORD PTR __Al$[ebp], eax

; 2941 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000b9	89 45 cc	 mov	 DWORD PTR $T2[ebp], eax
  000bc	8b 45 f0	 mov	 eax, DWORD PTR __Right_size$[ebp]
  000bf	83 c8 0f	 or	 eax, 15			; 0000000fH
  000c2	89 45 c8	 mov	 DWORD PTR $T1[ebp], eax
  000c5	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  000c8	51		 push	 ecx
  000c9	8d 55 c8	 lea	 edx, DWORD PTR $T1[ebp]
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ??$min@I@std@@YAABIABI0@Z ; std::min<unsigned int>
  000d2	83 c4 08	 add	 esp, 8
  000d5	8b 00		 mov	 eax, DWORD PTR [eax]
  000d7	89 45 dc	 mov	 DWORD PTR __New_capacity$[ebp], eax

; 2942 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  000da	8b 4d dc	 mov	 ecx, DWORD PTR __New_capacity$[ebp]
  000dd	83 c1 01	 add	 ecx, 1
  000e0	51		 push	 ecx
  000e1	8b 4d e0	 mov	 ecx, DWORD PTR __Al$[ebp]
  000e4	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  000e9	89 45 d4	 mov	 DWORD PTR __New_array$[ebp], eax

; 2943 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  000ec	8d 55 d4	 lea	 edx, DWORD PTR __New_array$[ebp]
  000ef	52		 push	 edx
  000f0	8b 45 e8	 mov	 eax, DWORD PTR __My_data$[ebp]
  000f3	83 c0 04	 add	 eax, 4
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  000fc	83 c4 08	 add	 esp, 8

; 2944 : 
; 2945 : #ifdef __cpp_lib_constexpr_string
; 2946 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB

  000ff	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00104	0f b6 c8	 movzx	 ecx, al
  00107	85 c9		 test	 ecx, ecx
  00109	74 1e		 je	 SHORT $LN3@Construct_

; 2947 :             _Traits::assign(_Unfancy(_New_array), _New_capacity + 1, _Elem());

  0010b	6a 00		 push	 0
  0010d	8b 55 dc	 mov	 edx, DWORD PTR __New_capacity$[ebp]
  00110	83 c2 01	 add	 edx, 1
  00113	52		 push	 edx
  00114	8b 45 d4	 mov	 eax, DWORD PTR __New_array$[ebp]
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  0011d	83 c4 04	 add	 esp, 4
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPADQADID@Z ; std::_Narrow_char_traits<char,int>::assign
  00126	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@Construct_:

; 2948 :         }
; 2949 : #endif // __cpp_lib_constexpr_string
; 2950 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00129	8b 4d f0	 mov	 ecx, DWORD PTR __Right_size$[ebp]
  0012c	83 c1 01	 add	 ecx, 1
  0012f	51		 push	 ecx
  00130	8b 55 ec	 mov	 edx, DWORD PTR __Right_ptr$[ebp]
  00133	52		 push	 edx
  00134	8b 45 d4	 mov	 eax, DWORD PTR __New_array$[ebp]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  0013d	83 c4 04	 add	 esp, 4
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
  00146	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2951 :         _My_data._Mysize = _Right_size;

  00149	8b 4d e8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  0014c	8b 55 f0	 mov	 edx, DWORD PTR __Right_size$[ebp]
  0014f	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 2952 :         _My_data._Myres  = _New_capacity;

  00152	8b 45 e8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00155	8b 4d dc	 mov	 ecx, DWORD PTR __New_capacity$[ebp]
  00158	89 48 18	 mov	 DWORD PTR [eax+24], ecx
$LN1@Construct_:

; 2953 :     }

  0015b	52		 push	 edx
  0015c	8b cd		 mov	 ecx, ebp
  0015e	50		 push	 eax
  0015f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@Construct_
  00165	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0016a	58		 pop	 eax
  0016b	5a		 pop	 edx
  0016c	5f		 pop	 edi
  0016d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00170	33 cd		 xor	 ecx, ebp
  00172	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00177	83 c4 3c	 add	 esp, 60			; 0000003cH
  0017a	3b ec		 cmp	 ebp, esp
  0017c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00181	8b e5		 mov	 esp, ebp
  00183	5d		 pop	 ebp
  00184	c2 04 00	 ret	 4
  00187	90		 npad	 1
$LN9@Construct_:
  00188	01 00 00 00	 DD	 1
  0018c	00 00 00 00	 DD	 $LN8@Construct_
$LN8@Construct_:
  00190	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00194	04 00 00 00	 DD	 4
  00198	00 00 00 00	 DD	 $LN7@Construct_
$LN7@Construct_:
  0019c	5f		 DB	 95			; 0000005fH
  0019d	4e		 DB	 78			; 0000004eH
  0019e	65		 DB	 101			; 00000065H
  0019f	77		 DB	 119			; 00000077H
  001a0	5f		 DB	 95			; 0000005fH
  001a1	61		 DB	 97			; 00000061H
  001a2	72		 DB	 114			; 00000072H
  001a3	72		 DB	 114			; 00000072H
  001a4	61		 DB	 97			; 00000061H
  001a5	79		 DB	 121			; 00000079H
  001a6	00		 DB	 0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
__Right_data$ = -24					; size = 4
__My_data$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT
; _this$ = ecx

; 2872 :     _CONSTEXPR20_CONTAINER void _Take_contents(basic_string& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  0001b	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  00022	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00042	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2873 :         // assign by stealing _Right's buffer
; 2874 :         // pre: this != &_Right
; 2875 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2876 :         // pre: *this owns no memory, iterators orphaned
; 2877 :         // (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2878 :         auto& _My_data    = _Mypair._Myval2;

  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	89 45 ec	 mov	 DWORD PTR __My_data$[ebp], eax

; 2879 :         auto& _Right_data = _Right._Mypair._Myval2;

  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00050	89 4d e8	 mov	 DWORD PTR __Right_data$[ebp], ecx

; 2880 : 
; 2881 :         if constexpr (_Can_memcpy_val) {
; 2882 : #ifdef __cpp_lib_constexpr_string
; 2883 :             if (!_STD is_constant_evaluated())

  00053	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00058	0f b6 d0	 movzx	 edx, al
  0005b	85 d2		 test	 edx, edx
  0005d	75 3e		 jne	 SHORT $LN2@Take_conte

; 2884 : #endif // __cpp_lib_constexpr_string
; 2885 :             {
; 2886 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2887 :                 if (_Right_data._Large_string_engaged()) {

  0005f	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00067	0f b6 c0	 movzx	 eax, al
  0006a	85 c0		 test	 eax, eax
  0006c	74 0e		 je	 SHORT $LN3@Take_conte

; 2888 :                     // take ownership of _Right's iterators along with its buffer
; 2889 :                     _Swap_proxy_and_iterators(_Right);

  0006e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00071	51		 push	 ecx
  00072	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 2890 :                 } else {

  0007a	eb 08		 jmp	 SHORT $LN4@Take_conte
$LN3@Take_conte:

; 2891 :                     _Right_data._Orphan_all();

  0007c	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
$LN4@Take_conte:

; 2892 :                 }
; 2893 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2894 : 
; 2895 :                 _Memcpy_val_from(_Right);

  00084	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00087	52		 push	 edx
  00088	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from

; 2896 :                 _Right._Tidy_init();

  00090	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00093	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2897 :                 return;

  00098	e9 85 00 00 00	 jmp	 $LN7@Take_conte
$LN2@Take_conte:

; 2898 :             }
; 2899 :         }
; 2900 : 
; 2901 :         if (_Right_data._Large_string_engaged()) { // steal buffer

  0009d	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  000a0	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  000a5	0f b6 c0	 movzx	 eax, al
  000a8	85 c0		 test	 eax, eax
  000aa	74 2e		 je	 SHORT $LN5@Take_conte

; 2902 :             _Construct_in_place(_My_data._Bx._Ptr, _Right_data._Bx._Ptr);

  000ac	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  000af	83 c1 04	 add	 ecx, 4
  000b2	51		 push	 ecx
  000b3	8b 55 ec	 mov	 edx, DWORD PTR __My_data$[ebp]
  000b6	83 c2 04	 add	 edx, 4
  000b9	52		 push	 edx
  000ba	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADAAPAD@std@@YAXAAPAD0@Z ; std::_Construct_in_place<char *,char * &>
  000bf	83 c4 08	 add	 esp, 8

; 2903 :             _Right_data._Bx._Ptr = nullptr;

  000c2	8b 45 e8	 mov	 eax, DWORD PTR __Right_data$[ebp]
  000c5	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 2904 :             _Swap_proxy_and_iterators(_Right);

  000cc	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  000cf	51		 push	 ecx
  000d0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 2905 :         } else { // copy small string buffer

  000d8	eb 28		 jmp	 SHORT $LN6@Take_conte
$LN5@Take_conte:

; 2906 :             _Traits::copy(_My_data._Bx._Buf, _Right_data._Bx._Buf, _Right_data._Mysize + 1);

  000da	8b 55 e8	 mov	 edx, DWORD PTR __Right_data$[ebp]
  000dd	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000e0	83 c0 01	 add	 eax, 1
  000e3	50		 push	 eax
  000e4	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  000e7	83 c1 04	 add	 ecx, 4
  000ea	51		 push	 ecx
  000eb	8b 55 ec	 mov	 edx, DWORD PTR __My_data$[ebp]
  000ee	83 c2 04	 add	 edx, 4
  000f1	52		 push	 edx
  000f2	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
  000f7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2907 :             _Right_data._Orphan_all();

  000fa	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  000fd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
$LN6@Take_conte:

; 2908 :         }
; 2909 : 
; 2910 :         _My_data._Mysize = _Right_data._Mysize;

  00102	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00105	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  00108	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0010b	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 2911 :         _My_data._Myres  = _Right_data._Myres;

  0010e	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00111	8b 4d e8	 mov	 ecx, DWORD PTR __Right_data$[ebp]
  00114	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00117	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 2912 :         _Right._Tidy_init();

  0011a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0011d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
$LN7@Take_conte:

; 2913 :     }

  00122	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00125	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012c	59		 pop	 ecx
  0012d	83 c4 18	 add	 esp, 24			; 00000018H
  00130	3b ec		 cmp	 ebp, esp
  00132	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
  0013d	cc		 int	 3
  0013e	cc		 int	 3
  0013f	cc		 int	 3
  00140	cc		 int	 3
  00141	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
__Right_data_mem$ = -12					; size = 4
__My_data_mem$ = -8					; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT
; _this$ = ecx

; 2863 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2864 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2865 :         const auto _My_data_mem =

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00031	83 c4 04	 add	 esp, 4
  00034	83 c0 04	 add	 eax, 4
  00037	89 45 f8	 mov	 DWORD PTR __My_data_mem$[ebp], eax

; 2866 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2867 :         const auto _Right_data_mem =

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00043	83 c4 04	 add	 esp, 4
  00046	83 c0 04	 add	 eax, 4
  00049	89 45 f4	 mov	 DWORD PTR __Right_data_mem$[ebp], eax

; 2868 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0004c	6a 18		 push	 24			; 00000018H
  0004e	8b 55 f4	 mov	 edx, DWORD PTR __Right_data_mem$[ebp]
  00051	52		 push	 edx
  00052	8b 45 f8	 mov	 eax, DWORD PTR __My_data_mem$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _memcpy
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2870 :     }

  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
tv94 = -32						; size = 4
tv75 = -28						; size = 4
tv77 = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2605 :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001c	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001f	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00022	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00025	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002d	33 c5		 xor	 eax, ebp
  0002f	50		 push	 eax
  00030	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00033	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00039	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00041	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00046	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00049	89 45 e8	 mov	 DWORD PTR tv77[ebp], eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
  0005a	83 c4 04	 add	 esp, 4
  0005d	89 45 e4	 mov	 DWORD PTR tv75[ebp], eax
  00060	8a 4d ef	 mov	 cl, BYTE PTR $T4[ebp]
  00063	88 4d ee	 mov	 BYTE PTR $T3[ebp], cl
  00066	8b 55 e4	 mov	 edx, DWORD PTR tv75[ebp]
  00069	52		 push	 edx
  0006a	0f b6 45 ee	 movzx	 eax, BYTE PTR $T3[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d e8	 mov	 ecx, DWORD PTR tv77[ebp]
  00072	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >

; 2606 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	89 4d e0	 mov	 DWORD PTR tv94[ebp], ecx
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00085	50		 push	 eax
  00086	8d 4d ed	 lea	 ecx, DWORD PTR $T2[ebp]
  00089	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0008e	50		 push	 eax
  0008f	8b 4d e0	 mov	 ecx, DWORD PTR tv94[ebp]
  00092	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2607 :         _Take_contents(_Right);

  00097	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  0009a	52		 push	 edx
  0009b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2608 :     }

  000a3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b0	59		 pop	 ecx
  000b1	83 c4 20	 add	 esp, 32			; 00000020H
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 04 00	 ret	 4
  000c1	cc		 int	 3
  000c2	cc		 int	 3
  000c3	cc		 int	 3
  000c4	cc		 int	 3
  000c5	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
tv69 = -60						; size = 4
$T2 = -53						; size = 1
__Proxy$ = -48						; size = 8
_$S14$ = -29						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2517 :     _CONSTEXPR20_CONTAINER basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c4	 lea	 edi, DWORD PTR [ebp-60]
  00019	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00042	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00047	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	89 45 c4	 mov	 DWORD PTR tv69[ebp], eax
  0004d	0f b6 4d cb	 movzx	 ecx, BYTE PTR $T2[ebp]
  00051	51		 push	 ecx
  00052	8b 4d c4	 mov	 ecx, DWORD PTR tv69[ebp]
  00055	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00069	50		 push	 eax
  0006a	8d 4d e3	 lea	 ecx, DWORD PTR _$S14$[ebp]
  0006d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00072	8d 55 e3	 lea	 edx, DWORD PTR _$S14$[ebp]
  00075	89 55 e8	 mov	 DWORD PTR __Alproxy$[ebp], edx

; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00078	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR __Alproxy$[ebp]
  0007f	51		 push	 ecx
  00080	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  00083	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00088	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 2520 :         _Tidy_init();

  0008c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2521 :         assign(_Ptr);

  00094	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00097	52		 push	 edx
  00098	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2522 :         _Proxy._Release();

  000a0	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 2523 :     }

  000a8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000ac	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  000af	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000be	52		 push	 edx
  000bf	8b cd		 mov	 ecx, ebp
  000c1	50		 push	 eax
  000c2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@basic_stri
  000c8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000cd	58		 pop	 eax
  000ce	5a		 pop	 edx
  000cf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d9	59		 pop	 ecx
  000da	5f		 pop	 edi
  000db	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000de	33 cd		 xor	 ecx, ebp
  000e0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e5	83 c4 3c	 add	 esp, 60			; 0000003cH
  000e8	3b ec		 cmp	 ebp, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 04 00	 ret	 4
  000f5	0f 1f 00	 npad	 3
$LN9@basic_stri:
  000f8	02 00 00 00	 DD	 2
  000fc	00 00 00 00	 DD	 $LN8@basic_stri
$LN8@basic_stri:
  00100	e3 ff ff ff	 DD	 -29			; ffffffe3H
  00104	01 00 00 00	 DD	 1
  00108	00 00 00 00	 DD	 $LN5@basic_stri
  0010c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00110	08 00 00 00	 DD	 8
  00114	00 00 00 00	 DD	 $LN6@basic_stri
$LN6@basic_stri:
  00118	5f		 DB	 95			; 0000005fH
  00119	50		 DB	 80			; 00000050H
  0011a	72		 DB	 114			; 00000072H
  0011b	6f		 DB	 111			; 0000006fH
  0011c	78		 DB	 120			; 00000078H
  0011d	79		 DB	 121			; 00000079H
  0011e	00		 DB	 0
$LN5@basic_stri:
  0011f	24		 DB	 36			; 00000024H
  00120	53		 DB	 83			; 00000053H
  00121	31		 DB	 49			; 00000031H
  00122	34		 DB	 52			; 00000034H
  00123	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$1:
  00008	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
tv86 = -28						; size = 4
tv69 = -24						; size = 4
$T2 = -18						; size = 1
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2467 :         : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00039	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0003e	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00043	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00046	89 45 e8	 mov	 DWORD PTR tv69[ebp], eax
  00049	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T3[ebp]
  0004d	51		 push	 ecx
  0004e	8b 4d e8	 mov	 ecx, DWORD PTR tv69[ebp]
  00051	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>

; 2468 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00056	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00059	89 55 e4	 mov	 DWORD PTR tv86[ebp], edx
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00064	50		 push	 eax
  00065	8d 4d ee	 lea	 ecx, DWORD PTR $T2[ebp]
  00068	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006d	50		 push	 eax
  0006e	8b 4d e4	 mov	 ecx, DWORD PTR tv86[ebp]
  00071	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2469 :         _Tidy_init();

  00076	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2470 :     }

  0007e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00084	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008b	59		 pop	 ecx
  0008c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
  0009a	cc		 int	 3
  0009b	cc		 int	 3
  0009c	cc		 int	 3
  0009d	cc		 int	 3
  0009e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv76 = -64						; size = 4
tv78 = -60						; size = 4
$T2 = -55						; size = 1
$T3 = -54						; size = 1
$T4 = -53						; size = 1
__Proxy$ = -48						; size = 8
_$S16$ = -29						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2451 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00042	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00047	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	89 45 c4	 mov	 DWORD PTR tv78[ebp], eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00050	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00055	50		 push	 eax
  00056	8d 4d cb	 lea	 ecx, DWORD PTR $T4[ebp]
  00059	51		 push	 ecx
  0005a	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  0005f	83 c4 08	 add	 esp, 8
  00062	89 45 c0	 mov	 DWORD PTR tv76[ebp], eax
  00065	8a 55 ca	 mov	 dl, BYTE PTR $T3[ebp]
  00068	88 55 c9	 mov	 BYTE PTR $T2[ebp], dl
  0006b	8b 45 c0	 mov	 eax, DWORD PTR tv76[ebp]
  0006e	50		 push	 eax
  0006f	0f b6 4d c9	 movzx	 ecx, BYTE PTR $T2[ebp]
  00073	51		 push	 ecx
  00074	8b 4d c4	 mov	 ecx, DWORD PTR tv78[ebp]
  00077	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  0007c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2452 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00083	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0008b	50		 push	 eax
  0008c	8d 4d e3	 lea	 ecx, DWORD PTR _$S16$[ebp]
  0008f	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00094	8d 55 e3	 lea	 edx, DWORD PTR _$S16$[ebp]
  00097	89 55 e8	 mov	 DWORD PTR __Alproxy$[ebp], edx

; 2453 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0009a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d e8	 mov	 ecx, DWORD PTR __Alproxy$[ebp]
  000a1	51		 push	 ecx
  000a2	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  000a5	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000aa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 2454 :         _Construct_lv_contents(_Right);

  000ae	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  000b1	52		 push	 edx
  000b2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents

; 2455 :         _Proxy._Release();

  000ba	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 2456 :     }

  000c2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000c6	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  000c9	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	52		 push	 edx
  000d9	8b cd		 mov	 ecx, ebp
  000db	50		 push	 eax
  000dc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@basic_stri
  000e2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e7	58		 pop	 eax
  000e8	5a		 pop	 edx
  000e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f3	59		 pop	 ecx
  000f4	5f		 pop	 edi
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	83 c4 40	 add	 esp, 64			; 00000040H
  00102	3b ec		 cmp	 ebp, esp
  00104	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c2 04 00	 ret	 4
  0010f	90		 npad	 1
$LN9@basic_stri:
  00110	02 00 00 00	 DD	 2
  00114	00 00 00 00	 DD	 $LN8@basic_stri
$LN8@basic_stri:
  00118	e3 ff ff ff	 DD	 -29			; ffffffe3H
  0011c	01 00 00 00	 DD	 1
  00120	00 00 00 00	 DD	 $LN5@basic_stri
  00124	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00128	08 00 00 00	 DD	 8
  0012c	00 00 00 00	 DD	 $LN6@basic_stri
$LN6@basic_stri:
  00130	5f		 DB	 95			; 0000005fH
  00131	50		 DB	 80			; 00000050H
  00132	72		 DB	 114			; 00000072H
  00133	6f		 DB	 111			; 0000006fH
  00134	78		 DB	 120			; 00000078H
  00135	79		 DB	 121			; 00000079H
  00136	00		 DB	 0
$LN5@basic_stri:
  00137	24		 DB	 36			; 00000024H
  00138	53		 DB	 83			; 00000053H
  00139	31		 DB	 49			; 00000031H
  0013a	36		 DB	 54			; 00000036H
  0013b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1:
  00008	8d 4d d0	 lea	 ecx, DWORD PTR __Proxy$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {

  00021	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00026	0f b6 c0	 movzx	 eax, al
  00029	85 c0		 test	 eax, eax
  0002b	74 04		 je	 SHORT $LN2@Large_stri

; 2316 :             return true;

  0002d	b0 01		 mov	 al, 1
  0002f	eb 1c		 jmp	 SHORT $LN3@Large_stri
$LN2@Large_stri:

; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;

  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00038	72 09		 jb	 SHORT $LN4@Large_stri
  0003a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00041	eb 07		 jmp	 SHORT $LN5@Large_stri
$LN4@Large_stri:
  00043	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN5@Large_stri:
  0004a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]
$LN3@Large_stri:

; 2320 :     }

  0004d	83 c4 08	 add	 esp, 8
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2305 :         const value_type* _Result = _Bx._Buf;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c0 04	 add	 eax, 4
  00027	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 2306 :         if (_Large_string_engaged()) {

  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00032	0f b6 c8	 movzx	 ecx, al
  00035	85 c9		 test	 ecx, ecx
  00037	74 12		 je	 SHORT $LN2@Myptr

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00039	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  00045	83 c4 04	 add	 esp, 4
  00048	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax
$LN2@Myptr:

; 2308 :         }
; 2309 : 
; 2310 :         return _Result;

  0004b	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 2311 :     }

  0004e	83 c4 08	 add	 esp, 8
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2296 :         value_type* _Result = _Bx._Buf;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c0 04	 add	 eax, 4
  00027	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 2297 :         if (_Large_string_engaged()) {

  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00032	0f b6 c8	 movzx	 ecx, al
  00035	85 c9		 test	 ecx, ecx
  00037	74 12		 je	 SHORT $LN2@Myptr

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  00039	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  00045	83 c4 04	 add	 esp, 4
  00048	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax
$LN2@Myptr:

; 2299 :         }
; 2300 : 
; 2301 :         return _Result;

  0004b	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 2302 :     }

  0004e	83 c4 08	 add	 esp, 8
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	83 c1 04	 add	 ecx, 4
  00026	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 2285 : 
; 2286 :     // length of internal buffer, [1, 16]:
; 2287 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2288 :     // roundup mask for allocated buffers, [0, 15]:
; 2289 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2290 :                                            : sizeof(value_type) <= 2 ? 7
; 2291 :                                            : sizeof(value_type) <= 4 ? 3
; 2292 :                                            : sizeof(value_type) <= 8 ? 1
; 2293 :                                                                      : 0;
; 2294 : 
; 2295 :     _CONSTEXPR20_CONTAINER value_type* _Myptr() noexcept {
; 2296 :         value_type* _Result = _Bx._Buf;
; 2297 :         if (_Large_string_engaged()) {
; 2298 :             _Result = _Unfancy(_Bx._Ptr);
; 2299 :         }
; 2300 : 
; 2301 :         return _Result;
; 2302 :     }
; 2303 : 
; 2304 :     _CONSTEXPR20_CONTAINER const value_type* _Myptr() const noexcept {
; 2305 :         const value_type* _Result = _Bx._Buf;
; 2306 :         if (_Large_string_engaged()) {
; 2307 :             _Result = _Unfancy(_Bx._Ptr);
; 2308 :         }
; 2309 : 
; 2310 :         return _Result;
; 2311 :     }
; 2312 : 
; 2313 :     _CONSTEXPR20_CONTAINER bool _Large_string_engaged() const noexcept {
; 2314 : #ifdef __cpp_lib_constexpr_string
; 2315 :         if (_STD is_constant_evaluated()) {
; 2316 :             return true;
; 2317 :         }
; 2318 : #endif // __cpp_lib_constexpr_string
; 2319 :         return _BUF_SIZE <= _Myres;
; 2320 :     }
; 2321 : 
; 2322 :     _CONSTEXPR20_CONTAINER void _Check_offset(const size_type _Off) const {
; 2323 :         // checks whether _Off is in the bounds of [0, size()]
; 2324 :         if (_Mysize < _Off) {
; 2325 :             _Xran();
; 2326 :         }
; 2327 :     }
; 2328 : 
; 2329 :     _CONSTEXPR20_CONTAINER void _Check_offset_exclusive(const size_type _Off) const {
; 2330 :         // checks whether _Off is in the bounds of [0, size())
; 2331 :         if (_Mysize <= _Off) {
; 2332 :             _Xran();
; 2333 :         }
; 2334 :     }
; 2335 : 
; 2336 :     [[noreturn]] static void _Xran() {
; 2337 :         _Xout_of_range("invalid string position");
; 2338 :     }
; 2339 : 
; 2340 :     _CONSTEXPR20_CONTAINER size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2341 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2342 :         return (_STD min)(_Size, _Mysize - _Off);
; 2343 :     }
; 2344 : 
; 2345 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers
; 2347 : 
; 2348 :         _CONSTEXPR20_CONTAINER ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2349 : 
; 2350 :         value_type _Buf[_BUF_SIZE];
; 2351 :         pointer _Ptr;
; 2352 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2353 :     } _Bx;
; 2354 : 
; 2355 :     size_type _Mysize = 0; // current length of string

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 2284 :     _CONSTEXPR20_CONTAINER _String_val() noexcept : _Bx() {}

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 731  :     _NODISCARD static _CONSTEXPR20_DYNALLOC _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 732  :         return _Al;

  0000d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 733  :     }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 727  :     _NODISCARD static _CONSTEXPR20_DYNALLOC size_type max_size(const _Alloc&) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 728  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0000d	83 c8 ff	 or	 eax, -1

; 729  :     }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 838  :     _NODISCARD _CONSTEXPR20_DYNALLOC __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00018	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YAII@Z ; std::_Get_size_of_n<1>
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0002a	83 c4 04	 add	 esp, 4

; 840  :     }

  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXQADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXQADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00025	83 c4 08	 add	 esp, 8

; 836  :     }

  00028	83 c4 04	 add	 esp, 4
  0002b	3b ec		 cmp	 ebp, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXQADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator() noexcept {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c4 04	 add	 esp, 4
  0001e	3b ec		 cmp	 ebp, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2373 : [[noreturn]] inline void _Xlen_string() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2374 :     _Xlength_error("string too long");

  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00012	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlen_strin:

; 2375 : }

  00017	3b ec		 cmp	 ebp, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z PROC	; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 449  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 450  :         _Left = _Right;

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00013	8a 11		 mov	 dl, BYTE PTR [ecx]
  00015	88 10		 mov	 BYTE PTR [eax], dl

; 451  :     }

  00017	3b ec		 cmp	 ebp, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ENDP	; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAPADQADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$_Narrow_char_traits@DH@std@@SAPADQADID@Z PROC	; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 438  :         _Out_writes_all_(_Count) _Elem* const _First, size_t _Count, const _Elem _Ch) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 439  :         // assign _Count * _Ch to [_First, ...)
; 440  : #ifdef __cpp_lib_is_constant_evaluated
; 441  :         if (_STD is_constant_evaluated()) {

  0000d	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00012	0f b6 c0	 movzx	 eax, al
  00015	85 c0		 test	 eax, eax
  00017	74 17		 je	 SHORT $LN2@assign

; 442  :             return _Primary_char_traits::assign(_First, _Count, _Ch);

  00019	0f b6 4d 10	 movzx	 ecx, BYTE PTR __Ch$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00021	52		 push	 edx
  00022	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?assign@?$_Char_traits@DH@std@@SAPADQADID@Z ; std::_Char_traits<char,int>::assign
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002e	eb 15		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 443  :         }
; 444  : #endif // __cpp_lib_is_constant_evaluated
; 445  : 
; 446  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

  00030	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00033	51		 push	 ecx
  00034	0f be 55 10	 movsx	 edx, BYTE PTR __Ch$[ebp]
  00038	52		 push	 edx
  00039	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 _memset
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@assign:

; 447  :     }

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAPADQADID@Z ENDP	; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
_TEXT	SEGMENT
tv66 = -16						; size = 4
tv75 = -9						; size = 1
tv72 = -8						; size = 4
tv69 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 396  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 397  :         // find length of null-terminated string
; 398  : #if _HAS_CXX17
; 399  : #ifdef __cpp_char8_t
; 400  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 401  : #if _HAS_U8_INTRINSICS
; 402  :             return __builtin_u8strlen(_First);
; 403  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 404  :             return _Primary_char_traits::length(_First);
; 405  : #endif // _HAS_U8_INTRINSICS
; 406  :         } else
; 407  : #endif // __cpp_char8_t
; 408  :         {
; 409  :             return __builtin_strlen(_First);

  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	83 c1 01	 add	 ecx, 1
  0002d	89 4d f8	 mov	 DWORD PTR tv72[ebp], ecx
$LL3@length:
  00030	8b 55 fc	 mov	 edx, DWORD PTR tv69[ebp]
  00033	8a 02		 mov	 al, BYTE PTR [edx]
  00035	88 45 f7	 mov	 BYTE PTR tv75[ebp], al
  00038	83 45 fc 01	 add	 DWORD PTR tv69[ebp], 1
  0003c	80 7d f7 00	 cmp	 BYTE PTR tv75[ebp], 0
  00040	75 ee		 jne	 SHORT $LL3@length
  00042	8b 4d fc	 mov	 ecx, DWORD PTR tv69[ebp]
  00045	2b 4d f8	 sub	 ecx, DWORD PTR tv72[ebp]
  00048	89 4d f0	 mov	 DWORD PTR tv66[ebp], ecx
  0004b	8b 45 f0	 mov	 eax, DWORD PTR tv66[ebp]

; 410  :         }
; 411  : #else // _HAS_CXX17
; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 413  : #endif // _HAS_CXX17
; 414  :     }

  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQBD0I@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$_Narrow_char_traits@DH@std@@SAHQBD0I@Z PROC	; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 387  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 388  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 389  : #if _HAS_CXX17
; 390  :         return __builtin_memcmp(_First1, _First2, _Count);

  00015	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 _memcmp
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
  00029	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  0002c	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]

; 391  : #else // _HAS_CXX17
; 392  :         return _CSTD memcmp(_First1, _First2, _Count);
; 393  : #endif // _HAS_CXX17
; 394  :     }

  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?compare@?$_Narrow_char_traits@DH@std@@SAHQBD0I@Z ENDP	; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$_Char_traits@DH@std@@SAPADQADID@Z
_TEXT	SEGMENT
__Next$1 = -8						; size = 4
__Next$2 = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$_Char_traits@DH@std@@SAPADQADID@Z PROC	; std::_Char_traits<char,int>::assign, COMDAT

; 167  :         _Out_writes_all_(_Count) _Elem* const _First, size_t _Count, const _Elem _Ch) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00019	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 168  :         // assign _Count * _Ch to [_First, ...)
; 169  : #ifdef __cpp_lib_constexpr_string
; 170  :         if (_STD is_constant_evaluated()) {

  0001e	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00023	0f b6 c0	 movzx	 eax, al
  00026	85 c0		 test	 eax, eax
  00028	74 34		 je	 SHORT $LN8@assign

; 171  :             for (_Elem* _Next = _First; _Count > 0; --_Count, ++_Next) {

  0002a	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0002d	89 4d fc	 mov	 DWORD PTR __Next$2[ebp], ecx
  00030	eb 12		 jmp	 SHORT $LN4@assign
$LN2@assign:
  00032	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00035	83 ea 01	 sub	 edx, 1
  00038	89 55 0c	 mov	 DWORD PTR __Count$[ebp], edx
  0003b	8b 45 fc	 mov	 eax, DWORD PTR __Next$2[ebp]
  0003e	83 c0 01	 add	 eax, 1
  00041	89 45 fc	 mov	 DWORD PTR __Next$2[ebp], eax
$LN4@assign:
  00044	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00048	76 12		 jbe	 SHORT $LN3@assign

; 172  :                 _STD construct_at(_Next, _Ch);

  0004a	8d 4d 10	 lea	 ecx, DWORD PTR __Ch$[ebp]
  0004d	51		 push	 ecx
  0004e	8b 55 fc	 mov	 edx, DWORD PTR __Next$2[ebp]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 ??$construct_at@DABDX@std@@YAPADQADABD@Z ; std::construct_at<char,char const &,void>
  00057	83 c4 08	 add	 esp, 8

; 173  :             }

  0005a	eb d6		 jmp	 SHORT $LN2@assign
$LN3@assign:

; 174  :         } else

  0005c	eb 2a		 jmp	 SHORT $LN9@assign
$LN8@assign:

; 175  : #endif // __cpp_lib_constexpr_string
; 176  :         {
; 177  :             for (_Elem* _Next = _First; _Count > 0; --_Count, ++_Next) {

  0005e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00061	89 45 f8	 mov	 DWORD PTR __Next$1[ebp], eax
  00064	eb 12		 jmp	 SHORT $LN7@assign
$LN5@assign:
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00069	83 e9 01	 sub	 ecx, 1
  0006c	89 4d 0c	 mov	 DWORD PTR __Count$[ebp], ecx
  0006f	8b 55 f8	 mov	 edx, DWORD PTR __Next$1[ebp]
  00072	83 c2 01	 add	 edx, 1
  00075	89 55 f8	 mov	 DWORD PTR __Next$1[ebp], edx
$LN7@assign:
  00078	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0007c	76 0a		 jbe	 SHORT $LN9@assign

; 178  :                 *_Next = _Ch;

  0007e	8b 45 f8	 mov	 eax, DWORD PTR __Next$1[ebp]
  00081	8a 4d 10	 mov	 cl, BYTE PTR __Ch$[ebp]
  00084	88 08		 mov	 BYTE PTR [eax], cl

; 179  :             }

  00086	eb de		 jmp	 SHORT $LN5@assign
$LN9@assign:

; 180  :         }
; 181  : 
; 182  :         return _First;

  00088	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 183  :     }

  0008b	83 c4 08	 add	 esp, 8
  0008e	3b ec		 cmp	 ebp, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
?assign@?$_Char_traits@DH@std@@SAPADQADID@Z ENDP	; std::_Char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__Idx$1 = -16						; size = 4
__Idx$2 = -12						; size = 4
__Src$3 = -8						; size = 4
__Loop_forward$4 = -1					; size = 1
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 80   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 81   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 82   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 83   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 84   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 85   : #ifdef __cpp_lib_is_constant_evaluated
; 86   :         if (_STD is_constant_evaluated()) {

  00022	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00027	0f b6 c0	 movzx	 eax, al
  0002a	85 c0		 test	 eax, eax
  0002c	0f 84 b5 00 00
	00		 je	 $LN11@move

; 87   :             // dest: [_First1, _First1 + _Count)
; 88   :             // src: [_First2, _First2 + _Count)
; 89   :             // We need to handle overlapping ranges.
; 90   :             // If _First1 is in the src range, we need a backward loop.
; 91   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 92   : 
; 93   :             if (_First1 == _First2) {

  00032	8b 4d 08	 mov	 ecx, DWORD PTR __First1$[ebp]
  00035	3b 4d 0c	 cmp	 ecx, DWORD PTR __First2$[ebp]
  00038	75 08		 jne	 SHORT $LN12@move

; 94   :                 return _First1; // Self-assignment; either loop would work, but returning immediately is faster.

  0003a	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  0003d	e9 bc 00 00 00	 jmp	 $LN16@move
$LN12@move:

; 95   :             }
; 96   : 
; 97   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 98   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 99   :             bool _Loop_forward = true;

  00042	c6 45 ff 01	 mov	 BYTE PTR __Loop_forward$4[ebp], 1

; 100  : 
; 101  :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {

  00046	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00049	89 55 f8	 mov	 DWORD PTR __Src$3[ebp], edx
  0004c	eb 09		 jmp	 SHORT $LN4@move
$LN2@move:
  0004e	8b 45 f8	 mov	 eax, DWORD PTR __Src$3[ebp]
  00051	83 c0 01	 add	 eax, 1
  00054	89 45 f8	 mov	 DWORD PTR __Src$3[ebp], eax
$LN4@move:
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  0005a	03 4d 10	 add	 ecx, DWORD PTR __Count$[ebp]
  0005d	39 4d f8	 cmp	 DWORD PTR __Src$3[ebp], ecx
  00060	74 10		 je	 SHORT $LN3@move

; 102  :                 if (_First1 == _Src) {

  00062	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  00065	3b 55 f8	 cmp	 edx, DWORD PTR __Src$3[ebp]
  00068	75 06		 jne	 SHORT $LN13@move

; 103  :                     _Loop_forward = false;

  0006a	c6 45 ff 00	 mov	 BYTE PTR __Loop_forward$4[ebp], 0

; 104  :                     break;

  0006e	eb 02		 jmp	 SHORT $LN3@move
$LN13@move:

; 105  :                 }
; 106  :             }

  00070	eb dc		 jmp	 SHORT $LN2@move
$LN3@move:

; 107  : 
; 108  :             if (_Loop_forward) {

  00072	0f b6 45 ff	 movzx	 eax, BYTE PTR __Loop_forward$4[ebp]
  00076	85 c0		 test	 eax, eax
  00078	74 2e		 je	 SHORT $LN14@move

; 109  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {

  0007a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Idx$2[ebp], 0
  00081	eb 09		 jmp	 SHORT $LN7@move
$LN5@move:
  00083	8b 4d f4	 mov	 ecx, DWORD PTR __Idx$2[ebp]
  00086	83 c1 01	 add	 ecx, 1
  00089	89 4d f4	 mov	 DWORD PTR __Idx$2[ebp], ecx
$LN7@move:
  0008c	8b 55 f4	 mov	 edx, DWORD PTR __Idx$2[ebp]
  0008f	3b 55 10	 cmp	 edx, DWORD PTR __Count$[ebp]
  00092	73 12		 jae	 SHORT $LN6@move

; 110  :                     _First1[_Idx] = _First2[_Idx];

  00094	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00097	03 45 f4	 add	 eax, DWORD PTR __Idx$2[ebp]
  0009a	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  0009d	03 4d f4	 add	 ecx, DWORD PTR __Idx$2[ebp]
  000a0	8a 11		 mov	 dl, BYTE PTR [ecx]
  000a2	88 10		 mov	 BYTE PTR [eax], dl

; 111  :                 }

  000a4	eb dd		 jmp	 SHORT $LN5@move
$LN6@move:

; 112  :             } else {

  000a6	eb 3a		 jmp	 SHORT $LN15@move
$LN14@move:

; 113  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {

  000a8	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Idx$1[ebp], 0
  000af	eb 09		 jmp	 SHORT $LN10@move
$LN8@move:
  000b1	8b 45 f0	 mov	 eax, DWORD PTR __Idx$1[ebp]
  000b4	83 c0 01	 add	 eax, 1
  000b7	89 45 f0	 mov	 DWORD PTR __Idx$1[ebp], eax
$LN10@move:
  000ba	8b 4d f0	 mov	 ecx, DWORD PTR __Idx$1[ebp]
  000bd	3b 4d 10	 cmp	 ecx, DWORD PTR __Count$[ebp]
  000c0	73 20		 jae	 SHORT $LN15@move

; 114  :                     _First1[_Count - 1 - _Idx] = _First2[_Count - 1 - _Idx];

  000c2	8b 55 10	 mov	 edx, DWORD PTR __Count$[ebp]
  000c5	83 ea 01	 sub	 edx, 1
  000c8	2b 55 f0	 sub	 edx, DWORD PTR __Idx$1[ebp]
  000cb	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  000ce	83 e8 01	 sub	 eax, 1
  000d1	2b 45 f0	 sub	 eax, DWORD PTR __Idx$1[ebp]
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR __First1$[ebp]
  000d7	8b 75 0c	 mov	 esi, DWORD PTR __First2$[ebp]
  000da	8a 14 16	 mov	 dl, BYTE PTR [esi+edx]
  000dd	88 14 01	 mov	 BYTE PTR [ecx+eax], dl

; 115  :                 }

  000e0	eb cf		 jmp	 SHORT $LN8@move
$LN15@move:

; 116  :             }
; 117  : 
; 118  :             return _First1;

  000e2	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  000e5	eb 17		 jmp	 SHORT $LN16@move
$LN11@move:

; 119  :         }
; 120  : #endif // __cpp_lib_is_constant_evaluated
; 121  : 
; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000e7	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  000ee	51		 push	 ecx
  000ef	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  000f2	52		 push	 edx
  000f3	e8 00 00 00 00	 call	 _memmove
  000f8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 123  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 124  : 
; 125  :         return _First1;

  000fb	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
$LN16@move:

; 126  :     }

  000fe	5e		 pop	 esi
  000ff	83 c4 10	 add	 esp, 16			; 00000010H
  00102	3b ec		 cmp	 ebp, esp
  00104	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__Idx$1 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __0D019051_xstring
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #ifdef __cpp_lib_is_constant_evaluated
; 55   :         if (_STD is_constant_evaluated()) {

  00015	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0001a	0f b6 c0	 movzx	 eax, al
  0001d	85 c0		 test	 eax, eax
  0001f	74 31		 je	 SHORT $LN5@copy

; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap; see LWG-3085
; 57   :             for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {

  00021	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Idx$1[ebp], 0
  00028	eb 09		 jmp	 SHORT $LN4@copy
$LN2@copy:
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR __Idx$1[ebp]
  0002d	83 c1 01	 add	 ecx, 1
  00030	89 4d fc	 mov	 DWORD PTR __Idx$1[ebp], ecx
$LN4@copy:
  00033	8b 55 fc	 mov	 edx, DWORD PTR __Idx$1[ebp]
  00036	3b 55 10	 cmp	 edx, DWORD PTR __Count$[ebp]
  00039	73 12		 jae	 SHORT $LN3@copy

; 58   :                 _First1[_Idx] = _First2[_Idx];

  0003b	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  0003e	03 45 fc	 add	 eax, DWORD PTR __Idx$1[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  00044	03 4d fc	 add	 ecx, DWORD PTR __Idx$1[ebp]
  00047	8a 11		 mov	 dl, BYTE PTR [ecx]
  00049	88 10		 mov	 BYTE PTR [eax], dl

; 59   :             }

  0004b	eb dd		 jmp	 SHORT $LN2@copy
$LN3@copy:

; 60   : 
; 61   :             return _First1;

  0004d	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00050	eb 17		 jmp	 SHORT $LN6@copy
$LN5@copy:

; 62   :         }
; 63   : #endif // __cpp_lib_is_constant_evaluated
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00052	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00055	50		 push	 eax
  00056	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  00059	51		 push	 ecx
  0005a	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  0005d	52		 push	 edx
  0005e	e8 00 00 00 00	 call	 _memcpy
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

  00066	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
$LN6@copy:

; 69   :     }

  00069	83 c4 04	 add	 esp, 4
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 420  : [[noreturn]] inline void _Throw_tree_length_error() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __69958C8C_xtree
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 421  :     _Xlength_error("map/set too long");

  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00012	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Throw_tree:

; 422  : }

  00017	3b ec		 cmp	 ebp, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
tv93 = -16						; size = 4
tv75 = -12						; size = 4
tv77 = -8						; size = 4
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __12269DE6_xutility
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 152  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 153  :     if (_STD is_constant_evaluated()) {

  00021	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00026	0f b6 c0	 movzx	 eax, al
  00029	85 c0		 test	 eax, eax
  0002b	74 30		 je	 SHORT $LN2@Construct_

; 154  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
  00036	83 c4 04	 add	 esp, 4
  00039	89 45 f8	 mov	 DWORD PTR tv77[ebp], eax
  0003c	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
  00045	83 c4 04	 add	 esp, 4
  00048	89 45 f4	 mov	 DWORD PTR tv75[ebp], eax
  0004b	8b 45 f8	 mov	 eax, DWORD PTR tv77[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR tv75[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$construct_at@U_Container_proxy@std@@PAU_Container_base12@2@X@std@@YAPAU_Container_proxy@0@QAU10@$$QAPAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>
  00058	83 c4 08	 add	 esp, 8

; 155  :     } else

  0005b	eb 40		 jmp	 SHORT $LN4@Construct_
$LN2@Construct_:

; 151  :     is_nothrow_constructible_v<_Ty, _Types...>) {

  0005d	8b 55 08	 mov	 edx, DWORD PTR __Obj$[ebp]
  00060	52		 push	 edx
  00061	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
  00066	83 c4 04	 add	 esp, 4
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
  0006f	83 c4 04	 add	 esp, 4
  00072	50		 push	 eax
  00073	6a 08		 push	 8
  00075	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0007a	83 c4 08	 add	 esp, 8
  0007d	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00080	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008e	89 4d f0	 mov	 DWORD PTR tv93[ebp], ecx
  00091	8b 55 f0	 mov	 edx, DWORD PTR tv93[ebp]
  00094	52		 push	 edx
  00095	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00098	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
$LN4@Construct_:

; 156  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 157  :     {
; 158  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 159  :     }
; 160  : }

  0009d	83 c4 10	 add	 esp, 16			; 00000010H
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __E458E21C_xstddef
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 276  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Basic_container_proxy_ptr12@std@@IAE@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT
; _this$ = ecx

; 1323 :     _CONSTEXPR20_CONTAINER _Basic_container_proxy_ptr12()             = default;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1316 :     _Container_proxy* _Ptr = nullptr;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1323 :     _CONSTEXPR20_CONTAINER _Basic_container_proxy_ptr12()             = default;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0_Basic_container_proxy_ptr12@std@@IAE@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ PROC	; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; _this$ = ecx

; 1318 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1319 :         _Ptr = nullptr;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1320 :     }

  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ENDP	; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Lock$ = -16						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ PROC	; std::_Iterator_base12::_Orphan_me_locked_v3, COMDAT
; _this$ = ecx

; 1229 :     void _Orphan_me_locked_v3() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1230 :         _Lockit _Lock(_LOCK_DEBUG);

  00032	8b f4		 mov	 esi, esp
  00034	6a 03		 push	 3
  00036	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1231 :         _Orphan_me_unlocked_v3();

  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1232 :     }

  0004e	8b f4		 mov	 esi, esp
  00050	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	52		 push	 edx
  00061	8b cd		 mov	 ecx, ebp
  00063	50		 push	 eax
  00064	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Orphan_me_
  0006a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006f	58		 pop	 eax
  00070	5a		 pop	 edx
  00071	5e		 pop	 esi
  00072	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00075	33 cd		 xor	 ecx, ebp
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	83 c4 14	 add	 esp, 20			; 00000014H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
  0008a	66 90		 npad	 2
$LN5@Orphan_me_:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@Orphan_me_
$LN4@Orphan_me_:
  00094	f0 ff ff ff	 DD	 -16			; fffffff0H
  00098	04 00 00 00	 DD	 4
  0009c	00 00 00 00	 DD	 $LN3@Orphan_me_
$LN3@Orphan_me_:
  000a0	5f		 DB	 95			; 0000005fH
  000a1	4c		 DB	 76			; 0000004cH
  000a2	6f		 DB	 111			; 0000006fH
  000a3	63		 DB	 99			; 00000063H
  000a4	6b		 DB	 107			; 0000006bH
  000a5	00		 DB	 0
?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ ENDP	; std::_Iterator_base12::_Orphan_me_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Temp$1 = -12						; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ PROC ; std::_Iterator_base12::_Orphan_me_unlocked_v3, COMDAT
; _this$ = ecx

; 1212 :     _CONSTEXPR20_CONTAINER void _Orphan_me_unlocked_v3() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00024	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1213 :         if (!_Myproxy) { // already orphaned

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002f	75 05		 jne	 SHORT $LN10@Orphan_me_

; 1214 :             return;

  00031	e9 ae 00 00 00	 jmp	 $LN13@Orphan_me_
$LN10@Orphan_me_:

; 1215 :         }
; 1216 : 
; 1217 :         // adopted, remove self from list
; 1218 :         _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003b	83 c2 04	 add	 edx, 4
  0003e	89 55 f8	 mov	 DWORD PTR __Pnext$[ebp], edx
$LN2@Orphan_me_:

; 1219 :         while (*_Pnext && *_Pnext != this) {

  00041	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00044	83 38 00	 cmp	 DWORD PTR [eax], 0
  00047	74 1d		 je	 SHORT $LN6@Orphan_me_
  00049	8b 4d f8	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	3b 55 fc	 cmp	 edx, DWORD PTR _this$[ebp]
  00051	74 13		 je	 SHORT $LN6@Orphan_me_

; 1220 :             const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

  00053	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f4	 mov	 DWORD PTR __Temp$1[ebp], ecx

; 1221 :             _Pnext           = &_Temp->_Mynextiter;

  0005b	8b 55 f4	 mov	 edx, DWORD PTR __Temp$1[ebp]
  0005e	83 c2 04	 add	 edx, 4
  00061	89 55 f8	 mov	 DWORD PTR __Pnext$[ebp], edx

; 1222 :         }

  00064	eb db		 jmp	 SHORT $LN2@Orphan_me_
$LN6@Orphan_me_:

; 1223 : 
; 1224 :         _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  00066	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00069	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006c	74 02		 je	 SHORT $LN9@Orphan_me_
  0006e	eb 5c		 jmp	 SHORT $LN4@Orphan_me_
$LN9@Orphan_me_:
  00070	8b f4		 mov	 esi, esp
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0007c	6a 00		 push	 0
  0007e	68 c8 04 00 00	 push	 1224			; 000004c8H
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00088	6a 02		 push	 2
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00090	83 c4 18	 add	 esp, 24			; 00000018H
  00093	3b f4		 cmp	 esi, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	83 f8 01	 cmp	 eax, 1
  0009d	75 01		 jne	 SHORT $LN14@Orphan_me_
  0009f	cc		 int	 3
$LN14@Orphan_me_:
  000a0	8b f4		 mov	 esi, esp
  000a2	6a 00		 push	 0
  000a4	68 c8 04 00 00	 push	 1224			; 000004c8H
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_1FM@FOFDAEGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000be	83 c4 14	 add	 esp, 20			; 00000014H
  000c1	3b f4		 cmp	 esi, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	33 d2		 xor	 edx, edx
  000ca	75 a4		 jne	 SHORT $LN9@Orphan_me_
$LN4@Orphan_me_:
  000cc	33 c0		 xor	 eax, eax
  000ce	75 96		 jne	 SHORT $LN6@Orphan_me_

; 1225 :         *_Pnext  = _Mynextiter;

  000d0	8b 4d f8	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000d3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000d9	89 01		 mov	 DWORD PTR [ecx], eax

; 1226 :         _Myproxy = nullptr;

  000db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN13@Orphan_me_:

; 1227 :     }

  000e4	5e		 pop	 esi
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e8	3b ec		 cmp	 ebp, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c3		 ret	 0
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ENDP ; std::_Iterator_base12::_Orphan_me_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$ = -16						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__Parent$ = 8						; size = 4
?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_locked, COMDAT
; _this$ = ecx

; 1207 :     void _Adopt_locked(const _Container_base12* _Parent) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1208 :         _Lockit _Lock(_LOCK_DEBUG);

  00032	8b f4		 mov	 esi, esp
  00034	6a 03		 push	 3
  00036	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1209 :         _Adopt_unlocked(_Parent);

  00046	8b 45 08	 mov	 eax, DWORD PTR __Parent$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1210 :     }

  00052	8b f4		 mov	 esi, esp
  00054	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	52		 push	 edx
  00065	8b cd		 mov	 ecx, ebp
  00067	50		 push	 eax
  00068	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Adopt_lock
  0006e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00073	58		 pop	 eax
  00074	5a		 pop	 edx
  00075	5e		 pop	 esi
  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	83 c4 14	 add	 esp, 20			; 00000014H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
$LN5@Adopt_lock:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@Adopt_lock
$LN4@Adopt_lock:
  00098	f0 ff ff ff	 DD	 -16			; fffffff0H
  0009c	04 00 00 00	 DD	 4
  000a0	00 00 00 00	 DD	 $LN3@Adopt_lock
$LN3@Adopt_lock:
  000a4	5f		 DB	 95			; 0000005fH
  000a5	4c		 DB	 76			; 0000004cH
  000a6	6f		 DB	 111			; 0000006fH
  000a7	63		 DB	 99			; 00000063H
  000a8	6b		 DB	 107			; 0000006bH
  000a9	00		 DB	 0
?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Parent_proxy$ = -8					; size = 4
_this$ = -4						; size = 4
__Parent$ = 8						; size = 4
?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_unlocked, COMDAT
; _this$ = ecx

; 1190 :     _CONSTEXPR20_CONTAINER void _Adopt_unlocked(const _Container_base12* _Parent) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1191 :         if (!_Parent) {

  00021	83 7d 08 00	 cmp	 DWORD PTR __Parent$[ebp], 0
  00025	75 0a		 jne	 SHORT $LN2@Adopt_unlo

; 1192 :             _Orphan_me_unlocked_v3();

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1193 :             return;

  0002f	eb 3f		 jmp	 SHORT $LN5@Adopt_unlo
$LN2@Adopt_unlo:

; 1194 :         }
; 1195 : 
; 1196 :         _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00031	8b 45 08	 mov	 eax, DWORD PTR __Parent$[ebp]
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	89 4d f8	 mov	 DWORD PTR __Parent_proxy$[ebp], ecx

; 1197 :         if (_Myproxy != _Parent_proxy) { // change parentage

  00039	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	8b 02		 mov	 eax, DWORD PTR [edx]
  0003e	3b 45 f8	 cmp	 eax, DWORD PTR __Parent_proxy$[ebp]
  00041	74 2d		 je	 SHORT $LN5@Adopt_unlo

; 1198 :             if (_Myproxy) { // adopted, remove self from list

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00049	74 08		 je	 SHORT $LN4@Adopt_unlo

; 1199 :                 _Orphan_me_unlocked_v3();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN4@Adopt_unlo:

; 1200 :             }
; 1201 :             _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  00053	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00056	8b 45 f8	 mov	 eax, DWORD PTR __Parent_proxy$[ebp]
  00059	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005c	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1202 :             _Parent_proxy->_Myfirstiter = this;

  0005f	8b 55 f8	 mov	 edx, DWORD PTR __Parent_proxy$[ebp]
  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1203 :             _Myproxy                    = _Parent_proxy;

  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 55 f8	 mov	 edx, DWORD PTR __Parent_proxy$[ebp]
  0006e	89 11		 mov	 DWORD PTR [ecx], edx
$LN5@Adopt_unlo:

; 1204 :         }
; 1205 :     }

  00070	83 c4 08	 add	 esp, 8
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z
_TEXT	SEGMENT
__Lock$ = -16						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z PROC	; std::_Iterator_base12::_Assign_locked, COMDAT
; _this$ = ecx

; 1185 :     void _Assign_locked(const _Iterator_base12& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1186 :         _Lockit _Lock(_LOCK_DEBUG);

  00032	8b f4		 mov	 esi, esp
  00034	6a 03		 push	 3
  00036	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1187 :         _Assign_unlocked(_Right);

  00046	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_unlocked

; 1188 :     }

  00052	8b f4		 mov	 esi, esp
  00054	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	52		 push	 edx
  00065	8b cd		 mov	 ecx, ebp
  00067	50		 push	 eax
  00068	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Assign_loc
  0006e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00073	58		 pop	 eax
  00074	5a		 pop	 edx
  00075	5e		 pop	 esi
  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	83 c4 14	 add	 esp, 20			; 00000014H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
$LN5@Assign_loc:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@Assign_loc
$LN4@Assign_loc:
  00098	f0 ff ff ff	 DD	 -16			; fffffff0H
  0009c	04 00 00 00	 DD	 4
  000a0	00 00 00 00	 DD	 $LN3@Assign_loc
$LN3@Assign_loc:
  000a4	5f		 DB	 95			; 0000005fH
  000a5	4c		 DB	 76			; 0000004cH
  000a6	6f		 DB	 111			; 0000006fH
  000a7	63		 DB	 99			; 00000063H
  000a8	6b		 DB	 107			; 0000006bH
  000a9	00		 DB	 0
?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z ENDP	; std::_Iterator_base12::_Assign_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z PROC ; std::_Iterator_base12::_Assign_unlocked, COMDAT
; _this$ = ecx

; 1173 :     _CONSTEXPR20_CONTAINER void _Assign_unlocked(const _Iterator_base12& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1174 :         if (_Myproxy == _Right._Myproxy) {

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	8b 10		 mov	 edx, DWORD PTR [eax]
  00020	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00022	75 02		 jne	 SHORT $LN2@Assign_unl

; 1175 :             return;

  00024	eb 22		 jmp	 SHORT $LN5@Assign_unl
$LN2@Assign_unl:

; 1176 :         }
; 1177 : 
; 1178 :         if (_Right._Myproxy) {

  00026	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00029	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002c	74 12		 je	 SHORT $LN3@Assign_unl

; 1179 :             _Adopt_unlocked(_Right._Myproxy->_Mycont);

  0002e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00031	8b 11		 mov	 edx, DWORD PTR [ecx]
  00033	8b 02		 mov	 eax, DWORD PTR [edx]
  00035	50		 push	 eax
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1180 :         } else { // becoming invalid, disown current parent

  0003e	eb 08		 jmp	 SHORT $LN5@Assign_unl
$LN3@Assign_unl:

; 1181 :             _Orphan_me_unlocked_v3();

  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN5@Assign_unl:

; 1182 :         }
; 1183 :     }

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z ENDP ; std::_Iterator_base12::_Assign_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 1162 :     _CONSTEXPR20_CONTAINER const _Container_base12* _Getcont() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1163 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 38 00	 cmp	 DWORD PTR [eax], 0
  00027	74 0c		 je	 SHORT $LN3@Getcont
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002e	8b 02		 mov	 eax, DWORD PTR [edx]
  00030	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
  00033	eb 07		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@Getcont:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv68[ebp]

; 1164 :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 1142 :     _CONSTEXPR20_CONTAINER void _Adopt(const _Container_base12* _Parent) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1143 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1144 :         if (_STD is_constant_evaluated()) {

  00018	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0001d	0f b6 c0	 movzx	 eax, al
  00020	85 c0		 test	 eax, eax
  00022	74 0e		 je	 SHORT $LN2@Adopt

; 1145 :             _Adopt_unlocked(_Parent);

  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Parent$[ebp]
  00027	51		 push	 ecx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1146 :         } else

  00030	eb 0c		 jmp	 SHORT $LN4@Adopt
$LN2@Adopt:

; 1147 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1148 :         {
; 1149 :             _Adopt_locked(_Parent);

  00032	8b 55 08	 mov	 edx, DWORD PTR __Parent$[ebp]
  00035	52		 push	 edx
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
$LN4@Adopt:

; 1150 :         }
; 1151 :     }

  0003e	83 c4 04	 add	 esp, 4
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 1131 :     _CONSTEXPR20_CONTAINER ~_Iterator_base12() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1132 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1133 :         if (_STD is_constant_evaluated()) {

  00018	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0001d	0f b6 c0	 movzx	 eax, al
  00020	85 c0		 test	 eax, eax
  00022	74 0a		 je	 SHORT $LN2@Iterator_b

; 1134 :             _Orphan_me_unlocked_v3();

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1135 :         } else

  0002c	eb 08		 jmp	 SHORT $LN4@Iterator_b
$LN2@Iterator_b:

; 1136 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1137 :         {
; 1138 :             _Orphan_me_locked_v3();

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
$LN4@Iterator_b:

; 1139 :         }
; 1140 :     }

  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 1114 :     _CONSTEXPR20_CONTAINER _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1115 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1116 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1117 :         if (_STD is_constant_evaluated()) {

  00018	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0001d	0f b6 c0	 movzx	 eax, al
  00020	85 c0		 test	 eax, eax
  00022	74 0e		 je	 SHORT $LN2@operator

; 1118 :             _Assign_unlocked(_Right);

  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00027	51		 push	 ecx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_unlocked

; 1119 :         } else

  00030	eb 0c		 jmp	 SHORT $LN3@operator
$LN2@operator:

; 1120 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1121 :         {
; 1122 :             _Assign_locked(_Right);

  00032	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00035	52		 push	 edx
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_locked
$LN3@operator:

; 1123 :         }
; 1124 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1125 :         _Myproxy = _Right._Myproxy;
; 1126 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1127 :         return *this;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 1128 :     }

  00041	83 c4 04	 add	 esp, 4
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1110 :     _CONSTEXPR20_CONTAINER _Iterator_base12(const _Iterator_base12& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1113 : 
; 1114 :     _CONSTEXPR20_CONTAINER _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1115 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1116 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1117 :         if (_STD is_constant_evaluated()) {
; 1118 :             _Assign_unlocked(_Right);
; 1119 :         } else
; 1120 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1121 :         {
; 1122 :             _Assign_locked(_Right);
; 1123 :         }
; 1124 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1125 :         _Myproxy = _Right._Myproxy;
; 1126 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1127 :         return *this;
; 1128 :     }
; 1129 : 
; 1130 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1131 :     _CONSTEXPR20_CONTAINER ~_Iterator_base12() noexcept {
; 1132 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1133 :         if (_STD is_constant_evaluated()) {
; 1134 :             _Orphan_me_unlocked_v3();
; 1135 :         } else
; 1136 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1137 :         {
; 1138 :             _Orphan_me_locked_v3();
; 1139 :         }
; 1140 :     }
; 1141 : 
; 1142 :     _CONSTEXPR20_CONTAINER void _Adopt(const _Container_base12* _Parent) noexcept {
; 1143 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1144 :         if (_STD is_constant_evaluated()) {
; 1145 :             _Adopt_unlocked(_Parent);
; 1146 :         } else
; 1147 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1148 :         {
; 1149 :             _Adopt_locked(_Parent);
; 1150 :         }
; 1151 :     }
; 1152 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1153 :     _CONSTEXPR20_CONTAINER void _Adopt(const _Container_base12* _Parent) noexcept {
; 1154 :         if (_Parent) { // have a parent, do adoption
; 1155 :             _Myproxy = _Parent->_Myproxy;
; 1156 :         } else { // no future parent, just disown current parent
; 1157 :             _Myproxy = nullptr;
; 1158 :         }
; 1159 :     }
; 1160 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1161 : 
; 1162 :     _CONSTEXPR20_CONTAINER const _Container_base12* _Getcont() const noexcept {
; 1163 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1164 :     }
; 1165 : 
; 1166 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1167 : 
; 1168 :     mutable _Container_proxy* _Myproxy    = nullptr;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1169 :     mutable _Iterator_base12* _Mynextiter = nullptr;

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 1111 :         *this = _Right;

  0002b	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  0002e	52		 push	 edx
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 1112 :     }

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1108 :     _CONSTEXPR20_CONTAINER _Iterator_base12() noexcept = default; // construct orphaned iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1109 : 
; 1110 :     _CONSTEXPR20_CONTAINER _Iterator_base12(const _Iterator_base12& _Right) noexcept {
; 1111 :         *this = _Right;
; 1112 :     }
; 1113 : 
; 1114 :     _CONSTEXPR20_CONTAINER _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1115 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1116 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1117 :         if (_STD is_constant_evaluated()) {
; 1118 :             _Assign_unlocked(_Right);
; 1119 :         } else
; 1120 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1121 :         {
; 1122 :             _Assign_locked(_Right);
; 1123 :         }
; 1124 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1125 :         _Myproxy = _Right._Myproxy;
; 1126 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1127 :         return *this;
; 1128 :     }
; 1129 : 
; 1130 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1131 :     _CONSTEXPR20_CONTAINER ~_Iterator_base12() noexcept {
; 1132 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1133 :         if (_STD is_constant_evaluated()) {
; 1134 :             _Orphan_me_unlocked_v3();
; 1135 :         } else
; 1136 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1137 :         {
; 1138 :             _Orphan_me_locked_v3();
; 1139 :         }
; 1140 :     }
; 1141 : 
; 1142 :     _CONSTEXPR20_CONTAINER void _Adopt(const _Container_base12* _Parent) noexcept {
; 1143 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1144 :         if (_STD is_constant_evaluated()) {
; 1145 :             _Adopt_unlocked(_Parent);
; 1146 :         } else
; 1147 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1148 :         {
; 1149 :             _Adopt_locked(_Parent);
; 1150 :         }
; 1151 :     }
; 1152 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1153 :     _CONSTEXPR20_CONTAINER void _Adopt(const _Container_base12* _Parent) noexcept {
; 1154 :         if (_Parent) { // have a parent, do adoption
; 1155 :             _Myproxy = _Parent->_Myproxy;
; 1156 :         } else { // no future parent, just disown current parent
; 1157 :             _Myproxy = nullptr;
; 1158 :         }
; 1159 :     }
; 1160 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1161 : 
; 1162 :     _CONSTEXPR20_CONTAINER const _Container_base12* _Getcont() const noexcept {
; 1163 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1164 :     }
; 1165 : 
; 1166 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1167 : 
; 1168 :     mutable _Container_proxy* _Myproxy    = nullptr;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1169 :     mutable _Iterator_base12* _Mynextiter = nullptr;

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 1108 :     _CONSTEXPR20_CONTAINER _Iterator_base12() noexcept = default; // construct orphaned iterator

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z
_TEXT	SEGMENT
__Lock$ = -16						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_locked, COMDAT
; _this$ = ecx

; 1100 :     void _Swap_proxy_and_iterators_locked(_Container_base12& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1101 :         _Lockit _Lock(_LOCK_DEBUG);

  00032	8b f4		 mov	 esi, esp
  00034	6a 03		 push	 3
  00036	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1102 :         _Swap_proxy_and_iterators_unlocked(_Right);

  00046	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked

; 1103 :     }

  00052	8b f4		 mov	 esi, esp
  00054	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	52		 push	 edx
  00065	8b cd		 mov	 ecx, ebp
  00067	50		 push	 eax
  00068	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Swap_proxy
  0006e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00073	58		 pop	 eax
  00074	5a		 pop	 edx
  00075	5e		 pop	 esi
  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	83 c4 14	 add	 esp, 20			; 00000014H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
$LN5@Swap_proxy:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@Swap_proxy
$LN4@Swap_proxy:
  00098	f0 ff ff ff	 DD	 -16			; fffffff0H
  0009c	04 00 00 00	 DD	 4
  000a0	00 00 00 00	 DD	 $LN3@Swap_proxy
$LN3@Swap_proxy:
  000a4	5f		 DB	 95			; 0000005fH
  000a5	4c		 DB	 76			; 0000004cH
  000a6	6f		 DB	 111			; 0000006fH
  000a7	63		 DB	 99			; 00000063H
  000a8	6b		 DB	 107			; 0000006bH
  000a9	00		 DB	 0
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Lock$ = -16						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT
; _this$ = ecx

; 1095 :     void _Orphan_all_locked_v3() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1096 :         _Lockit _Lock(_LOCK_DEBUG);

  00032	8b f4		 mov	 esi, esp
  00034	6a 03		 push	 3
  00036	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1097 :         _Orphan_all_unlocked_v3();

  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1098 :     }

  0004e	8b f4		 mov	 esi, esp
  00050	8d 4d f0	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	52		 push	 edx
  00061	8b cd		 mov	 ecx, ebp
  00063	50		 push	 eax
  00064	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Orphan_all
  0006a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006f	58		 pop	 eax
  00070	5a		 pop	 edx
  00071	5e		 pop	 esi
  00072	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00075	33 cd		 xor	 ecx, ebp
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	83 c4 14	 add	 esp, 20			; 00000014H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
  0008a	66 90		 npad	 2
$LN5@Orphan_all:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@Orphan_all
$LN4@Orphan_all:
  00094	f0 ff ff ff	 DD	 -16			; fffffff0H
  00098	04 00 00 00	 DD	 4
  0009c	00 00 00 00	 DD	 $LN3@Orphan_all
$LN3@Orphan_all:
  000a0	5f		 DB	 95			; 0000005fH
  000a1	4c		 DB	 76			; 0000004cH
  000a2	6f		 DB	 111			; 0000006fH
  000a3	63		 DB	 99			; 00000063H
  000a4	6b		 DB	 107			; 0000006bH
  000a5	00		 DB	 0
?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked, COMDAT
; _this$ = ecx

; 1262 : _CONSTEXPR20_CONTAINER void _Container_base12::_Swap_proxy_and_iterators_unlocked(_Container_base12& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1263 :     _Container_proxy* _Temp = _Myproxy;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d f8	 mov	 DWORD PTR __Temp$[ebp], ecx

; 1264 :     _Myproxy                = _Right._Myproxy;

  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	89 0a		 mov	 DWORD PTR [edx], ecx

; 1265 :     _Right._Myproxy         = _Temp;

  00033	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00036	8b 45 f8	 mov	 eax, DWORD PTR __Temp$[ebp]
  00039	89 02		 mov	 DWORD PTR [edx], eax

; 1266 : 
; 1267 :     if (_Myproxy) {

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00041	74 0a		 je	 SHORT $LN2@Swap_proxy

; 1268 :         _Myproxy->_Mycont = this;

  00043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00046	8b 02		 mov	 eax, DWORD PTR [edx]
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	89 08		 mov	 DWORD PTR [eax], ecx
$LN2@Swap_proxy:

; 1269 :     }
; 1270 : 
; 1271 :     if (_Right._Myproxy) {

  0004d	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00050	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00053	74 0a		 je	 SHORT $LN4@Swap_proxy

; 1272 :         _Right._Myproxy->_Mycont = &_Right;

  00055	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  0005d	89 11		 mov	 DWORD PTR [ecx], edx
$LN4@Swap_proxy:

; 1273 :     }
; 1274 : }

  0005f	83 c4 08	 add	 esp, 8
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT
; _this$ = ecx

; 1237 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1238 :     if (!_Myproxy) { // no proxy, already done

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 38 00	 cmp	 DWORD PTR [eax], 0
  00027	75 02		 jne	 SHORT $LN5@Orphan_all

; 1239 :         return;

  00029	eb 3b		 jmp	 SHORT $LN6@Orphan_all
$LN5@Orphan_all:

; 1240 :     }
; 1241 : 
; 1242 :     // proxy allocated, drain it
; 1243 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	83 c2 04	 add	 edx, 4
  00033	89 55 f8	 mov	 DWORD PTR __Pnext$1[ebp], edx
  00036	eb 0d		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  00038	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	8b 55 f8	 mov	 edx, DWORD PTR __Pnext$1[ebp]
  00040	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00043	89 02		 mov	 DWORD PTR [edx], eax
$LN4@Orphan_all:
  00045	8b 4d f8	 mov	 ecx, DWORD PTR __Pnext$1[ebp]
  00048	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0004b	74 0d		 je	 SHORT $LN3@Orphan_all

; 1244 :         _Pnext->_Myproxy = nullptr;

  0004d	8b 55 f8	 mov	 edx, DWORD PTR __Pnext$1[ebp]
  00050	8b 02		 mov	 eax, DWORD PTR [edx]
  00052	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1245 :     }

  00058	eb de		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1246 :     _Myproxy->_Myfirstiter = nullptr;

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
$LN6@Orphan_all:

; 1247 : }

  00066	83 c4 08	 add	 esp, 8
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx

; 1276 : _CONSTEXPR20_CONTAINER void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1277 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1278 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1279 :     if (_STD is_constant_evaluated()) {

  00018	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0001d	0f b6 c0	 movzx	 eax, al
  00020	85 c0		 test	 eax, eax
  00022	74 0e		 je	 SHORT $LN2@Swap_proxy

; 1280 :         _Swap_proxy_and_iterators_unlocked(_Right);

  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00027	51		 push	 ecx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked

; 1281 :     } else

  00030	eb 0c		 jmp	 SHORT $LN4@Swap_proxy
$LN2@Swap_proxy:

; 1282 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1283 :     {
; 1284 :         _Swap_proxy_and_iterators_locked(_Right);

  00032	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00035	52		 push	 edx
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked
$LN4@Swap_proxy:

; 1285 :     }
; 1286 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1287 :     _Swap_proxy_and_iterators_unlocked(_Right);
; 1288 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1289 : }

  0003e	83 c4 04	 add	 esp, 4
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 1249 : _CONSTEXPR20_CONTAINER void _Container_base12::_Orphan_all() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1250 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1251 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1252 :     if (_STD is_constant_evaluated()) {

  00018	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0001d	0f b6 c0	 movzx	 eax, al
  00020	85 c0		 test	 eax, eax
  00022	74 0a		 je	 SHORT $LN2@Orphan_all

; 1253 :         _Orphan_all_unlocked_v3();

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1254 :     } else

  0002c	eb 08		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 1255 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1256 :     {
; 1257 :         _Orphan_all_locked_v3();

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_locked_v3
$LN4@Orphan_all:

; 1258 :     }
; 1259 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1260 : }

  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1065 : 
; 1066 :     _Container_base12(const _Container_base12&) = delete;
; 1067 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1068 : 
; 1069 :     _CONSTEXPR20_CONTAINER void _Orphan_all() noexcept;
; 1070 :     _CONSTEXPR20_CONTAINER void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1071 : 
; 1072 :     template <class _Alloc>
; 1073 :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(_Alloc&& _Al) {
; 1074 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1075 :         _Construct_in_place(*_New_proxy, this);
; 1076 :         _Myproxy            = _New_proxy;
; 1077 :         _New_proxy->_Mycont = this;
; 1078 :     }
; 1079 : 
; 1080 :     template <class _Alloc>
; 1081 :     _CONSTEXPR20_CONTAINER void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1082 :         // pre: no iterators refer to the existing proxy
; 1083 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1084 :         _Construct_in_place(*_New_proxy, this);
; 1085 :         _New_proxy->_Mycont = this;
; 1086 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1087 :     }
; 1088 : 
; 1089 :     _Container_proxy* _Myproxy = nullptr;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1064 :     _CONSTEXPR20_CONTAINER _Container_base12() noexcept = default;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Mycont_$ = 8						; size = 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Mycont_$[ebp]
  0001e	89 08		 mov	 DWORD PTR [eax], ecx

; 1057 : 
; 1058 :     const _Container_base12* _Mycont       = nullptr;
; 1059 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 1056 :     _CONSTEXPR20_CONTAINER _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Convert_size@I@std@@YAII@Z
_TEXT	SEGMENT
__Len$ = 8						; size = 4
??$_Convert_size@I@std@@YAII@Z PROC			; std::_Convert_size<unsigned int>, COMDAT

; 978  : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 979  :     // convert size_t to size_t, unchanged
; 980  :     return _Len;

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Len$[ebp]

; 981  : }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Convert_size@I@std@@YAII@Z ENDP			; std::_Convert_size<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -16					; size = 4
__Min_back_shift$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Ptr_user$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 153  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  0001d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 154  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 155  :     _Bytes += _Non_user_size;

  00022	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	83 c1 27	 add	 ecx, 39			; 00000027H
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Bytes$[ebp]
  0002d	89 0a		 mov	 DWORD PTR [edx], ecx

; 156  : 
; 157  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	89 4d fc	 mov	 DWORD PTR __Ptr_user$[ebp], ecx

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00037	ba 04 00 00 00	 mov	 edx, 4
  0003c	6b c2 ff	 imul	 eax, edx, -1
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __Ptr_user$[ebp]
  00042	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  00045	89 55 f8	 mov	 DWORD PTR __Ptr_container$[ebp], edx
$LN4@Adjust_man:

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	6b c8 fe	 imul	 ecx, eax, -2
  00050	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_user$[ebp]
  00053	81 3c 0a fa fa
	fa fa		 cmp	 DWORD PTR [edx+ecx], -84215046 ; fafafafaH
  0005a	75 02		 jne	 SHORT $LN7@Adjust_man
  0005c	eb 5c		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  0005e	8b f4		 mov	 esi, esp
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0006a	6a 00		 push	 0
  0006c	68 a2 00 00 00	 push	 162			; 000000a2H
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00076	6a 02		 push	 2
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0007e	83 c4 18	 add	 esp, 24			; 00000018H
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	83 f8 01	 cmp	 eax, 1
  0008b	75 01		 jne	 SHORT $LN19@Adjust_man
  0008d	cc		 int	 3
$LN19@Adjust_man:
  0008e	8b f4		 mov	 esi, esp
  00090	6a 00		 push	 0
  00092	68 a2 00 00 00	 push	 162			; 000000a2H
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000ac	83 c4 14	 add	 esp, 20			; 00000014H
  000af	3b f4		 cmp	 esi, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	33 c9		 xor	 ecx, ecx
  000b8	75 a4		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  000ba	33 d2		 xor	 edx, edx
  000bc	75 8a		 jne	 SHORT $LN4@Adjust_man

; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000be	c7 45 f4 08 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 8

; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c5	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ca	2b 4d f8	 sub	 ecx, DWORD PTR __Ptr_container$[ebp]
  000cd	89 4d f0	 mov	 DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d0	83 7d f0 08	 cmp	 DWORD PTR __Back_shift$[ebp], 8
  000d4	72 08		 jb	 SHORT $LN13@Adjust_man
  000d6	83 7d f0 27	 cmp	 DWORD PTR __Back_shift$[ebp], 39 ; 00000027H
  000da	77 02		 ja	 SHORT $LN13@Adjust_man
  000dc	eb 5c		 jmp	 SHORT $LN8@Adjust_man
$LN13@Adjust_man:
  000de	8b f4		 mov	 esi, esp
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000ea	6a 00		 push	 0
  000ec	68 ac 00 00 00	 push	 172			; 000000acH
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@MNEMJBML@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000f6	6a 02		 push	 2
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000fe	83 c4 18	 add	 esp, 24			; 00000018H
  00101	3b f4		 cmp	 esi, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00108	83 f8 01	 cmp	 eax, 1
  0010b	75 01		 jne	 SHORT $LN20@Adjust_man
  0010d	cc		 int	 3
$LN20@Adjust_man:
  0010e	8b f4		 mov	 esi, esp
  00110	6a 00		 push	 0
  00112	68 ac 00 00 00	 push	 172			; 000000acH
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_1NA@MJBOBEJL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  00126	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0012c	83 c4 14	 add	 esp, 20			; 00000014H
  0012f	3b f4		 cmp	 esi, esp
  00131	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00136	33 c0		 xor	 eax, eax
  00138	75 a4		 jne	 SHORT $LN13@Adjust_man
$LN8@Adjust_man:
  0013a	33 c9		 xor	 ecx, ecx
  0013c	75 92		 jne	 SHORT $LN10@Adjust_man

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0013e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00141	8b 45 f8	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  00144	89 02		 mov	 DWORD PTR [edx], eax

; 174  : }

  00146	5e		 pop	 esi
  00147	83 c4 10	 add	 esp, 16			; 00000010H
  0014a	3b ec		 cmp	 ebp, esp
  0014c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00151	8b e5		 mov	 esp, ebp
  00153	5d		 pop	 ebp
  00154	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 84   :         void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __79D216CD_xmemory
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 85   :         return ::operator new(_Bytes);

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00016	83 c4 04	 add	 esp, 4

; 86   :     }

  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __FF458F76_exception
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 321  :     _THROW(bad_array_new_length{});

  00025	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00028	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0002d	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00032	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@Throw_bad_:

; 322  : }

  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@ABV01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __B0A13A33_vcruntime_exception@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 140  :         : bad_alloc("bad array new length")

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AAE@QBD@Z ; std::bad_alloc::bad_alloc

; 141  :     {

  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 c4 04	 add	 esp, 4
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 130  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __B0A13A33_vcruntime_exception@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 129  :         : exception(_Message, 1)

  00018	6a 01		 push	 1
  0001a	8b 45 08	 mov	 eax, DWORD PTR __Message$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ??0exception@std@@QAE@QBDH@Z ; std::exception::exception

; 130  :     {

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 131  :     }

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __B0A13A33_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00028	74 0b		 je	 SHORT $LN3@what
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00030	89 55 f8	 mov	 DWORD PTR tv69[ebp], edx
  00033	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 96   :     }

  0003f	83 c4 08	 add	 esp, 8
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 89   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __B0A13A33_vcruntime_exception@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 04	 add	 ecx, 4
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ___std_exception_destroy
  0002d	83 c4 04	 add	 esp, 4

; 91   :     }

  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __B0A13A33_vcruntime_exception@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

  00021	33 c9		 xor	 ecx, ecx
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	83 c2 04	 add	 edx, 4
  00029	89 0a		 mov	 DWORD PTR [edx], ecx
  0002b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 c0 04	 add	 eax, 4
  00034	50		 push	 eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR __Other$[ebp]
  00038	83 c1 04	 add	 ecx, 4
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ___std_exception_copy
  00041	83 c4 08	 add	 esp, 8

; 74   :     }

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	83 c4 04	 add	 esp, 4
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET __B0A13A33_vcruntime_exception@h
  00013	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

  00021	33 c9		 xor	 ecx, ecx
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	83 c2 04	 add	 edx, 4
  00029	89 0a		 mov	 DWORD PTR [edx], ecx
  0002b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 67   :         _Data._What = _Message;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Message$[ebp]
  00034	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 68   :     }

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\compare
;	COMDAT ??Mstd@@YA_NUstrong_ordering@0@$$T@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
__Val$ = 8						; size = 1
___formal$ = 12						; size = 4
??Mstd@@YA_NUstrong_ordering@0@$$T@Z PROC		; std::operator<, COMDAT

; 189  :     _NODISCARD friend constexpr bool operator<(const strong_ordering _Val, _Literal_zero) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET __DD5FCA34_compare
  00010	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 190  :         return _Val._Value < 0;

  00015	0f be 45 08	 movsx	 eax, BYTE PTR __Val$[ebp]
  00019	85 c0		 test	 eax, eax
  0001b	7d 09		 jge	 SHORT $LN3@operator
  0001d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00024	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@operator:
  0002d	8a 45 fc	 mov	 al, BYTE PTR tv66[ebp]

; 191  :     }

  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??Mstd@@YA_NUstrong_ordering@0@$$T@Z ENDP		; std::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 167  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __97D3638F_vcruntime_new@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 168  :         (void)_Size;
; 169  :         return _Where;

  0000d	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 170  :     }

  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 556  :     _NODISCARD static constexpr int(max)() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __7FE5F402_limits
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 557  :         return INT_MAX;

  0000d	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 558  :     }

  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtr1common
;	COMDAT ?is_constant_evaluated@std@@YA_NXZ
_TEXT	SEGMENT
?is_constant_evaluated@std@@YA_NXZ PROC			; std::is_constant_evaluated, COMDAT

; 180  : _NODISCARD constexpr bool is_constant_evaluated() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __47F37C5A_xtr1common
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 181  :     return __builtin_is_constant_evaluated();

  0000d	32 c0		 xor	 al, al

; 182  : }

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?is_constant_evaluated@std@@YA_NXZ ENDP			; std::is_constant_evaluated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 234  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __93DC0B45_wchar@h
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 235  :         #pragma warning(suppress: 6386) // Buffer overrun
; 236  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  0000d	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00010	d1 e0		 shl	 eax, 1
  00012	50		 push	 eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 _memcpy
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 237  :     }

  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Animator.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __6C52B218_Animator@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Animator.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __6C52B218_Animator@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Animator.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __6C52B218_Animator@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\theob\Documents\GitHub\as-pts1\travail\ProjetTutore1\Animator.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET __6C52B218_Animator@cpp
  00008	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
